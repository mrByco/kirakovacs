var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AutocompleteComponent.html",[0,0.3,1,1.167]],["body/components/AutocompleteComponent.html",[0,0.434,1,1.839,2,1.269,3,0.152,4,0.152,5,2.347,6,1.227,7,1.118,8,0.134,9,2.86,10,1.451,11,2.753,12,0.976,13,1.715,14,2.038,15,5.151,16,5.487,17,0.018,18,4.232,19,0.403,20,4.232,21,4.232,22,4.232,23,3.273,24,4.232,25,5.487,26,5.487,27,5.487,28,3.963,29,4.614,30,2.605,31,2.918,32,3.315,33,3.86,34,3.103,35,4.73,36,4.73,37,3.315,38,2.837,39,2.605,40,3.315,41,3.563,42,1.388,43,5.975,44,0.43,45,5.487,46,5.487,47,5.487,48,1.161,49,2.999,50,4.716,51,1.451,52,5.487,53,5.487,54,5.487,55,3.318,56,3.315,57,0.334,58,0.791,59,1.312,60,3.317,61,4.716,62,3.317,63,1.575,64,3.317,65,3.86,66,3.317,67,3.317,68,1.11,69,0.882,70,4.716,71,3.317,72,0.681,73,0.873,74,0.412,75,1.238,76,1.269,77,3.178,78,3.317,79,4.232,80,1.665,81,3.317,82,2.85,83,3.317,84,1.026,85,2.432,86,3.317,87,0.251,88,1.699,89,3.318,90,2.86,91,0.187,92,3.317,93,4.066,94,0.893,95,2.508,96,2.86,97,1.764,98,0.152,99,0.266,100,3.317,101,3.317,102,5.487,103,3.317,104,3.317,105,3.317,106,1.419,107,4.716,108,2.85,109,3.317,110,2.334,111,3.317,112,2.005,113,3.317,114,2.005,115,3.317,116,2.86,117,3.317,118,3.317,119,1.234,120,3.317,121,3.317,122,3.317,123,4.716,124,3.317,125,3.317,126,1.227,127,1.689,128,1.388,129,0.817,130,2.209,131,1.227,132,1.227,133,1.021,134,2.334,135,1.021,136,0.781,137,1.021,138,1.227,139,0.976,140,1.118,141,1.021,142,1.021,143,1.227,144,1.021,145,1.227,146,0.934,147,1.227,148,1.021,149,1.227,150,1.227,151,1.021,152,1.021,153,1.227,154,1.021,155,1.227,156,1.021,157,1.227,158,1.021,159,1.227,160,1.021,161,0.893,162,0.976,163,0.893,164,1.227,165,0.976,166,1.227,167,0.681,168,1.227,169,0.976,170,1.171,171,1.227,172,0.01,173,0.01]],["title/components/ClassEditorComponent.html",[0,0.3,133,1.167]],["body/components/ClassEditorComponent.html",[0,0.519,1,1.451,2,1.608,3,0.215,4,0.215,6,1.743,7,1.589,8,0.191,12,1.387,13,1.773,14,2.113,17,0.017,19,0.318,42,1.758,51,1.839,57,0.24,59,0.882,73,0.958,87,0.273,88,1.608,91,0.266,98,0.215,99,0.389,126,1.743,127,2.018,128,1.758,129,1.161,130,2.549,131,1.743,132,1.743,133,2.122,134,2.63,135,1.451,136,1.11,137,1.451,138,1.743,139,1.387,140,1.589,141,1.451,142,1.451,143,1.743,144,1.451,145,1.743,146,1.327,147,1.743,148,1.451,149,1.743,150,1.743,151,1.451,152,1.451,153,1.743,154,1.451,155,1.743,156,1.451,157,1.743,158,1.451,159,1.743,160,1.451,161,1.269,162,1.387,163,1.269,164,1.743,165,1.387,166,1.743,167,0.968,168,1.743,169,1.387,170,1.664,171,1.743,172,0.013,173,0.013,174,5.15,175,2.667,176,2.556,177,2.556,178,3.61,179,5.654,180,3.114,181,3.114,182,3.291,183,4.065,184,2.017,185,2.667]],["title/interfaces/ComponentConfig.html",[186,0.37,187,1.116]],["body/interfaces/ComponentConfig.html",[0,0.271,3,0.156,4,0.156,8,0.138,17,0.018,19,0.231,44,0.44,57,0.373,58,0.897,59,0.64,73,0.5,74,0.752,75,1.187,84,0.64,85,2.271,87,0.311,91,0.193,94,0.92,95,1.819,97,1.819,98,0.255,99,0.193,119,1.679,136,1.636,172,0.011,173,0.011,180,2.876,186,0.47,187,2.107,188,1.101,189,2.406,190,2.5,191,3.42,192,2.563,193,3.42,194,1.24,195,3.716,196,4.261,197,3.925,198,3.716,199,2.638,200,2.066,201,2.638,202,2.638,203,2.638,204,2.638,205,2.638,206,3.716,207,2.406,208,2.638,209,3.371,210,2.221,211,1.716,212,2.066,213,2.066,214,3.204,215,2.066,216,2.418,217,1.392,218,1.624,219,2.056,220,1.053,221,2.638,222,2.638,223,1.199,224,1.658,225,2.638,226,2.638,227,2.638,228,2.638,229,2.638,230,2.638,231,2.638,232,2.638,233,3.716,234,2.638,235,1.688,236,2.638,237,2.638,238,2.638,239,2.638,240,2.638,241,2.638,242,3.716,243,2.638,244,2.066,245,2.638,246,2.638,247,2.638,248,1.705,249,2.638,250,2.638,251,2.638,252,3.716,253,0.92,254,2.638,255,2.638,256,2.638,257,3.716,258,2.638,259,2.638,260,2.638,261,2.638,262,2.221,263,2.638,264,2.638,265,2.638,266,1.868,267,2.638,268,0.88,269,2.638,270,2.638,271,2.066,272,2.638,273,2.638,274,2.066,275,2.406,276,2.066,277,2.406,278,2.221,279,2.406,280,2.638,281,2.638,282,2.638,283,2.638,284,2.638,285,2.638,286,2.638,287,2.638,288,2.638,289,2.638,290,2.638,291,2.638,292,2.638,293,2.638,294,2.638,295,2.638,296,2.066,297,2.638,298,2.638,299,2.638,300,4.303,301,1.868,302,2.638,303,2.638,304,2.638,305,2.638,306,2.638,307,2.638,308,2.638,309,2.638,310,2.638,311,2.638,312,2.638,313,2.638,314,2.638,315,2.638,316,1.934,317,2.638,318,2.406,319,2.638]],["title/interfaces/ComponentCreator.html",[186,0.37,320,2.016]],["body/interfaces/ComponentCreator.html",[0,0.535,3,0.184,4,0.184,8,0.163,17,0.018,19,0.494,23,2.734,38,2.883,39,1.908,44,0.491,57,0.355,58,0.847,63,2.557,85,2.191,87,0.296,91,0.227,94,1.082,98,0.277,99,0.227,172,0.012,173,0.012,186,0.525,187,1.183,188,1.294,190,1.354,194,1.386,200,2.429,214,3.393,218,1.908,219,1.294,220,1.869,223,1.454,224,1.211,235,1.459,253,1.634,266,2.837,271,2.429,301,2.514,316,2.273,320,3.449,321,2.273,322,2.273,323,2.828,324,3.668,325,1.354,326,2.702,327,3.047,328,1.486,329,3.669,330,2.94,331,3.253,332,2.017,333,0.904,334,3.1,335,3.1,336,2.424,337,2.702,338,2.429,339,1.035,340,3.1,341,3.1,342,4.683,343,4.615,344,4.153,345,2.017,346,2.61,347,3.1,348,4.153,349,3.1,350,3.1,351,3.1,352,4.153,353,3.1,354,2.017,355,2.138,356,3.1,357,3.1,358,3.1,359,4.153,360,3.1,361,3.1,362,3.1,363,3.1,364,3.1,365,4.271,366,3.788,367,3.1,368,3.1,369,2.828,370,2.273,371,2.273,372,3.1,373,3.1,374,3.1,375,3.1,376,2.828,377,3.1,378,3.1,379,3.1,380,3.1,381,4.153,382,3.1,383,3.1,384,5.002,385,5.215,386,3.1,387,3.1,388,3.1]],["title/interfaces/Condition.html",[136,0.892,186,0.37]],["body/interfaces/Condition.html",[3,0.179,4,0.179,8,0.159,13,0.883,17,0.018,19,0.265,44,0.483,56,2.371,57,0.371,58,0.871,74,0.798,75,1.385,84,0.734,87,0.179,91,0.221,98,0.274,99,0.221,119,1.703,136,1.714,172,0.012,173,0.012,186,0.517,188,1.264,194,1.01,219,1.264,223,1.442,235,1.509,248,1.491,253,1.729,268,1.819,274,3.881,296,3.201,339,1.364,389,2.761,390,2.834,391,4.355,392,3.881,393,4.355,394,5.449,395,4.341,396,3.223,397,3.027,398,2.659,399,2.371,400,2.087,401,3.027,402,1.959,403,4.087,404,3.027,405,3.027,406,3.027,407,4.087,408,3.027,409,3.027,410,3.027,411,4.954,412,3.027,413,3.027,414,3.027,415,3.027,416,3.027,417,4.626,418,4.954,419,3.027,420,3.027,421,3.027,422,3.027,423,3.027,424,3.027,425,3.027,426,3.027,427,3.027,428,3.027,429,3.027,430,4.087,431,3.027,432,3.027,433,3.027,434,3.027,435,3.027,436,3.027,437,3.027,438,3.027,439,3.027,440,3.027,441,3.027,442,3.027,443,3.027,444,3.027,445,2.548,446,2.548,447,2.761,448,3.027]],["title/components/ConditionEditorComponent.html",[0,0.3,135,1.167]],["body/components/ConditionEditorComponent.html",[0,0.446,1,0.775,2,1.036,3,0.115,4,0.115,5,1.998,6,0.931,7,0.849,8,0.102,10,1.184,12,0.741,13,1.658,14,1.963,15,4.026,17,0.018,19,0.353,23,2.103,28,3.403,29,3.285,30,2.217,31,3.158,32,2.822,33,3.285,34,2.641,35,4.026,36,4.026,37,2.822,38,3.025,42,0.741,44,0.351,48,0.947,51,1.184,57,0.37,58,0.85,59,1.378,68,1.637,69,1.285,72,1.391,73,1.027,74,0.841,75,1.249,76,0.678,84,0.471,87,0.213,88,1.036,91,0.142,98,0.115,99,0.217,119,0.866,126,0.931,127,1.437,128,1.132,129,0.62,130,1.933,131,0.931,132,0.931,133,0.775,134,2.082,135,1.609,136,1.786,137,0.775,138,0.931,139,0.741,140,0.849,141,0.775,142,0.775,143,0.931,144,0.775,145,0.931,146,0.709,147,0.931,148,0.775,149,0.931,150,0.931,151,0.775,152,0.775,153,0.931,154,0.775,155,0.931,156,0.775,157,0.931,158,0.775,159,0.931,160,0.775,161,0.678,162,0.741,163,0.678,164,0.931,165,0.741,166,0.931,167,0.517,168,0.931,169,0.741,170,0.889,171,0.931,172,0.009,173,0.009,175,1.424,176,1.646,177,1.646,178,2.325,181,2.217,182,2.343,183,2.171,184,1.077,185,1.424,212,2.325,223,0.827,235,1.051,248,1.083,253,1.257,268,1.346,301,2.184,330,1.901,333,0.866,336,2.103,339,1.346,390,2.599,391,4.24,392,3.588,393,3.032,395,3.159,400,3.473,445,2.499,446,2.499,447,1.772,449,6.379,450,2.103,451,3.602,452,4.67,453,1.646,454,2.968,455,5.632,456,4.67,457,5.228,458,3.848,459,2.482,460,3.848,461,3.848,462,3.848,463,3.848,464,2.499,465,3.317,466,3.848,467,5.228,468,3.848,469,2.325,470,4.67,471,2.518,472,3.848,473,2.518,474,3.848,475,2.518,476,2.171,477,3.848,478,2.518,479,3.848,480,2.518,481,3.848,482,2.518,483,3.848,484,2.518,485,3.848,486,2.518,487,2.518,488,3.848,489,2.518,490,3.848,491,2.518,492,2.171,493,3.848,494,2.171,495,2.171,496,2.171,497,2.518,498,2.171,499,2.518,500,2.518,501,2.518,502,2.518,503,2.171,504,4.856,505,3.848,506,2.518,507,4.67,508,2.518,509,2.518,510,2.518,511,2.518,512,2.518,513,2.518,514,2.518,515,2.518,516,2.518,517,2.707,518,3.848,519,2.518,520,2.518,521,4.507,522,2.518,523,2.518,524,2.518,525,2.518,526,2.518,527,2.518,528,2.518,529,3.848,530,3.848,531,2.171,532,1.522,533,2.518,534,2.518,535,2.518,536,2.518,537,2.518,538,2.518,539,2.518,540,4.67,541,1.196,542,2.518,543,2.518,544,1.522,545,2.518,546,2.518,547,2.171,548,4.033,549,2.518,550,2.518,551,2.518,552,2.518,553,1.635,554,2.518,555,2.236,556,3.848,557,3.848,558,3.848]],["title/pipes/ConditionPipe.html",[114,2.291,559,2.462]],["body/pipes/ConditionPipe.html",[3,0.248,4,0.248,8,0.22,10,1.671,12,1.598,17,0.018,44,0.496,48,1.337,57,0.332,59,1.219,68,1.278,72,1.115,73,1.021,74,0.675,75,1.278,87,0.298,91,0.306,98,0.248,99,0.306,114,3.939,119,1.467,136,1.705,172,0.014,173,0.014,235,1.467,268,1.678,333,1.222,339,1.398,400,3.715,559,4.233,560,5.431,561,4.682,562,6.519,563,3.072,564,6.519,565,6.985,566,5.431,567,3.526,568,6.519,569,5.431,570,6.519,571,5.431,572,5.431,573,5.431]],["title/interfaces/ConditionValue.html",[186,0.37,395,2.291]],["body/interfaces/ConditionValue.html",[3,0.183,4,0.183,8,0.162,13,0.902,17,0.018,19,0.271,44,0.49,56,2.423,57,0.33,58,0.858,74,0.805,75,1.449,84,0.75,87,0.183,91,0.226,98,0.277,99,0.226,119,1.708,136,1.699,172,0.012,173,0.012,186,0.524,188,1.291,194,1.032,219,1.291,223,1.453,235,1.52,248,1.513,253,1.744,268,1.829,274,3.915,296,3.248,339,1.384,389,2.821,390,2.807,391,3.49,392,2.423,393,3.937,394,5.699,395,4.292,396,3.251,397,3.093,398,2.698,399,2.423,400,2.133,401,3.093,402,1.987,403,4.146,404,3.093,405,3.093,406,3.093,407,4.146,408,3.093,409,3.093,410,3.093,411,4.997,412,3.093,413,3.093,414,3.093,415,3.093,416,3.093,417,4.677,418,4.997,419,3.093,420,3.093,421,3.093,422,3.093,423,3.093,424,3.093,425,3.093,426,3.093,427,3.093,428,3.093,429,3.093,430,4.146,431,3.093,432,3.093,433,3.093,434,3.093,435,3.093,436,3.093,437,3.093,438,3.093,439,3.093,440,3.093,441,3.093,442,3.093,443,3.093,444,3.093,445,2.604,446,2.604,447,2.821,448,3.093]],["title/modules/ConditionsModule.html",[574,2.291,575,2.667]],["body/modules/ConditionsModule.html",[3,0.255,4,0.255,8,0.226,17,0.017,87,0.323,91,0.314,98,0.255,99,0.314,106,2.386,172,0.015,173,0.015,559,5.097,575,5.38,576,2.648,577,3.145,578,4.808,579,4.808,580,4.808,581,3.746,582,3.154,583,5.576,584,4.002,585,4.002,586,4.3,587,2.966,588,3.746,589,5.576,590,3.37]],["title/injectables/ConditionsService.html",[194,0.976,400,2.016]],["body/injectables/ConditionsService.html",[3,0.15,4,0.15,8,0.133,13,0.738,17,0.018,19,0.221,48,1.151,56,1.981,57,0.362,58,0.879,59,1.309,68,1.647,72,1.437,73,1.022,74,0.869,75,1.454,84,0.613,87,0.15,91,0.185,98,0.249,99,0.185,119,1.658,136,1.831,172,0.01,173,0.01,186,0.456,194,0.844,219,1.055,223,1.351,235,1.669,248,1.673,253,1.952,268,1.827,274,3.591,296,2.825,339,1.204,389,2.306,390,2.838,391,3.036,392,1.981,393,3.539,394,4.847,395,4.453,396,3.45,397,2.528,398,2.347,399,1.981,400,2.487,401,3.607,402,2.416,403,3.607,404,2.528,405,3.607,406,2.528,407,4.584,408,2.528,409,2.528,410,3.607,411,4.584,412,2.528,413,2.528,414,2.528,415,2.528,416,3.607,417,4.204,418,4.584,419,2.528,420,2.528,421,2.528,422,2.528,423,2.528,424,3.607,425,2.528,426,2.528,427,3.607,428,2.528,429,2.528,430,3.607,431,2.528,432,3.607,433,2.528,434,2.528,435,3.607,436,2.528,437,2.528,438,3.607,439,2.528,440,2.528,441,2.528,442,2.528,443,2.528,444,2.528,445,2.129,446,2.129,447,2.306,448,2.528,567,4.08,591,1.854,592,4.676,593,4.676,594,4.676,595,4.676,596,4.676,597,4.676,598,4.676,599,4.676,600,3.278,601,3.278,602,3.278,603,3.278,604,3.278,605,3.278,606,3.278,607,3.278,608,3.278]],["title/interfaces/ConfigModal.html",[186,0.37,609,2.462]],["body/interfaces/ConfigModal.html",[0,0.517,2,1.26,3,0.15,4,0.15,8,0.133,10,1.011,11,2.35,13,0.739,14,0.884,17,0.018,19,0.222,38,2.223,42,0.967,44,0.427,49,1.648,57,0.386,58,0.858,63,2.223,69,0.614,76,0.884,84,0.876,85,2.221,87,0.307,88,1.601,91,0.185,94,0.884,98,0.214,99,0.185,119,1.338,127,1.831,146,0.924,167,1.291,172,0.01,173,0.01,176,1.405,177,1.405,181,1.56,184,1.405,185,1.858,186,0.457,187,1.851,188,1.058,190,2.318,215,1.985,216,2.738,217,1.337,220,1.679,223,1.007,224,1.575,235,1.228,244,1.985,248,1.536,266,1.816,268,1.205,320,2.902,322,1.858,324,3.557,325,1.107,328,1.214,331,1.985,332,2.738,333,0.739,337,3.281,339,1.531,355,3.345,402,1.214,450,2.108,453,1.405,459,1.56,544,1.985,555,2.797,609,3.543,610,2.133,611,4.083,612,3.557,613,3.578,614,4.016,615,3.156,616,2.649,617,1.578,618,2.311,619,1.985,620,2.133,621,2.311,622,2.223,623,3.041,624,4.083,625,3.294,626,3.612,627,3.297,628,1.858,629,1.858,630,1.858,631,2.133,632,1.858,633,1.858,634,2.533,635,1.747,636,2.533,637,1.747,638,1.816,639,2.533,640,2.533,641,2.133,642,2.311,643,3.294,644,2.533,645,2.533,646,2.533,647,2.533,648,2.533,649,2.533,650,2.133,651,2.311,652,3.041,653,2.311,654,2.533,655,1.747,656,3.294,657,2.49,658,2.533,659,2.533,660,3.612,661,2.533,662,2.533,663,4.209,664,2.533,665,2.533,666,1.985,667,2.533,668,3.612,669,2.311,670,2.533,671,2.533,672,2.533,673,2.533,674,2.533,675,2.533,676,2.533,677,2.533,678,2.533,679,2.533,680,2.533,681,2.533,682,2.533,683,2.533,684,3.612,685,2.533,686,1.985,687,2.533,688,2.311,689,2.533,690,2.533,691,3.612,692,4.209,693,2.533,694,2.533,695,2.533,696,2.533,697,2.133,698,2.533,699,1.985,700,2.533,701,3.612,702,2.533,703,2.533,704,2.533,705,3.294,706,2.533,707,2.133,708,2.133,709,2.533,710,2.311,711,2.533,712,2.533,713,2.311,714,2.533,715,2.533,716,2.533,717,2.533,718,2.533,719,2.533,720,2.533]],["title/injectables/ConfigService.html",[194,0.976,220,1.167]],["body/injectables/ConfigService.html",[0,0.316,3,0.121,4,0.121,8,0.107,17,0.018,19,0.178,44,0.364,48,0.983,57,0.378,58,0.898,59,1.387,68,1.729,69,1.132,72,1.443,73,1.037,74,0.873,75,1.128,84,0.494,85,2.342,87,0.287,91,0.149,94,0.711,95,1.405,97,1.405,98,0.22,99,0.149,119,1.61,136,1.132,172,0.009,173,0.009,180,1.255,186,0.389,187,2.191,189,1.859,190,2.488,192,1.405,194,1.027,195,3.078,196,4.419,197,3.383,198,3.078,199,2.038,200,1.597,201,2.038,202,2.038,203,2.038,204,2.038,205,2.038,206,3.078,207,1.859,208,2.038,209,2.906,210,1.716,211,1.326,212,1.597,213,1.597,214,3.245,215,1.597,216,2.003,217,1.075,218,1.255,219,1.852,220,1.228,221,3.71,222,3.078,223,1.034,224,1.596,225,3.078,226,2.038,227,2.038,228,2.038,229,2.038,230,2.038,231,2.038,232,3.078,233,3.078,234,2.038,235,1.758,236,4.133,237,2.038,238,4.133,239,2.038,240,3.078,241,2.038,242,3.078,243,2.038,244,1.597,245,2.038,246,2.038,247,2.038,248,1.82,249,2.038,250,2.038,251,2.038,252,3.078,253,1.294,254,3.078,255,2.038,256,3.078,257,3.078,258,2.038,259,2.038,260,2.038,261,2.038,262,1.716,263,3.078,264,2.038,265,2.038,266,1.865,267,3.078,268,1.238,269,2.038,270,3.078,271,1.597,272,3.078,273,2.038,274,2.412,275,2.808,276,2.412,277,2.808,278,2.592,279,2.808,280,3.078,281,2.038,282,3.078,283,2.038,284,2.038,285,2.038,286,2.038,287,3.078,288,2.038,289,2.038,290,2.038,291,2.038,292,2.038,293,2.038,294,2.038,295,2.038,296,1.597,297,3.078,298,2.038,299,3.078,300,3.71,301,1.547,302,2.038,303,2.038,304,2.038,305,2.038,306,2.038,307,2.038,308,2.038,309,2.038,310,2.038,311,2.038,312,4.133,313,2.038,314,4.133,315,2.038,316,3.031,317,2.038,318,3.77,319,2.038,464,2.592,541,1.895,591,1.495,721,3.991,722,3.991,723,3.991,724,3.991,725,3.991,726,3.078,727,3.991,728,3.991,729,3.991,730,3.991,731,3.991,732,2.642,733,2.642,734,2.642,735,2.642,736,2.642,737,2.642,738,2.642,739,2.642,740,2.642,741,2.642,742,2.642,743,2.642,744,2.642,745,2.642,746,2.642,747,2.642,748,2.642,749,2.642,750,2.642,751,2.642,752,2.642]],["title/interfaces/Configurable.html",[186,0.37,617,1.277]],["body/interfaces/Configurable.html",[3,0.175,4,0.175,8,0.155,17,0.018,19,0.259,44,0.475,57,0.369,58,0.874,63,3.019,69,0.975,74,0.887,75,0.751,84,1.189,85,2.121,87,0.304,91,0.216,94,1.031,95,2.037,97,2.037,98,0.238,99,0.216,119,1.431,128,1.871,161,1.79,163,1.031,167,0.786,172,0.012,173,0.012,186,0.373,188,1.233,190,2.366,194,1.341,211,2.615,218,1.818,219,1.233,223,0.823,224,0.862,248,2.039,253,1.031,328,1.416,330,2.411,390,2.351,396,3.191,402,2.537,541,1.818,615,1.922,617,2.566,753,2.954,754,4.473,755,4.904,756,4.904,757,4.904,758,3.596,759,3.301,760,2.954,761,1.922,762,3.301,763,3.301,764,3.35,765,3.301,766,3.301,767,3.301,768,2.954,769,2.954,770,2.954,771,4.904,772,2.954,773,3.301,774,3.301,775,3.301,776,3.384,777,2.954,778,3.301,779,2.694,780,3.301,781,3.301,782,5.915,783,2.954,784,3.301,785,5.915,786,3.301,787,3.301,788,3.301,789,3.301,790,5.734,791,5.107,792,4.492,793,4.492,794,3.301,795,3.301,796,2.954,797,3.301,798,3.301,799,3.666,800,4.492,801,3.301,802,3.301,803,3.301,804,3.301,805,3.301,806,3.301,807,3.301,808,2.954,809,2.954,810,3.301,811,3.301]],["title/directives/ConfigurableDirective.html",[129,0.933,163,1.02]],["body/directives/ConfigurableDirective.html",[3,0.148,4,0.148,8,0.131,10,1.427,11,2.718,12,0.953,13,1.043,14,1.684,17,0.018,19,0.219,44,0.423,48,1.141,49,2.967,51,1.427,57,0.377,58,0.786,59,1.441,68,1.666,69,1.324,72,1.285,73,0.914,74,0.777,80,2.967,87,0.247,88,1.845,91,0.183,98,0.148,99,0.367,108,4.5,110,4.159,119,1.508,128,1.594,129,1.141,161,1.458,162,0.953,163,1.248,167,0.665,172,0.01,173,0.01,190,1.825,223,0.997,253,1.458,268,0.834,328,1.198,330,1.887,333,1.043,390,2.002,396,2.718,402,2.186,469,2.802,504,3.998,541,2.202,617,2.193,655,1.723,707,2.104,754,3.81,755,4.177,756,4.825,757,4.56,758,3.063,761,3.363,764,3.538,771,3.576,812,2.793,813,5.415,814,5.911,815,6.701,816,5.911,817,4.637,818,5.911,819,5.911,820,5.415,821,3.998,822,4.637,823,4.637,824,5.415,825,2.793,826,3.78,827,3.144,828,4.669,829,5.096,830,4.637,831,3.24,832,3.24,833,3.24,834,3.24,835,3.24,836,3.24,837,3.24,838,3.24,839,4.637,840,5.911,841,4.637,842,4.637,843,4.637,844,4.637,845,3.24,846,4.637,847,7.237,848,4.637,849,3.24,850,4.637,851,4.637,852,4.637,853,4.637,854,4.637,855,4.637,856,3.24,857,3.24,858,3.24,859,3.24,860,4.637,861,3.24,862,2.793,863,3.24,864,3.24,865,3.24,866,3.24,867,3.24,868,2.793,869,3.24,870,2.793,871,6.255,872,3.24,873,3.24,874,3.24,875,3.24,876,3.24,877,3.24,878,2.104,879,3.24,880,2.793,881,3.24,882,3.24,883,3.24,884,3.24,885,3.24,886,3.24,887,3.24,888,4.637,889,4.637,890,3.24,891,4.637,892,4.637,893,3.24,894,2.793,895,2.793]],["title/modules/ConfigurableModule.html",[574,2.291,896,2.462]],["body/modules/ConfigurableModule.html",[3,0.253,4,0.253,8,0.224,17,0.018,87,0.322,91,0.312,98,0.253,99,0.312,106,2.37,163,2.111,172,0.015,173,0.015,576,2.63,577,3.132,581,3.731,582,3.133,584,3.986,585,3.986,586,4.283,587,2.946,588,3.731,590,3.347,760,4.273,896,4.959,897,4.776,898,4.776,899,4.776,900,5.539]],["title/injectables/ConfigurableService.html",[194,0.976,761,1.902]],["body/injectables/ConfigurableService.html",[3,0.155,4,0.155,8,0.137,17,0.018,19,0.229,44,0.437,48,1.179,57,0.354,58,0.827,59,1.394,68,1.632,69,1.319,72,1.307,73,0.93,74,0.876,75,1.248,76,1.624,84,1.27,85,2.261,87,0.291,91,0.191,94,0.913,95,1.804,97,1.804,98,0.219,99,0.191,119,1.358,128,1.873,161,1.289,163,0.913,167,0.697,172,0.011,173,0.011,186,0.331,190,2.145,194,1.233,211,3.028,218,1.611,219,1.092,223,0.729,224,0.763,248,2.054,253,1.495,328,1.254,330,1.381,390,1.254,396,1.702,402,1.771,469,2.895,541,1.611,591,1.919,615,1.702,617,2.616,753,2.616,754,2.386,755,2.616,756,2.616,757,2.616,758,1.919,759,2.924,760,2.616,761,2.404,762,4.788,763,4.13,764,3.737,765,4.13,766,4.13,767,4.13,768,2.616,769,2.616,770,2.616,771,4.655,772,2.616,773,4.788,774,4.13,775,4.788,776,3.111,777,2.616,778,2.924,779,2.386,780,4.788,781,2.924,782,5.696,783,4.284,784,4.13,785,5.696,786,4.13,787,2.924,788,4.13,789,4.13,790,5.488,791,4.788,792,4.13,793,4.13,794,2.924,795,2.924,796,2.616,797,2.924,798,2.924,799,3.37,800,4.13,801,2.924,802,5.203,803,2.924,804,2.924,805,5.203,806,2.924,807,4.788,808,4.655,809,2.616,810,2.924,811,2.924,901,4.79,902,4.79,903,4.79,904,4.79,905,3.392,906,3.392,907,3.392,908,3.392,909,3.392,910,3.392,911,3.392,912,3.392,913,3.392,914,3.392,915,3.392,916,3.392,917,3.392,918,3.392,919,3.392,920,3.392,921,3.392]],["title/components/ConfiguratorComponent.html",[0,0.3,137,1.167]],["body/components/ConfiguratorComponent.html",[0,0.478,1,0.73,2,0.989,3,0.108,4,0.108,5,1.014,6,0.877,7,1.515,8,0.096,10,1.131,11,2.257,12,0.698,13,1.643,14,1.956,17,0.018,19,0.37,23,1.654,28,2.22,38,2.405,42,0.698,44,0.335,48,0.904,49,2.542,51,1.131,57,0.368,58,0.527,59,1.366,68,1.423,69,1.131,72,1.125,73,0.913,74,0.681,75,1.185,76,1.56,77,2.694,80,2.257,84,0.444,85,1.83,87,0.299,88,1.21,91,0.134,94,0.638,96,2.044,97,1.261,98,0.168,99,0.207,108,2.717,119,0.533,126,0.877,127,1.384,128,1.081,129,0.584,130,1.873,131,0.877,132,0.877,133,0.73,134,2.026,135,0.73,136,0.558,137,1.559,138,0.877,139,0.698,140,1.238,141,0.73,142,0.73,143,0.877,144,0.73,145,0.877,146,0.667,147,0.877,148,0.73,149,0.877,150,0.877,151,0.73,152,1.131,153,0.877,154,0.73,155,0.877,156,0.73,157,0.877,158,0.73,159,0.877,160,0.73,161,1.475,162,0.698,163,0.638,164,0.877,165,0.698,166,0.877,167,0.754,168,0.877,169,0.698,170,0.837,171,0.877,172,0.008,173,0.008,176,1.571,177,1.571,180,1.126,181,2.135,182,1.19,184,1.014,185,1.341,187,1.323,190,1.238,211,1.19,214,1.844,216,1.19,217,0.965,220,2.017,223,1.379,224,1.14,235,1.304,253,0.638,262,1.54,266,2.344,268,0.946,301,1.744,325,2.105,333,0.827,339,1.687,346,1.54,355,2.392,365,1.668,366,1.668,402,1.873,453,1.571,531,2.044,532,1.433,541,1.126,544,2.717,555,1.571,563,1.341,611,1.54,612,1.341,613,2.915,616,2.865,617,2.037,618,1.668,619,1.433,622,1.126,627,2.717,635,1.261,637,2.694,638,2.487,652,1.54,653,2.584,697,1.54,758,1.341,761,3.289,764,2.544,777,1.829,779,1.668,799,1.668,827,2.915,922,1.829,923,3.673,924,3.673,925,4.497,926,3.469,927,5.065,928,6.414,929,4.497,930,4.497,931,5.065,932,3.907,933,3.563,934,4.227,935,3.673,936,5.065,937,4.497,938,2.371,939,3.673,940,2.833,941,2.544,942,3.907,943,2.371,944,2.371,945,3.673,946,2.371,947,2.371,948,3.167,949,3.167,950,2.371,951,1.924,952,2.371,953,3.673,954,2.371,955,3.673,956,3.673,957,3.673,958,2.371,959,3.673,960,2.371,961,2.371,962,3.469,963,3.167,964,2.371,965,2.371,966,2.371,967,2.371,968,2.371,969,2.371,970,2.371,971,3.673,972,2.371,973,3.673,974,2.371,975,2.044,976,1.829,977,4.497,978,3.877,979,2.371,980,2.044,981,1.829,982,2.044,983,1.54,984,1.54,985,1.54,986,1.54,987,1.54,988,1.54,989,1.54,990,2.371,991,2.371,992,2.371,993,2.371,994,2.371,995,2.371,996,2.371,997,2.371,998,2.371,999,2.371,1000,2.371,1001,2.371,1002,2.371,1003,2.044,1004,1.829,1005,2.371,1006,2.044,1007,2.044,1008,2.371,1009,2.371,1010,3.673,1011,2.371,1012,2.371,1013,2.044,1014,2.371,1015,2.371,1016,2.371,1017,2.044,1018,3.167,1019,2.371,1020,2.371,1021,2.371,1022,1.829,1023,2.044,1024,2.044,1025,2.371,1026,2.371,1027,2.044,1028,2.371,1029,2.371,1030,2.371,1031,2.044,1032,2.044,1033,2.371,1034,3.673,1035,3.673,1036,5.065,1037,2.371,1038,3.673,1039,4.497,1040,3.673,1041,2.044,1042,2.371,1043,2.371,1044,3.673,1045,2.371,1046,3.673,1047,3.673,1048,1.54,1049,3.673,1050,3.673,1051,3.673,1052,2.584,1053,3.167,1054,3.167,1055,2.371,1056,1.54,1057,1.844,1058,2.371,1059,2.371,1060,1.829,1061,2.371,1062,1.126,1063,2.371,1064,2.371,1065,1.668]],["title/interfaces/ConfiguratorContext.html",[182,1.902,186,0.37]],["body/interfaces/ConfiguratorContext.html",[0,0.547,2,1.615,3,0.217,4,0.217,8,0.192,17,0.018,19,0.321,44,0.548,57,0.363,58,0.557,63,2.85,69,0.888,87,0.301,98,0.301,161,1.861,167,0.975,172,0.013,173,0.013,181,3.458,182,3.012,186,0.642,187,2.034,188,1.529,224,1.555,268,1.97,325,2.403,328,1.756,398,3.012,402,2.433,553,3.897,612,3.91,613,3.192,617,2.403,622,3.124,628,2.686,629,2.686,630,2.686,632,2.686,633,2.686,637,3.979,638,2.823,655,3.192,764,3.394,878,3.897,941,3.91,983,3.083,984,3.083,985,3.083,986,3.083,987,3.083,988,3.083,989,3.083,1066,3.34,1067,4.629,1068,4.629,1069,4.222,1070,4.222]],["title/modules/ConfiguratorModule.html",[574,2.291,1071,2.462]],["body/modules/ConfiguratorModule.html",[3,0.201,4,0.201,8,0.178,17,0.018,87,0.348,91,0.248,98,0.201,99,0.248,106,1.883,133,2.197,135,2.197,137,2.343,139,2.101,141,2.197,146,2.009,148,2.197,156,2.343,158,2.197,172,0.013,173,0.013,345,2.209,354,2.209,576,2.09,577,2.715,581,3.234,582,2.49,584,3.455,585,3.455,586,3.712,587,2.341,588,3.234,590,3.455,949,3.795,982,3.795,1071,5.142,1072,3.795,1073,3.795,1074,3.795,1075,3.795,1076,4.6,1077,4.523,1078,4.402,1079,5.717,1080,3.396,1081,4.929,1082,2.859,1083,3.041,1084,4.402,1085,4.402,1086,2.859,1087,4.402,1088,3.795,1089,4.402,1090,4.402,1091,4.402,1092,4.402]],["title/interfaces/ConfiguratorOptions.html",[186,0.37,941,2.144]],["body/interfaces/ConfiguratorOptions.html",[0,0.468,2,1.249,3,0.212,4,0.212,8,0.188,17,0.018,19,0.313,44,0.54,57,0.38,58,0.544,69,0.868,74,0.967,87,0.297,98,0.297,161,1.592,167,0.953,172,0.013,173,0.013,181,2.809,182,2.33,186,0.635,187,1.741,188,1.495,224,1.044,268,2.037,325,2.194,328,1.716,398,2.33,402,1.716,553,3.014,612,2.626,613,2.469,617,2.194,622,3.537,628,2.626,629,2.626,630,2.626,632,2.626,633,2.626,637,3.463,638,2.294,655,2.469,764,2.626,878,3.014,941,3.683,983,4.452,984,4.452,985,4.452,986,4.452,987,4.452,988,4.452,989,4.452,1066,3.266,1067,3.581,1068,3.581,1069,3.266,1070,3.266]],["title/interfaces/ContainerConfig.html",[186,0.37,214,1.902]],["body/interfaces/ContainerConfig.html",[0,0.278,3,0.16,4,0.16,8,0.142,17,0.018,19,0.237,44,0.448,57,0.362,58,0.883,73,0.513,75,1.201,84,0.657,85,2.303,87,0.313,91,0.198,94,0.945,95,1.867,97,1.867,98,0.258,99,0.198,119,1.686,136,1.332,172,0.011,173,0.011,180,1.667,186,0.479,187,2.119,188,1.13,189,2.469,190,2.452,192,1.867,194,1.263,195,3.785,196,4.31,197,3.98,198,3.785,199,2.707,200,2.121,201,2.707,202,2.707,203,2.707,204,2.707,205,2.707,206,3.785,207,2.469,208,2.707,209,3.419,210,2.279,211,1.761,212,2.121,213,2.121,214,3.352,215,2.965,216,2.463,217,2.494,218,1.667,219,2.076,220,1.08,221,2.707,222,2.707,223,1.216,224,1.665,225,2.707,226,2.707,227,2.707,228,2.707,229,2.707,230,2.707,231,2.707,232,2.707,233,3.785,234,2.707,235,1.694,236,2.707,237,2.707,238,2.707,239,2.707,240,2.707,241,2.707,242,3.785,243,2.707,244,2.121,245,2.707,246,2.707,247,2.707,248,1.724,249,2.707,250,2.707,251,2.707,252,3.785,253,0.945,254,2.707,255,2.707,256,2.707,257,3.785,258,2.707,259,2.707,260,2.707,261,2.707,262,2.279,263,2.707,264,2.707,265,2.707,266,1.903,267,2.707,268,0.904,269,2.707,270,2.707,271,2.121,272,2.707,273,2.707,274,2.121,275,2.469,276,2.121,277,2.469,278,2.279,279,2.469,280,2.707,281,2.707,282,2.707,283,2.707,284,2.707,285,2.707,286,2.707,287,2.707,288,2.707,289,2.707,290,2.707,291,2.707,292,2.707,293,2.707,294,2.707,295,2.707,296,2.121,297,2.707,298,2.707,299,2.707,300,4.364,301,1.903,302,2.707,303,2.707,304,2.707,305,2.707,306,2.707,307,2.707,308,2.707,309,2.707,310,2.707,311,2.707,312,2.707,313,2.707,314,2.707,315,2.707,316,1.985,317,2.707,318,2.469,319,2.707]],["title/interfaces/ContainerIndex.html",[186,0.37,329,2.291]],["body/interfaces/ContainerIndex.html",[0,0.535,3,0.184,4,0.184,8,0.163,17,0.018,19,0.507,23,2.734,38,2.883,39,1.908,44,0.491,57,0.309,58,0.847,85,2.191,87,0.296,91,0.227,94,1.082,98,0.277,99,0.227,172,0.012,173,0.012,186,0.525,187,1.183,188,1.294,190,1.354,194,1.386,200,2.429,214,3.393,218,1.908,219,1.294,220,1.869,223,1.454,224,1.211,235,1.459,253,1.634,266,2.911,271,2.429,301,2.514,316,2.273,320,3.229,321,2.273,322,2.273,323,2.828,324,2.273,325,1.354,326,2.702,327,3.047,328,1.486,329,3.919,330,3.009,331,3.253,332,2.017,333,0.904,334,3.1,335,3.1,336,2.424,337,2.702,338,2.429,339,1.035,340,3.1,341,3.1,342,4.683,343,4.615,344,4.153,345,2.017,346,2.61,347,3.1,348,4.153,349,3.1,350,3.1,351,3.1,352,4.153,353,3.1,354,2.017,355,2.138,356,3.1,357,3.1,358,3.1,359,4.153,360,3.1,361,3.1,362,3.1,363,3.1,364,3.1,365,4.271,366,3.788,367,3.1,368,3.1,369,2.828,370,2.273,371,2.273,372,3.1,373,3.1,374,3.1,375,3.1,376,2.828,377,3.1,378,3.1,379,3.1,380,3.1,381,4.153,382,3.1,383,3.1,384,5.002,385,5.215,386,3.1,387,3.1,388,3.1]],["title/injectables/DragDropService.html",[194,0.976,332,1.902]],["body/injectables/DragDropService.html",[0,0.528,3,0.146,4,0.146,8,0.13,17,0.018,19,0.502,23,2.424,38,2.556,39,2.185,44,0.42,48,1.133,57,0.364,58,0.847,59,1.321,68,1.466,69,1.165,72,1.332,73,0.947,74,0.849,75,0.628,76,0.863,85,1.873,87,0.269,91,0.181,94,0.863,98,0.246,99,0.181,172,0.01,173,0.01,186,0.449,187,1.584,190,1.08,194,1.185,200,1.937,214,3.657,218,1.522,219,1.032,220,2.142,223,1.339,224,1.035,235,1.625,248,1.295,253,1.873,266,2.801,271,1.937,301,2.281,316,2.603,320,3.129,321,4.044,322,4.044,323,2.255,324,1.813,325,1.08,326,2.701,327,3.544,328,1.185,329,3.764,330,3.101,331,2.781,332,2.309,333,1.035,334,4.152,335,4.152,336,2.424,337,2.701,338,2.781,339,1.185,340,3.549,341,4.152,342,5.001,343,4.519,344,3.549,345,1.609,346,2.081,347,2.472,348,3.549,349,2.472,350,2.472,351,2.472,352,3.549,353,2.472,354,1.609,355,1.705,356,2.472,357,2.472,358,2.472,359,3.549,360,2.472,361,2.472,362,2.472,363,2.472,364,4.152,365,3.787,366,3.237,367,2.472,368,2.472,369,2.255,370,1.813,371,1.813,372,2.472,373,4.152,374,2.472,375,2.472,376,2.255,377,4.152,378,4.152,379,4.152,380,2.472,381,3.549,382,2.472,383,4.152,384,5.001,385,5.152,386,2.472,387,2.472,388,2.472,591,1.813,1093,1.937,1094,3.205,1095,3.205,1096,3.205,1097,3.205,1098,3.205,1099,3.205,1100,3.205,1101,3.205,1102,3.205,1103,3.205,1104,3.205,1105,3.205,1106,3.205,1107,3.205,1108,3.205]],["title/modules/DynamicViewsModule.html",[574,2.291,1109,2.462]],["body/modules/DynamicViewsModule.html",[3,0.232,4,0.232,8,0.205,17,0.018,87,0.343,91,0.286,98,0.232,99,0.286,106,2.171,142,2.279,160,2.388,172,0.014,173,0.014,321,2.87,345,2.547,354,2.547,576,2.41,577,2.97,581,3.538,582,2.87,584,3.78,585,3.78,586,4.062,587,2.699,588,3.538,590,3.78,896,4.808,1076,4.689,1081,5.393,1082,3.295,1088,4.375,1109,5.074,1110,4.375,1111,4.375,1112,4.375,1113,5.074,1114,5.074,1115,5.074,1116,5.074,1117,5.074,1118,5.074]],["title/components/FlexEditorComponent.html",[0,0.3,139,1.116]],["body/components/FlexEditorComponent.html",[0,0.335,1,0.663,2,0.917,3,0.098,4,0.098,5,0.922,6,0.797,7,0.726,8,0.087,10,1.049,12,0.634,13,1.62,14,1.914,17,0.018,19,0.145,29,3.917,30,1.618,31,2.249,34,2.392,40,1.302,41,1.399,42,1.003,44,0.311,48,0.839,51,1.049,57,0.332,58,0.748,59,1.272,68,0.995,69,0.899,72,0.868,73,0.813,74,0.525,75,1.492,76,1.499,87,0.193,88,0.917,91,0.121,95,1.146,98,0.098,99,0.238,106,2.056,119,0.767,126,0.797,127,1.301,128,1.003,129,0.53,130,2.236,131,0.797,132,0.797,133,0.663,134,1.936,135,0.663,136,0.507,137,0.663,138,0.797,139,1.415,140,2.49,141,0.663,142,0.663,143,0.797,144,0.663,145,0.797,146,0.606,147,0.797,148,0.663,149,0.797,150,0.797,151,0.663,152,1.049,153,0.797,154,0.663,155,0.797,156,0.663,157,0.797,158,0.663,159,0.797,160,0.663,161,0.58,162,0.634,163,0.58,164,0.797,165,0.634,166,0.797,167,0.442,168,0.797,169,0.634,170,0.76,171,0.797,172,0.008,173,0.009,175,1.219,178,2.555,180,2.486,186,0.21,187,1.244,192,3.657,217,2.93,220,1.916,223,0.463,224,0.951,235,0.951,301,0.835,325,0.726,328,0.797,333,0.767,336,3.385,337,3.764,450,1.904,453,1.458,454,2.629,459,1.618,464,3.121,469,2.059,492,1.857,494,1.857,495,1.857,496,1.857,498,1.857,532,1.302,548,1.662,555,2.056,563,1.928,623,1.399,635,1.813,657,1.146,686,1.302,699,1.302,934,1.662,951,3.216,1048,3.927,1056,1.399,1057,2.412,1062,2.282,1065,1.516,1093,1.302,1119,5.304,1120,3.261,1121,3.645,1122,3.645,1123,3.261,1124,4.885,1125,3.707,1126,3.408,1127,3.164,1128,4.039,1129,2.154,1130,2.213,1131,3.121,1132,2.154,1133,2.938,1134,3.645,1135,4.723,1136,2.154,1137,1.813,1138,2.154,1139,2.629,1140,4.885,1141,4.674,1142,2.629,1143,4.699,1144,2.629,1145,4.885,1146,2.629,1147,5.705,1148,2.629,1149,4.801,1150,1.857,1151,4.144,1152,4.144,1153,4.144,1154,2.938,1155,2.154,1156,2.154,1157,2.629,1158,2.938,1159,2.629,1160,2.629,1161,4.801,1162,3.46,1163,2.938,1164,4.254,1165,4.295,1166,2.938,1167,4.295,1168,2.975,1169,2.154,1170,2.154,1171,2.154,1172,2.154,1173,1.662,1174,1.857,1175,1.857,1176,1.857,1177,1.857,1178,1.662,1179,1.662,1180,1.857,1181,2.398,1182,1.662,1183,1.516,1184,1.857,1185,1.662,1186,1.857,1187,1.662,1188,1.662,1189,2.629,1190,1.857,1191,1.857,1192,1.516,1193,1.857,1194,1.857,1195,1.857,1196,3.408,1197,1.662,1198,2.938,1199,1.662,1200,1.857,1201,1.857,1202,5.028,1203,1.516,1204,2.629,1205,1.857,1206,1.516,1207,1.662,1208,4.144,1209,2.938,1210,2.938,1211,1.857,1212,1.857,1213,2.398,1214,1.857,1215,1.857,1216,1.857,1217,1.857,1218,2.975,1219,1.399,1220,1.516,1221,1.662,1222,1.662,1223,2.213,1224,3.707,1225,3.381,1226,3.645,1227,1.516,1228,1.857,1229,1.399,1230,2.975,1231,1.516,1232,2.398,1233,1.662,1234,1.662,1235,2.975,1236,2.962,1237,2.629,1238,1.857,1239,1.516,1240,1.662,1241,1.857,1242,2.938]],["title/interfaces/FlexOption.html",[186,0.37,1135,2.667]],["body/interfaces/FlexOption.html",[0,0.392,3,0.163,4,0.163,8,0.144,10,1.095,13,0.801,14,0.958,17,0.018,19,0.24,30,1.69,44,0.452,57,0.314,58,0.88,69,0.666,75,1.501,87,0.26,88,1.334,91,0.201,95,1.893,98,0.163,99,0.279,119,1.115,139,1.047,140,2.48,172,0.011,173,0.013,175,2.013,178,2.15,180,2.707,186,0.347,187,1.458,188,1.146,192,3.88,217,2.902,220,1.754,223,0.765,224,0.801,235,0.801,301,1.38,325,1.199,328,1.316,333,0.801,336,3.448,337,3.786,450,2.231,453,1.522,454,2.745,464,2.311,532,2.15,548,2.745,623,2.311,635,1.893,686,2.15,699,2.15,934,2.745,951,3.276,1048,4.356,1057,2.486,1119,2.745,1120,2.745,1121,3.068,1122,3.068,1123,2.745,1124,4.72,1125,3.822,1127,2.15,1128,2.745,1130,2.311,1131,3.217,1133,3.068,1134,3.068,1135,4.938,1137,1.893,1139,2.745,1140,4.938,1141,4.63,1142,2.745,1143,4.63,1144,2.745,1145,4.938,1146,2.745,1147,5.784,1148,2.745,1149,4.914,1151,4.272,1152,4.272,1153,4.272,1154,3.068,1157,2.745,1158,3.068,1159,2.745,1160,2.745,1161,5.314,1162,3.446,1163,3.068,1164,4.336,1165,4.396,1166,3.068,1167,4.396,1168,3.486,1173,2.745,1174,3.068,1175,3.068,1176,3.068,1177,3.068,1178,2.745,1179,2.745,1180,3.068,1181,3.486,1182,2.745,1183,2.504,1184,3.068,1185,2.745,1186,3.068,1187,2.745,1188,2.745,1189,3.822,1190,3.068,1191,3.068,1192,2.504,1193,3.068,1194,3.068,1195,3.068]],["title/components/HtmlEditorComponent.html",[0,0.3,141,1.167]],["body/components/HtmlEditorComponent.html",[0,0.509,1,1.392,2,1.566,3,0.207,4,0.207,5,2.751,6,1.672,7,1.524,8,0.183,12,1.331,13,1.767,14,2.105,17,0.018,19,0.305,42,1.712,51,1.79,57,0.231,59,0.846,73,0.94,87,0.266,88,1.566,91,0.255,98,0.207,99,0.328,126,1.672,127,2.28,128,1.712,129,1.113,130,2.51,131,1.672,132,1.672,133,1.392,134,2.597,135,1.392,136,1.064,137,1.392,138,1.672,139,1.331,140,1.524,141,2.09,142,1.392,143,1.672,144,1.392,145,1.672,146,1.273,147,1.672,148,1.392,149,1.672,150,1.672,151,1.392,152,1.392,153,1.672,154,1.392,155,1.672,156,1.392,157,1.672,158,1.392,159,1.672,160,1.392,161,1.217,162,1.331,163,1.217,164,1.672,165,1.331,166,1.672,167,0.929,168,1.672,169,1.331,170,1.596,171,1.672,172,0.013,173,0.013,175,2.558,178,3.515,181,3.054,182,3.228,185,2.558,669,4.524,1243,5.015,1244,6.431,1245,5.546,1246,6.431,1247,6.431,1248,4.961,1249,5.545,1250,6.431,1251,4.522]],["title/components/ItemComponent.html",[0,0.3,142,1.167]],["body/components/ItemComponent.html",[0,0.416,1,0.784,2,1.045,3,0.116,4,0.116,6,0.942,7,0.858,8,0.103,10,1.195,11,2.36,12,0.75,13,1.66,14,2.003,17,0.018,19,0.382,38,2.945,42,0.75,44,0.354,48,0.956,49,2.639,51,1.195,57,0.379,58,0.808,59,1.417,68,1.542,69,1.225,72,1.163,73,0.934,74,0.77,75,1.031,76,1.416,77,2.797,80,1.278,87,0.283,88,1.669,91,0.144,94,0.686,98,0.116,99,0.296,108,1.539,112,1.539,116,2.196,119,1.058,126,0.942,127,1.447,128,1.142,129,0.627,130,1.944,131,0.942,132,0.942,133,0.784,134,2.093,135,0.784,136,1.238,137,0.784,138,0.942,139,0.75,140,1.585,141,0.784,142,1.619,143,0.942,144,0.784,145,0.942,146,0.717,147,0.942,148,0.784,149,0.942,150,0.942,151,0.784,152,0.784,153,0.942,154,0.784,155,0.942,156,0.784,157,0.942,158,0.784,159,0.942,160,0.784,161,1.416,162,0.75,163,0.686,164,0.942,165,0.75,166,0.942,167,0.797,168,0.942,169,0.75,170,0.899,171,0.942,172,0.009,173,0.009,176,1.66,177,1.66,180,2.233,184,1.09,187,1.755,190,0.858,216,1.278,220,2.016,223,1.011,224,1.274,235,1.6,248,0.717,253,1.266,266,1.505,268,1.535,321,4.296,328,0.942,329,2.345,330,2.428,332,3.353,333,0.873,339,1.457,343,2.52,345,1.948,354,2.36,390,1.739,396,2.36,400,3.554,402,1.944,450,2.118,453,1.66,459,1.843,464,2.52,465,4.534,503,2.196,517,2.731,521,2.196,616,3.202,617,1.585,619,1.539,621,1.792,631,1.654,657,1.355,754,3.308,758,2.66,821,3.346,826,3.421,827,3.011,862,2.196,870,3.346,894,3.346,940,4.366,1004,1.965,1048,1.654,1082,1.654,1093,1.539,1130,2.52,1131,3.415,1160,4.056,1162,1.355,1181,3.7,1183,1.792,1192,1.792,1227,1.792,1252,2.196,1253,2.842,1254,3.882,1255,4.703,1256,4.703,1257,4.054,1258,3.178,1259,3.882,1260,3.882,1261,5.259,1262,3.882,1263,2.547,1264,2.547,1265,2.547,1266,2.547,1267,2.547,1268,2.547,1269,2.547,1270,3.882,1271,2.547,1272,2.547,1273,2.547,1274,2.547,1275,3.882,1276,2.547,1277,3.882,1278,5.259,1279,2.547,1280,2.547,1281,3.882,1282,2.547,1283,2.547,1284,2.547,1285,2.547,1286,2.547,1287,2.547,1288,2.547,1289,2.547,1290,2.547,1291,2.547,1292,3.308,1293,2.547,1294,1.965,1295,2.547,1296,2.547,1297,2.547,1298,2.547,1299,3.882,1300,2.547,1301,2.547,1302,2.547,1303,3.882,1304,2.547,1305,2.547,1306,2.547,1307,2.547,1308,1.965,1309,2.547,1310,3.882,1311,3.882,1312,2.547,1313,2.196,1314,2.547,1315,2.547,1316,2.547,1317,3.882,1318,2.547,1319,2.547,1320,2.547,1321,2.547,1322,2.547,1323,3.882,1324,2.547,1325,2.547,1326,3.882,1327,2.547,1328,2.547,1329,2.547,1330,2.547,1331,2.547,1332,2.547,1333,2.547]],["title/components/ModalComponent.html",[0,0.3,144,1.167]],["body/components/ModalComponent.html",[0,0.471,1,1.191,2,1.413,3,0.177,4,0.177,6,1.431,7,1.304,8,0.157,10,1.615,12,1.139,13,1.742,14,2.073,17,0.018,19,0.261,42,1.544,44,0.479,48,1.292,51,1.615,55,3.692,57,0.351,58,0.615,59,1.358,65,4.189,68,1.503,69,1.194,72,0.795,73,0.933,74,0.74,77,2.058,80,1.942,82,3.171,84,0.724,87,0.24,88,1.603,89,3.692,91,0.218,98,0.177,99,0.296,126,1.431,127,1.833,128,1.544,129,0.953,130,2.361,131,1.431,132,1.431,133,1.191,134,2.468,135,1.191,136,0.911,137,1.191,138,1.431,139,1.139,140,1.304,141,1.191,142,1.191,143,1.431,144,1.965,145,1.431,146,1.089,147,1.431,148,1.191,149,1.431,150,1.431,151,1.191,152,1.191,153,1.431,154,1.191,155,1.431,156,1.191,157,1.431,158,1.191,159,1.431,160,1.191,161,1.042,162,1.139,163,1.042,164,1.431,165,1.139,166,1.431,167,0.795,168,1.431,169,1.139,170,1.365,171,1.431,172,0.012,173,0.012,176,2.245,177,2.245,184,1.655,248,1.089,266,1.5,268,1.718,339,1.351,450,2.682,459,3.032,611,3.867,614,3.893,641,4.714,705,4.189,710,4.189,713,3.692,826,3.598,827,3.167,933,4.492,951,1.655,976,2.985,1013,4.524,1253,3.598,1258,3.858,1334,3.336,1335,4.593,1336,5.955,1337,4.524,1338,3.598,1339,3.869,1340,3.869,1341,3.869,1342,3.869,1343,3.869,1344,3.869,1345,3.869,1346,2.338,1347,5.248,1348,3.869,1349,3.869,1350,3.869,1351,3.869,1352,3.869,1353,3.869,1354,3.869,1355,3.869,1356,3.869,1357,3.869,1358,3.869,1359,3.869,1360,3.869,1361,3.869]],["title/directives/NgModelChangeDebouncedDirective.html",[129,0.933,165,1.116]],["body/directives/NgModelChangeDebouncedDirective.html",[3,0.219,4,0.219,8,0.194,10,1.857,12,1.409,13,1.358,17,0.018,19,0.323,44,0.551,48,1.485,51,1.857,55,4.245,57,0.354,59,1.365,65,4.647,68,1.42,69,1.297,72,0.984,73,0.7,74,0.595,75,0.939,76,1.289,84,0.896,87,0.317,88,1.624,89,4.245,91,0.27,94,1.289,97,2.547,98,0.219,99,0.27,114,2.894,129,1.485,162,1.409,165,1.776,172,0.013,173,0.013,253,1.778,330,1.949,333,1.078,932,5.349,1080,3.694,1253,3.992,1257,5.695,1258,4.19,1292,4.647,1362,6.387,1363,4.129,1364,5.695,1365,7.148,1366,6.606,1367,4.789,1368,7.298,1369,6.034,1370,6.034,1371,4.789,1372,4.789,1373,4.789,1374,4.789,1375,4.789,1376,6.034,1377,4.129,1378,4.789,1379,4.789,1380,4.789,1381,4.789,1382,4.789,1383,4.789]],["title/components/PaletteComponent.html",[0,0.3,146,1.067]],["body/components/PaletteComponent.html",[0,0.55,1,0.7,2,1.333,3,0.104,4,0.104,5,0.973,6,0.841,7,0.767,8,0.092,10,1.095,11,2.198,12,0.67,13,1.633,14,1.932,17,0.018,19,0.154,24,2.744,30,1.08,38,3.135,40,2.15,42,1.047,44,0.325,48,0.876,49,2.486,51,1.095,57,0.384,58,0.816,59,1.342,68,1.491,69,1.185,72,1.17,73,0.925,74,0.765,75,0.697,76,1.333,84,1.066,85,2.016,87,0.272,88,1.333,91,0.128,94,0.612,98,0.163,99,0.201,119,1.115,126,0.841,127,1.833,128,1.047,129,0.56,130,1.831,131,0.841,132,0.841,133,0.7,134,1.987,135,0.7,136,0.536,137,0.7,138,0.841,139,0.67,140,0.767,141,0.7,142,0.7,143,0.841,144,0.7,145,0.841,146,1.394,147,0.841,148,0.7,149,0.841,150,0.841,151,0.7,152,0.7,153,0.841,154,0.7,155,0.841,156,0.7,157,0.841,158,0.7,159,0.841,160,0.7,161,0.612,162,0.67,163,0.612,164,0.841,165,0.67,166,0.841,167,1.17,168,0.841,169,0.67,170,0.803,171,0.841,172,0.008,173,0.008,176,1.522,177,1.522,181,2.08,184,0.973,185,1.287,186,0.347,187,1.582,190,2.135,215,1.375,216,2.198,217,0.926,220,1.994,223,0.765,224,1.282,235,1.425,244,2.647,248,1.233,266,1.379,268,1.275,320,2.33,322,1.287,324,3.04,325,1.476,328,0.841,331,1.375,332,3.179,333,0.8,337,2.86,339,1.275,345,3.093,354,3.093,355,3.66,402,1.315,450,1.973,451,1.755,453,1.522,459,2.352,544,2.647,555,2.547,567,1.477,609,2.844,610,1.477,611,2.844,612,2.012,613,3.031,614,3.368,615,2.198,616,3.04,617,1.476,618,1.601,619,1.375,620,1.477,621,1.601,622,2.08,623,2.31,624,4.287,625,2.503,626,2.744,627,2.993,628,1.287,629,1.287,630,1.287,631,1.477,632,1.287,633,1.287,634,2.744,635,1.892,636,3.379,637,2.33,638,1.921,639,3.379,640,3.379,641,2.844,642,3.782,643,3.485,644,1.755,645,1.755,646,1.755,647,1.755,648,1.755,649,1.755,650,1.477,651,1.601,652,2.31,653,1.601,654,1.755,655,1.21,656,2.503,657,1.892,658,1.755,659,3.821,660,2.744,661,1.755,662,1.755,663,3.379,664,1.755,665,1.755,666,1.375,667,1.755,668,2.744,669,1.601,670,1.755,671,1.755,672,1.755,673,1.755,674,1.755,675,1.755,676,1.755,677,1.755,678,1.755,679,1.755,680,1.755,681,1.755,682,2.744,683,1.755,684,2.744,685,1.755,686,1.375,687,1.755,688,3.082,689,1.755,690,1.755,691,2.744,692,3.379,693,1.755,694,1.755,695,1.755,696,1.755,697,1.477,698,1.755,699,2.647,700,2.744,701,2.744,702,3.821,703,2.744,704,1.755,705,2.503,706,1.755,707,1.477,708,1.477,709,1.755,710,1.601,711,1.755,712,1.755,713,2.503,714,1.755,715,1.755,716,1.755,717,1.755,718,2.744,719,1.755,720,1.755,1056,1.477,1057,1.142,1137,1.21,1219,1.477,1220,1.601,1229,1.477,1230,3.082,1231,1.601,1232,1.601,1233,1.755,1235,1.601,1236,1.287,1239,1.601,1245,1.755,1248,1.755,1337,3.067,1346,1.375,1384,3.558,1385,3.558,1386,3.558,1387,3.558,1388,2.275,1389,3.558,1390,2.275,1391,2.275,1392,2.275,1393,2.275,1394,2.275,1395,2.275,1396,2.275,1397,2.275,1398,2.275,1399,2.275,1400,2.275,1401,2.275,1402,2.275,1403,2.275,1404,2.275,1405,2.275,1406,2.275,1407,2.275,1408,4.271,1409,3.067,1410,3.067,1411,3.558,1412,3.558,1413,1.962,1414,2.275,1415,1.755,1416,1.755,1417,2.275,1418,2.275,1419,3.067,1420,2.275,1421,2.275,1422,3.379,1423,2.15,1424,2.275,1425,1.962,1426,1.962,1427,2.275,1428,2.275,1429,2.275]],["title/interfaces/PaletteItem.html",[186,0.37,624,2.462]],["body/interfaces/PaletteItem.html",[0,0.514,2,1.245,3,0.148,4,0.148,8,0.131,10,0.994,11,2.322,13,0.727,14,0.869,17,0.018,19,0.218,38,2.197,42,0.951,44,0.422,49,1.621,57,0.39,58,0.885,63,2.197,69,0.604,74,0.85,76,0.869,84,0.866,85,2.2,87,0.306,88,1.589,91,0.182,94,0.869,98,0.211,99,0.182,119,1.328,127,1.817,146,0.909,167,1.11,172,0.01,173,0.01,176,1.382,177,1.382,181,1.534,184,1.382,185,1.827,186,0.451,187,1.591,188,1.04,190,2.308,215,2.796,216,2.713,217,1.315,220,1.664,223,0.995,224,1.463,235,1.216,244,1.952,248,1.521,266,1.794,268,1.52,320,3.14,322,1.827,324,3.873,325,1.089,328,1.194,331,1.952,332,2.713,333,0.727,337,3.263,339,1.52,355,3.323,402,1.194,450,2.084,453,1.382,459,1.534,544,1.952,555,2.982,609,3.005,610,2.098,611,3.005,612,2.617,613,3.14,614,4.001,615,2.713,616,2.617,617,1.559,618,2.273,619,1.952,620,2.098,621,2.273,622,2.197,623,3.005,624,4.222,625,4.396,626,4.819,627,3.267,628,1.827,629,1.827,630,1.827,631,2.098,632,1.827,633,1.827,634,2.492,635,1.718,636,2.492,637,1.718,638,1.794,639,2.492,640,2.492,641,2.098,642,2.273,643,3.255,644,2.492,645,2.492,646,2.492,647,2.492,648,2.492,649,2.492,650,2.098,651,2.273,652,3.005,653,2.273,654,2.492,655,1.718,656,3.255,657,2.461,658,2.492,659,2.492,660,3.569,661,2.492,662,2.492,663,4.17,664,2.492,665,2.492,666,1.952,667,2.492,668,3.569,669,2.273,670,2.492,671,2.492,672,2.492,673,2.492,674,2.492,675,2.492,676,2.492,677,2.492,678,2.492,679,2.492,680,2.492,681,2.492,682,2.492,683,2.492,684,3.569,685,2.492,686,1.952,687,2.492,688,2.273,689,2.492,690,2.492,691,3.569,692,4.17,693,2.492,694,2.492,695,2.492,696,2.492,697,2.098,698,2.492,699,1.952,700,2.492,701,3.569,702,2.492,703,2.492,704,2.492,705,3.255,706,2.492,707,2.098,708,2.098,709,2.492,710,2.273,711,2.492,712,2.492,713,2.273,714,2.492,715,2.492,716,2.492,717,2.492,718,2.492,719,2.492,720,2.492]],["title/interfaces/PaletteOptions.html",[186,0.37,622,1.8]],["body/interfaces/PaletteOptions.html",[0,0.48,2,1.298,3,0.22,4,0.22,8,0.195,17,0.018,19,0.326,44,0.553,57,0.365,58,0.777,69,0.902,74,0.947,87,0.303,98,0.303,161,1.631,167,0.991,172,0.013,173,0.013,181,2.878,182,2.421,186,0.646,187,1.784,188,1.553,224,1.085,268,2.025,325,2.233,328,1.784,398,2.421,402,1.784,553,3.132,612,2.729,613,2.566,617,2.233,622,3.301,628,3.933,629,3.933,630,3.933,632,3.933,633,3.933,637,3.525,638,2.35,655,2.566,764,2.729,878,3.132,941,3.429,983,3.132,984,3.132,985,3.132,986,3.132,987,3.132,988,3.132,989,3.132,1066,3.394,1067,3.721,1068,3.721,1069,3.394,1070,3.394]],["title/interfaces/SVG_CONFIG.html",[186,0.37,1430,2.016]],["body/interfaces/SVG_CONFIG.html",[3,0.232,4,0.232,8,0.206,17,0.018,19,0.343,44,0.571,57,0.378,58,0.906,73,0.742,74,0.941,84,1.269,87,0.232,91,0.287,98,0.332,172,0.014,173,0.014,186,0.611,188,1.636,223,1.459,390,1.879,1083,3.767,1236,4.006,1430,3.33,1431,2.55,1432,3.575,1433,6.106,1434,5.463,1435,5.463,1436,4.089,1437,5.398,1438,4.381,1439,3.92,1440,3.92,1441,3.3,1442,3.92,1443,3.92,1444,3.92,1445,3.3,1446,3.92,1447,2.703,1448,3.92,1449,3.3,1450,3.92,1451,3.3,1452,3.92]],["title/components/SpacingEditorComponent.html",[0,0.3,148,1.167]],["body/components/SpacingEditorComponent.html",[0,0.453,1,0.479,2,0.704,3,0.071,4,0.071,5,0.666,6,0.576,7,0.525,8,0.063,10,0.805,12,0.458,13,1.526,14,1.794,17,0.018,19,0.298,20,2.017,23,1.783,28,1.58,29,3.362,30,3.134,31,1.798,34,1.912,37,2.888,40,0.941,41,1.011,42,1.495,44,0.486,48,0.644,51,0.805,57,0.357,58,0.746,59,1.269,63,1.88,68,1.305,69,0.997,72,0.813,73,0.974,74,0.492,75,0.865,76,1.188,80,0.781,84,0.291,87,0.119,88,1.066,91,0.088,98,0.071,99,0.223,106,1.694,110,1.839,119,0.35,126,0.576,127,1.04,128,0.769,129,0.383,130,1.971,131,0.576,132,0.576,133,0.479,134,1.632,135,0.479,136,0.366,137,0.479,138,0.576,139,0.458,140,1.61,141,0.479,142,0.479,143,0.576,144,0.479,145,0.576,146,0.438,147,0.576,148,1.219,149,1.25,150,1.878,151,0.479,152,0.805,153,0.576,154,0.479,155,0.576,156,0.479,157,0.576,158,0.479,159,0.576,160,0.479,161,0.419,162,0.458,163,0.419,164,0.576,165,0.458,166,0.576,167,0.32,168,0.576,169,0.458,170,0.549,171,0.576,172,0.006,173,0.006,175,0.881,176,1.119,177,1.119,178,2.042,180,2.096,184,0.666,187,0.995,209,3.841,217,1.376,220,1.706,223,0.727,224,0.993,235,1.247,248,0.438,268,0.87,276,2.393,278,1.698,301,1.014,325,1.487,330,0.634,333,0.588,337,3.803,339,0.401,398,2.398,450,1.522,459,1.88,476,1.342,532,2.393,541,1.242,547,1.342,555,1.694,563,1.479,614,3.408,616,2.496,635,1.391,638,2.336,642,3.105,650,1.698,655,2.347,657,0.828,772,2.017,776,1.698,796,1.201,827,0.828,828,3.805,829,3.805,878,1.698,880,2.254,933,2.785,951,1.446,962,2.607,1007,5.557,1022,2.017,1052,5.231,1056,2.866,1057,3.312,1062,3.516,1065,1.095,1070,1.839,1093,0.941,1120,2.607,1123,2.607,1124,1.095,1127,4.443,1130,1.698,1131,2.571,1140,1.839,1141,2.195,1143,2.571,1145,1.839,1150,1.342,1162,1.798,1164,4.643,1165,4.111,1178,1.201,1181,1.095,1182,1.201,1183,1.095,1185,1.201,1187,2.017,1188,1.201,1197,1.201,1198,2.254,1199,1.201,1200,1.342,1201,1.342,1202,5.074,1203,1.095,1204,2.017,1205,1.342,1206,1.095,1207,1.201,1208,3.414,1209,3.414,1210,2.254,1211,1.342,1212,1.342,1213,1.839,1214,1.342,1215,1.342,1216,1.342,1217,1.342,1218,2.378,1219,1.011,1220,1.095,1221,1.201,1222,1.201,1223,1.698,1224,3.054,1225,2.785,1226,2.914,1227,2.378,1228,1.342,1229,1.011,1230,4.643,1231,1.095,1232,1.839,1233,1.201,1234,1.201,1235,2.378,1236,2.496,1237,2.017,1238,1.342,1239,1.095,1240,1.201,1241,1.342,1242,2.254,1335,2.607,1413,3.414,1422,3.054,1423,3.895,1437,1.342,1441,1.698,1445,1.698,1453,5.893,1454,3.38,1455,3.38,1456,3.38,1457,3.38,1458,2.914,1459,2.914,1460,2.914,1461,3.38,1462,3.38,1463,3.38,1464,3.38,1465,3.38,1466,2.615,1467,3.959,1468,4.779,1469,3.959,1470,1.557,1471,1.557,1472,2.615,1473,5.079,1474,4.779,1475,5.726,1476,6.025,1477,6.458,1478,1.557,1479,2.615,1480,3.414,1481,3.959,1482,3.414,1483,3.959,1484,1.557,1485,4.12,1486,3.959,1487,2.615,1488,2.615,1489,1.557,1490,2.615,1491,1.557,1492,2.615,1493,1.557,1494,2.615,1495,1.557,1496,2.615,1497,2.615,1498,2.615,1499,1.557,1500,2.254,1501,2.615,1502,2.615,1503,2.615,1504,2.615,1505,3.895,1506,1.557,1507,1.557,1508,1.557,1509,1.557,1510,1.557,1511,1.557,1512,3.414,1513,2.615,1514,2.615,1515,2.254,1516,2.615,1517,2.615,1518,3.959,1519,2.017,1520,2.615,1521,3.959,1522,2.017,1523,2.254,1524,2.615,1525,1.557,1526,4.779,1527,2.615,1528,1.557,1529,3.959,1530,2.615,1531,2.615,1532,1.557,1533,1.557,1534,1.557,1535,1.557,1536,1.557,1537,2.615,1538,1.557,1539,1.557,1540,2.615,1541,1.557,1542,2.615,1543,5.33,1544,1.557,1545,2.615,1546,1.557,1547,1.557,1548,1.557,1549,1.557,1550,1.557,1551,1.557,1552,1.557,1553,1.557,1554,1.557,1555,1.557,1556,1.557,1557,1.557,1558,3.959,1559,1.557,1560,1.557,1561,1.557,1562,1.557,1563,1.557,1564,1.557,1565,1.557,1566,1.557,1567,2.615,1568,2.615,1569,2.615,1570,2.615,1571,1.557,1572,3.38,1573,1.557,1574,1.557,1575,2.615,1576,1.557,1577,3.38,1578,1.557,1579,1.557,1580,1.557,1581,1.557,1582,1.557,1583,1.557,1584,1.557,1585,2.615,1586,1.557,1587,1.557,1588,1.557]],["title/classes/SvgIcon.html",[99,0.214,1589,2.667]],["body/classes/SvgIcon.html",[3,0.199,4,0.199,8,0.177,17,0.018,19,0.294,32,3.434,44,0.519,57,0.29,58,0.862,59,1.182,72,0.896,73,0.83,74,0.542,75,0.855,76,1.174,77,3.362,84,1.063,87,0.289,91,0.246,98,0.199,99,0.32,119,1.602,152,1.343,172,0.013,173,0.013,180,2.071,192,2.32,194,1.463,211,2.189,213,3.434,218,2.071,219,1.404,223,1.531,224,0.981,235,1.279,248,1.955,253,1.701,333,0.981,339,1.123,390,1.613,587,2.32,726,4.876,1062,2.699,1083,3.023,1162,3.911,1430,3.023,1431,3.361,1436,3.362,1447,2.32,1589,3.998,1590,3.364,1591,4.362,1592,5.683,1593,4.362,1594,5.45,1595,3.069,1596,4.9,1597,3.069,1598,2.832,1599,2.636,1600,3.761,1601,3.761,1602,3.364,1603,3.761,1604,3.761,1605,3.761,1606,3.761,1607,3.761,1608,3.761,1609,3.761,1610,3.761,1611,3.761,1612,3.761,1613,4.9,1614,3.761,1615,3.761,1616,3.761,1617,3.761,1618,3.761,1619,3.761,1620,3.761,1621,3.761,1622,4.9,1623,3.761,1624,3.761,1625,3.761,1626,3.761,1627,3.761,1628,3.761,1629,3.761,1630,4.9,1631,3.761,1632,4.9,1633,4.9,1634,4.9,1635,4.9,1636,3.761,1637,4.9]],["title/components/SvgIconComponent.html",[0,0.3,151,1.167]],["body/components/SvgIconComponent.html",[0,0.395,1,0.867,2,1.127,3,0.129,4,0.129,5,2.138,6,1.042,7,0.949,8,0.114,12,0.829,13,1.682,14,1.974,17,0.018,19,0.19,31,2.943,34,3.129,42,0.829,44,0.382,48,1.031,51,1.289,57,0.363,58,0.886,59,1.372,63,1.338,68,1.51,69,1.159,72,1.318,73,1.049,74,0.797,75,1.258,87,0.228,88,1.727,91,0.159,98,0.129,99,0.236,106,2.138,119,1.245,126,1.042,127,1.538,128,1.74,129,0.693,130,2.046,131,1.042,132,1.042,133,0.867,134,2.186,135,0.867,136,0.663,137,0.867,138,1.042,139,0.829,140,0.949,141,0.867,142,0.867,143,1.042,144,0.867,145,1.042,146,0.793,147,1.042,148,0.867,149,1.042,150,1.042,151,1.703,152,1.538,153,1.042,154,0.867,155,1.042,156,0.867,157,1.042,158,0.867,159,1.042,160,0.867,161,0.758,162,0.829,163,0.758,164,1.042,165,0.829,166,1.042,167,0.579,168,1.042,169,0.829,170,0.994,171,1.042,172,0.009,173,0.009,176,1.791,177,1.791,184,1.205,192,2.943,223,0.9,224,1.124,253,1.895,324,3.129,330,2.866,333,0.942,339,0.725,469,2.53,517,1.982,541,2.942,555,2.138,563,3.505,827,2.943,1023,3.61,1062,3.13,1086,4.79,1204,3.855,1218,1.982,1221,3.855,1222,3.855,1223,3.245,1224,3.855,1225,3.516,1229,1.829,1236,3.505,1237,3.855,1245,3.855,1248,4.949,1308,2.173,1415,3.855,1416,3.855,1430,3.413,1431,3.702,1435,2.173,1439,2.173,1440,2.173,1441,1.829,1442,2.173,1443,3.23,1444,2.173,1445,1.829,1446,2.173,1447,1.498,1595,1.982,1597,1.982,1599,3.343,1602,2.173,1638,2.173,1639,4.949,1640,4.997,1641,4.77,1642,4.997,1643,4.997,1644,5.532,1645,2.817,1646,4.77,1647,4.187,1648,4.187,1649,4.187,1650,4.187,1651,4.187,1652,4.187,1653,4.187,1654,2.817,1655,2.817,1656,2.817,1657,2.817,1658,2.817,1659,2.817,1660,2.817,1661,2.817,1662,2.817,1663,2.817,1664,2.817,1665,2.817,1666,2.817,1667,2.817,1668,2.817,1669,2.817,1670,2.817,1671,2.817,1672,2.817,1673,4.187,1674,2.817,1675,2.817,1676,2.817,1677,4.997,1678,2.817,1679,2.817,1680,2.817,1681,4.77,1682,2.817,1683,2.817,1684,2.817,1685,2.817,1686,2.817,1687,2.817,1688,2.817,1689,2.817,1690,2.817,1691,2.817,1692,2.817,1693,2.817,1694,2.817,1695,2.429,1696,2.817]],["title/injectables/SvgIconRegistry.html",[194,0.976,1599,2.291]],["body/injectables/SvgIconRegistry.html",[3,0.176,4,0.176,8,0.156,17,0.018,19,0.26,32,3.161,44,0.477,48,1.288,57,0.35,58,0.875,59,1.338,68,1.569,69,0.72,72,1.369,73,1.027,74,0.828,75,0.755,76,1.037,77,2.782,84,1.111,87,0.271,91,0.217,98,0.176,99,0.295,119,1.546,152,1.185,172,0.012,173,0.012,192,2.782,194,1.347,211,2.625,213,4.153,218,1.829,219,1.24,223,1.478,224,1.337,248,2.041,253,1.952,333,0.867,339,0.991,390,1.424,587,2.049,591,2.179,726,2.971,1062,2.484,1069,3.68,1083,3.16,1162,3.656,1430,3.39,1431,3.64,1436,3.739,1447,2.049,1589,2.71,1590,2.971,1594,5.925,1595,2.71,1596,5.745,1597,2.71,1598,2.501,1599,3.161,1600,5.122,1601,4.51,1602,2.971,1603,3.321,1604,3.321,1605,3.321,1606,3.321,1607,3.321,1608,3.321,1609,5.494,1610,3.321,1611,4.51,1612,3.321,1613,4.51,1614,3.321,1615,3.321,1616,3.321,1617,3.321,1618,3.321,1619,3.321,1620,3.321,1621,3.321,1622,4.51,1623,3.321,1624,4.51,1625,3.321,1626,3.321,1627,3.321,1628,3.321,1629,4.51,1630,5.122,1631,3.321,1632,4.51,1633,4.51,1634,4.51,1635,4.51,1636,4.51,1637,5.122,1697,5.231,1698,5.231,1699,5.231,1700,3.852,1701,3.852,1702,3.852,1703,3.852,1704,3.852,1705,3.852]],["title/interfaces/SvgIconType.html",[186,0.37,1436,2.016]],["body/interfaces/SvgIconType.html",[3,0.244,4,0.244,8,0.216,17,0.018,19,0.36,44,0.588,57,0.329,58,0.919,73,1.052,84,1.297,87,0.244,91,0.301,98,0.337,172,0.014,173,0.014,186,0.629,188,1.718,223,1.49,390,2.663,1083,2.837,1236,3.018,1430,2.837,1431,2.677,1432,3.753,1433,4.599,1434,4.115,1435,4.115,1436,3.922,1438,4.599,1439,4.115,1440,4.115,1441,3.464,1442,4.115,1443,4.115,1444,4.115,1445,3.464,1446,4.115,1447,2.837,1448,4.115,1449,3.464,1450,4.115,1451,3.464,1452,4.115]],["title/modules/SvgIconsModule.html",[574,2.291,1077,2.462]],["body/modules/SvgIconsModule.html",[3,0.209,4,0.209,8,0.185,17,0.018,48,1.127,57,0.299,59,1.097,68,1.38,72,1.204,73,0.857,74,0.876,75,0.898,76,1.232,82,4.122,87,0.312,91,0.258,98,0.209,99,0.258,106,1.958,119,1.319,151,2.356,152,1.409,172,0.013,173,0.013,224,1.319,253,1.232,333,1.03,339,1.179,576,2.174,577,2.784,581,3.317,582,2.59,584,3.543,585,3.543,588,3.858,776,2.973,1032,5.055,1077,4.871,1083,3.628,1086,4.2,1430,2.435,1431,3.246,1434,4.523,1436,4.022,1447,3.119,1449,3.807,1451,2.973,1595,3.221,1597,3.221,1599,3.543,1646,3.947,1706,3.947,1707,3.947,1708,3.947,1709,4.578,1710,4.578,1711,5.863,1712,4.578,1713,7.051,1714,4.578,1715,5.863,1716,4.99,1717,4.578,1718,4.578,1719,5.863,1720,5.863,1721,5.863,1722,4.578,1723,4.578,1724,4.578,1725,4.578,1726,4.578,1727,4.578]],["title/directives/TemplateNameDirective.html",[129,0.933,167,0.779]],["body/directives/TemplateNameDirective.html",[3,0.235,4,0.235,8,0.208,12,1.514,13,1.419,14,1.914,17,0.017,19,0.347,42,2.253,44,0.576,51,1.942,57,0.379,58,0.891,59,1.39,72,1.057,73,0.752,74,0.639,79,5.63,87,0.235,88,1.914,91,0.29,98,0.235,99,0.29,129,1.553,162,1.514,167,1.296,172,0.014,173,0.014,213,4.123,235,1.419,333,1.158,555,2.919,614,3.859,625,4.8,1294,3.968,1598,3.341,1728,6.487,1729,4.436,1730,5.145,1731,6.308,1732,5.145,1733,5.145,1734,5.145,1735,5.145,1736,5.145]],["title/interfaces/ToastAction.html",[186,0.37,326,1.902]],["body/interfaces/ToastAction.html",[3,0.301,4,0.218,8,0.193,17,0.018,19,0.322,39,3.288,44,0.549,57,0.372,58,0.918,63,2.857,69,0.892,74,0.93,84,0.892,87,0.301,91,0.269,94,1.284,98,0.316,99,0.269,112,2.882,172,0.013,173,0.013,186,0.587,188,1.535,194,1.228,219,1.535,268,1.697,326,3.475,327,2.393,336,3.118,338,4.184,370,2.697,371,2.697,399,2.882,615,3.02,638,2.556,951,2.04,1062,3.39,1137,3.937,1338,2.882,1346,2.882,1737,3.097,1738,3.355,1739,4.638,1740,3.355,1741,3.355,1742,3.355,1743,3.355,1744,2.882,1745,4.233,1746,5.085,1747,4.233,1748,3.678,1749,3.678,1750,3.678]],["title/components/ToastComponent.html",[0,0.3,154,1.167]],["body/components/ToastComponent.html",[0,0.446,1,1.072,2,1.314,3,0.159,4,0.159,5,2.411,6,1.288,7,1.174,8,0.141,10,1.503,12,1.025,13,1.724,14,2.05,17,0.018,18,4.347,19,0.412,21,4.347,22,4.347,23,3.195,31,3.544,32,3.405,33,3.965,39,1.654,42,1.025,44,0.445,48,1.202,51,1.503,57,0.349,59,1.327,68,1.326,69,1.203,72,1.003,73,0.939,74,0.606,75,0.683,76,0.938,80,1.749,82,2.95,87,0.279,88,1.314,91,0.196,94,0.938,98,0.159,99,0.275,126,1.288,127,1.734,128,1.437,129,0.858,130,2.258,131,1.288,132,1.288,133,1.072,134,2.377,135,1.072,136,0.82,137,1.072,138,1.288,139,1.025,140,1.174,141,1.072,142,1.072,143,1.288,144,1.072,145,1.288,146,0.981,147,1.288,148,1.072,149,1.288,150,1.288,151,1.072,152,1.072,153,1.288,154,1.88,155,1.288,156,1.072,157,1.288,158,1.072,159,1.288,160,1.072,161,0.938,162,1.025,163,0.938,164,1.288,165,1.025,166,1.288,167,0.716,168,1.288,169,1.025,170,1.229,171,1.288,172,0.011,173,0.011,253,1.517,326,3.065,327,3.344,333,0.784,339,1.715,453,2.088,638,2.185,652,2.262,666,3.405,826,3.405,827,2.997,933,4.296,951,1.491,976,2.687,1229,3.659,1253,3.405,1258,3.69,1292,3.965,1335,4.347,1377,3.004,1641,4.858,1695,3.004,1738,4.912,1744,2.95,1745,4.296,1747,3.434,1751,3.004,1752,5.635,1753,5.635,1754,5.635,1755,5.635,1756,5.635,1757,4.882,1758,4.882,1759,3.484,1760,4.882,1761,4.882,1762,4.882,1763,4.209,1764,4.882,1765,3.484,1766,3.484,1767,3.484,1768,4.882,1769,3.484,1770,4.882,1771,3.484,1772,3.484,1773,3.484,1774,3.484,1775,4.882,1776,3.004,1777,3.484,1778,3.484,1779,3.484,1780,3.484,1781,3.484,1782,3.484,1783,3.484,1784,3.484,1785,4.882,1786,3.484,1787,3.484,1788,3.004,1789,3.484,1790,3.484,1791,4.882,1792,4.882]],["title/interfaces/ToastMessage.html",[186,0.37,1744,2.291]],["body/interfaces/ToastMessage.html",[3,0.301,4,0.218,8,0.193,17,0.018,19,0.322,39,2.264,44,0.549,57,0.372,58,0.913,69,0.892,74,0.93,84,0.892,87,0.301,91,0.269,94,1.284,98,0.316,99,0.269,112,2.882,172,0.013,173,0.013,186,0.587,188,1.535,194,1.228,219,1.535,268,1.228,326,3.583,327,2.393,336,2.147,338,2.882,370,2.697,371,2.697,399,2.882,615,3.02,638,2.827,951,2.04,1062,3.39,1137,3.937,1338,2.882,1346,2.882,1737,3.097,1738,3.355,1739,5.022,1740,3.355,1741,3.355,1742,3.355,1743,3.355,1744,3.636,1745,5.022,1746,5.623,1747,4.871,1748,3.678,1749,3.678,1750,3.678]],["title/injectables/ToastService.html",[194,0.976,327,1.902]],["body/injectables/ToastService.html",[3,0.315,4,0.215,8,0.191,17,0.018,19,0.318,39,2.235,44,0.545,48,1.469,57,0.304,58,0.905,59,1.226,68,1.405,69,1.226,72,0.967,73,0.688,74,0.585,75,1.17,76,1.607,84,1.117,87,0.299,91,0.265,94,1.267,98,0.315,99,0.265,112,4.164,172,0.013,173,0.013,186,0.582,194,1.212,219,1.516,268,1.212,326,3.569,327,2.995,336,2.12,338,2.845,370,2.663,371,2.663,399,2.845,567,3.876,591,2.663,615,3.289,638,2.757,951,2.014,1062,2.834,1137,3.865,1338,3.96,1346,2.845,1737,3.057,1738,3.312,1739,5.003,1740,3.312,1741,3.312,1742,3.312,1743,3.312,1744,2.845,1745,4.611,1746,5.485,1747,4.848,1748,5.055,1749,3.631,1750,3.631,1793,4.708,1794,4.708,1795,4.708,1796,4.708]],["title/components/ToolbarComponent.html",[0,0.3,156,1.167]],["body/components/ToolbarComponent.html",[0,0.456,1,1.121,2,1.355,3,0.166,4,0.166,5,2.468,6,1.346,7,1.227,8,0.147,12,1.071,13,1.732,14,2.101,17,0.018,19,0.246,31,3.068,34,3.263,40,4.083,41,3.746,42,1.832,44,0.459,48,1.239,57,0.317,59,1.222,68,0.857,69,0.681,72,0.748,73,0.909,74,0.452,76,1.553,77,2.677,79,4.45,80,1.827,82,3.042,87,0.264,90,3.139,91,0.205,98,0.166,99,0.284,126,1.346,127,1.776,128,1.481,129,0.896,130,2.301,131,1.346,132,1.346,133,1.121,134,2.415,135,1.121,136,0.857,137,1.121,138,1.346,139,1.071,140,2.097,141,1.121,142,1.121,143,1.346,144,1.121,145,1.346,146,1.025,147,1.346,148,1.121,149,1.346,150,1.346,151,1.121,152,1.916,153,1.346,154,1.121,155,1.346,156,1.916,157,1.346,158,1.121,159,1.346,160,1.121,161,0.98,162,1.071,163,0.98,164,1.346,165,1.071,166,1.346,167,0.748,168,1.346,169,1.071,170,2.196,171,1.346,172,0.011,173,0.011,176,2.153,177,2.153,184,1.557,217,2.348,220,2.205,235,1.52,325,1.227,333,1.133,451,4.45,453,2.153,555,2.89,617,1.227,761,3.64,779,4.059,808,4.801,1006,4.974,1060,5.651,1062,2.739,1093,2.2,1141,3.746,1143,3.746,1203,4.059,1206,4.059,1207,4.45,1223,3.746,1225,4.059,1797,3.139,1798,5.769,1799,4.974,1800,4.974,1801,5.769,1802,5.769,1803,5.769,1804,5.769,1805,5.033,1806,5.033,1807,3.641,1808,3.641,1809,3.641,1810,5.033,1811,3.641]],["title/directives/TooltipDirective.html",[129,0.933,169,1.116]],["body/directives/TooltipDirective.html",[0,0.409,3,0.173,4,0.173,8,0.153,10,1.591,12,1.114,13,1.163,14,1.918,17,0.018,19,0.256,23,2.328,30,1.798,37,3.558,44,0.472,48,1.273,51,1.947,57,0.363,58,0.742,59,1.352,68,1.217,69,0.967,72,0.777,73,0.553,74,0.731,75,1.154,76,1.884,77,2.75,84,0.708,87,0.236,88,1.703,91,0.213,98,0.236,99,0.213,112,3.124,127,2.039,128,2.012,129,1.273,162,1.114,169,1.522,170,2.72,172,0.011,173,0.011,224,1.325,235,1.163,248,1.455,266,2.651,325,1.742,333,0.852,339,1.331,369,3.637,392,3.124,450,2.651,459,3.005,614,3.331,638,2.763,826,3.824,827,3.523,868,3.264,951,3.091,1024,4.458,1057,1.9,1125,5.274,1162,2.014,1168,4.142,1173,3.988,1213,3.637,1219,3.357,1253,3.558,1258,3.824,1294,2.92,1308,2.92,1338,3.124,1423,2.288,1505,2.288,1598,2.458,1639,3.988,1716,3.988,1763,5.455,1799,4.458,1812,2.92,1813,3.786,1814,5.17,1815,6.327,1816,5.17,1817,6.327,1818,3.786,1819,3.988,1820,5.17,1821,4.458,1822,4.458,1823,5.17,1824,5.17,1825,3.786,1826,6.838,1827,3.786,1828,3.786,1829,3.786,1830,3.786,1831,3.786,1832,5.17,1833,3.786,1834,3.786,1835,3.786,1836,3.786,1837,3.786,1838,3.786,1839,3.786,1840,3.786,1841,3.786]],["title/components/TreeComponent.html",[0,0.3,158,1.167]],["body/components/TreeComponent.html",[0,0.479,1,0.732,2,0.991,3,0.109,4,0.109,5,1.017,6,0.879,7,2.495,8,0.096,10,1.133,12,0.7,13,1.644,14,1.946,17,0.018,18,2.84,19,0.37,21,1.834,22,1.834,23,3.29,24,3.913,28,2.225,30,2.409,31,2.698,32,2.225,33,2.59,34,2.869,37,1.437,40,2.225,41,2.391,42,0.7,44,0.336,48,0.906,51,1.133,56,2.722,57,0.334,58,0.806,59,1.201,68,1.292,69,0.843,72,1.127,73,0.914,74,0.681,84,0.445,87,0.206,88,0.991,91,0.134,98,0.109,99,0.208,119,1.014,126,0.879,127,1.387,128,1.083,129,0.585,130,1.875,131,0.879,132,0.879,133,0.732,134,2.029,135,0.732,136,0.56,137,0.732,138,0.879,139,0.7,140,1.849,141,0.732,142,0.732,143,0.879,144,0.732,145,0.879,146,0.669,147,0.879,148,0.732,149,0.879,150,0.879,151,0.732,152,0.732,153,0.879,154,0.732,155,0.879,156,0.732,157,0.879,158,1.561,159,0.879,160,0.732,161,0.64,162,0.7,163,0.64,164,0.879,165,0.7,166,0.879,167,0.488,168,0.879,169,0.7,170,0.839,171,0.879,172,0.008,173,0.008,187,1.326,190,2.421,211,2.546,217,1.499,219,1.633,223,1.18,235,0.828,248,1.428,253,1.213,276,3.065,301,1.428,325,1.709,330,0.968,333,0.535,336,2.029,398,1.193,450,2.029,453,1.575,459,1.748,541,1.748,555,2.347,563,2.869,617,0.801,635,1.958,657,1.265,708,1.544,761,3.222,768,1.834,783,2.84,825,2.05,826,2.722,895,3.174,926,4.668,1003,2.05,1031,2.05,1048,1.544,1052,1.673,1056,3.294,1057,1.193,1065,1.673,1124,1.673,1127,1.437,1130,2.391,1131,3.294,1137,1.958,1140,2.59,1141,2.391,1143,2.925,1162,2.918,1206,2.59,1213,3.169,1218,1.673,1219,3.563,1220,2.59,1223,2.391,1227,4.399,1230,4.77,1231,3.86,1232,4.083,1234,4.476,1235,1.673,1236,2.869,1239,4.083,1240,3.913,1249,2.05,1415,3.475,1416,3.475,1419,2.05,1422,3.475,1426,3.174,1505,3.779,1515,2.05,1519,1.834,1598,1.544,1716,3.913,1842,2.05,1843,4.505,1844,3.682,1845,4.505,1846,3.682,1847,2.378,1848,3.682,1849,2.378,1850,3.682,1851,2.378,1852,2.378,1853,3.682,1854,2.378,1855,2.378,1856,2.378,1857,2.378,1858,2.378,1859,2.378,1860,3.682,1861,2.05,1862,2.378,1863,2.378,1864,2.378,1865,2.378,1866,2.378,1867,2.378,1868,2.05,1869,5.487,1870,2.378,1871,4.505,1872,3.682,1873,2.378,1874,3.682,1875,1.834,1876,2.378,1877,2.378,1878,3.682,1879,3.682,1880,2.378,1881,2.378,1882,2.378,1883,2.378,1884,3.682,1885,2.378,1886,2.378,1887,2.378,1888,3.682,1889,3.682,1890,2.378,1891,2.378,1892,2.378,1893,2.378,1894,2.378,1895,6.254,1896,6.678,1897,7.133,1898,2.378,1899,2.378,1900,4.505,1901,4.505,1902,2.378,1903,5.072,1904,3.682,1905,4.505,1906,3.682,1907,3.682,1908,2.378,1909,3.682,1910,3.682,1911,2.378,1912,3.682,1913,2.378,1914,2.378,1915,5.803,1916,5.803,1917,5.072,1918,2.378,1919,4.505,1920,2.378,1921,2.378,1922,2.378,1923,3.682,1924,2.378,1925,2.378,1926,3.682,1927,3.682,1928,2.378,1929,2.378,1930,2.378,1931,2.378,1932,2.378,1933,2.378,1934,2.378,1935,2.378,1936,2.378,1937,4.505,1938,2.378,1939,2.378,1940,2.378,1941,2.378,1942,2.378,1943,3.174,1944,2.378,1945,2.378,1946,2.378]],["title/modules/UtilsModule.html",[574,2.291,1076,2.291]],["body/modules/UtilsModule.html",[1,2.364,3,0.215,4,0.215,8,0.19,17,0.018,42,1.383,87,0.341,91,0.265,98,0.215,99,0.265,106,2.011,144,2.364,154,2.364,165,2.261,167,1.578,169,2.261,172,0.013,173,0.013,576,2.232,577,2.832,581,3.373,582,2.659,584,3.603,585,3.603,586,3.872,587,2.5,588,3.373,590,2.841,981,3.626,1076,4.767,1947,4.053,1948,4.053,1949,4.053,1950,4.701,1951,4.701,1952,4.701,1953,4.701,1954,4.701,1955,4.701,1956,4.701]],["title/components/ZoneComponent.html",[0,0.3,160,1.167]],["body/components/ZoneComponent.html",[0,0.435,1,1.023,2,1.271,3,0.152,4,0.152,6,1.229,7,1.12,8,0.135,10,1.453,11,2.756,12,0.978,13,1.716,14,2.038,17,0.018,19,0.443,42,0.978,44,0.431,48,1.163,49,3.001,51,1.453,55,3.322,57,0.371,58,0.554,59,1.405,65,3.864,68,1.408,69,1.119,72,0.97,73,0.923,74,0.587,75,0.926,76,1.271,80,1.668,84,0.622,87,0.289,88,1.61,89,3.322,91,0.187,94,0.895,98,0.152,99,0.266,108,3.817,119,0.748,126,1.229,127,1.691,128,1.39,129,0.818,130,2.211,131,1.229,132,1.229,133,1.023,134,2.336,135,1.023,136,0.782,137,1.023,138,1.229,139,0.978,140,1.12,141,1.023,142,1.023,143,1.229,144,1.023,145,1.229,146,0.935,147,1.229,148,1.023,149,1.229,150,1.229,151,1.023,152,1.023,153,1.229,154,1.023,155,1.229,156,1.023,157,1.229,158,1.023,159,1.229,160,1.841,161,1.478,162,0.978,163,0.895,164,1.229,165,0.978,166,1.229,167,0.97,168,1.229,169,0.978,170,1.173,171,1.229,172,0.01,173,0.01,176,2.02,177,2.02,184,1.422,190,1.851,220,2.16,224,0.748,235,1.579,248,0.935,268,0.856,321,4.267,330,2.236,333,1.063,390,2.551,396,2.756,402,2.211,453,2.02,469,2.854,517,2.338,567,3.066,616,3.573,617,1.12,619,2.009,657,1.768,666,3.319,758,3.107,761,3.572,809,4.237,926,4.237,932,4.613,940,4.872,962,4.237,963,4.071,975,2.866,980,2.866,981,2.564,1004,2.564,1017,2.866,1018,4.071,1093,2.009,1253,3.319,1258,3.614,1292,3.864,1364,4.735,1776,2.866,1788,2.866,1957,2.866,1958,4.722,1959,4.722,1960,5.493,1961,5.493,1962,4.722,1963,3.324,1964,3.324,1965,3.324,1966,3.324,1967,3.324,1968,3.324,1969,3.324,1970,4.722,1971,3.324,1972,3.324,1973,3.324,1974,3.324,1975,3.324,1976,4.722,1977,3.324,1978,3.324,1979,3.324,1980,3.324,1981,3.324,1982,3.324,1983,3.324,1984,3.324,1985,3.324,1986,3.324,1987,3.324]],["title/coverage.html",[1988,4.462]],["body/coverage.html",[0,0.599,1,1.164,8,0.153,9,3.26,17,0.018,23,3.577,57,0.193,63,1.796,84,0.707,99,0.213,114,2.285,129,1.557,133,1.164,135,1.164,136,0.89,137,1.164,139,1.113,141,1.164,142,1.164,144,1.164,146,1.064,148,1.164,151,1.164,154,1.164,156,1.164,158,1.164,160,1.164,163,1.018,165,1.113,167,0.777,169,1.113,172,0.011,173,0.011,174,3.26,175,3.866,182,1.898,186,0.744,187,1.113,189,4.14,194,1.76,214,1.898,220,1.164,320,2.011,321,3.745,322,3.329,323,4.14,326,1.898,327,1.898,329,2.285,332,1.898,389,4.14,395,2.285,400,2.011,449,3.26,559,2.455,561,3.26,609,2.455,610,4.107,617,1.274,622,1.796,624,2.455,627,2.285,753,3.985,761,1.898,812,3.26,922,3.985,941,2.139,942,2.917,1066,4.14,1083,2.011,1086,3.355,1119,3.985,1135,2.66,1243,3.26,1252,3.26,1334,3.26,1362,3.26,1363,3.26,1430,2.011,1431,3.625,1432,4.658,1436,2.011,1447,2.011,1449,2.455,1451,2.455,1453,3.26,1522,2.917,1589,2.66,1590,3.985,1599,2.285,1638,3.985,1728,3.26,1729,3.26,1737,3.821,1744,2.285,1751,3.26,1797,3.26,1812,2.917,1842,3.26,1957,3.26,1988,3.26,1989,2.917,1990,3.781,1991,3.781,1992,7.123,1993,6.621,1994,6.997,1995,5.885,1996,3.781,1997,3.781,1998,3.781,1999,3.781,2000,5.166,2001,6.324,2002,3.781,2003,3.781,2004,5.893,2005,3.781,2006,3.781,2007,5.166,2008,5.166,2009,5.166,2010,3.781,2011,3.781,2012,3.781,2013,5.885,2014,3.781,2015,3.781,2016,5.166,2017,3.781,2018,3.781,2019,3.26,2020,3.26,2021,3.26,2022,3.781,2023,3.781,2024,3.781,2025,3.781]],["title/dependencies.html",[577,2.165,2026,2.729]],["body/dependencies.html",[17,0.018,91,0.314,94,1.501,172,0.015,173,0.015,197,4.97,207,3.923,209,3.37,210,3.621,345,2.799,354,2.799,577,2.648,587,2.966,620,3.621,951,2.386,1080,4.301,1082,3.621,2027,5.576,2028,7.707,2029,5.576,2030,6.623,2031,5.71,2032,5.576,2033,5.576,2034,5.576,2035,5.576,2036,5.576,2037,5.576,2038,5.576,2039,5.576,2040,5.576,2041,5.576,2042,5.576,2043,5.576,2044,5.576]],["title/miscellaneous/functions.html",[2045,1.913,2046,3.931]],["body/miscellaneous/functions.html",[17,0.017,19,0.404,57,0.305,58,0.701,68,1.407,72,1.228,73,0.873,74,0.742,75,1.172,172,0.015,173,0.015,1086,3.882,1431,3,1638,5.32,1681,5.153,2021,5.947,2045,3.612,2046,5.153,2047,5.153]],["title/index.html",[19,0.214,2048,2.441,2049,2.441]],["body/index.html",[0,0.544,2,1.869,4,0.099,5,0.923,7,1.621,8,0.087,10,0.664,11,1.712,13,0.485,14,1.139,17,0.017,20,3.264,28,1.303,39,1.024,42,2.024,49,1.083,51,1.05,56,1.303,57,0.308,59,0.9,72,0.988,73,0.932,74,0.424,76,0.918,82,3.166,84,0.792,87,0.297,88,1.139,91,0.122,94,0.581,98,0.193,99,0.239,110,2.4,127,1.48,128,0.635,136,0.803,140,1.15,161,1.869,172,0.008,173,0.008,179,2.941,190,1.877,196,1.518,209,2.557,210,1.401,212,2.907,216,1.712,217,1.722,219,0.695,220,1.715,224,0.768,235,0.768,266,2.16,276,1.303,277,2.4,278,3.929,279,1.518,301,1.323,325,2.491,333,0.768,336,0.971,339,0.555,343,1.401,345,3.201,346,1.401,354,3.266,355,2.251,376,1.518,390,2.158,391,2.215,392,2.557,393,1.401,396,1.083,398,2.63,445,2.215,446,1.401,532,1.303,541,1.024,544,2.907,553,2.748,555,2.91,563,1.22,576,1.024,577,1.024,588,1.22,590,1.303,613,3.461,617,0.727,620,2.215,637,1.814,638,0.836,641,1.401,643,1.518,650,2.215,651,3.686,656,1.518,666,2.557,686,2.907,688,1.518,697,3.402,699,2.061,707,1.401,708,2.748,758,3.994,769,2.631,770,1.664,776,1.401,799,2.977,948,2.941,951,2.729,1022,3.264,1027,2.941,1041,1.86,1052,3.384,1053,4.147,1054,2.941,1060,2.631,1071,2.215,1082,3.402,1109,2.215,1127,1.303,1128,1.664,1137,1.147,1145,1.518,1167,1.664,1179,1.664,1192,1.518,1197,2.631,1199,1.664,1203,1.518,1313,1.86,1338,1.303,1408,6.207,1409,3.648,1410,2.941,1423,2.557,1458,2.941,1459,4.147,1460,5.5,1477,2.941,1480,2.941,1482,4.517,1485,2.941,1500,1.86,1505,1.303,1519,3.264,1639,3.71,1800,1.86,1819,4.501,1821,2.941,1822,2.941,1861,1.86,1868,4.147,1875,1.664,1989,1.664,2004,1.86,2048,1.664,2049,1.664,2050,6.802,2051,6.229,2052,3.412,2053,2.157,2054,4.232,2055,2.157,2056,7.007,2057,2.157,2058,2.157,2059,3.412,2060,2.157,2061,3.412,2062,2.157,2063,2.157,2064,5.835,2065,2.157,2066,4.232,2067,2.157,2068,4.232,2069,4.81,2070,2.157,2071,2.157,2072,2.157,2073,2.157,2074,2.157,2075,4.147,2076,2.157,2077,5.571,2078,5.571,2079,2.157,2080,2.157,2081,2.157,2082,3.412,2083,3.412,2084,3.412,2085,3.412,2086,2.157,2087,2.157,2088,5.24,2089,2.157,2090,2.157,2091,3.412,2092,2.157,2093,2.157,2094,3.412,2095,3.412,2096,3.412,2097,2.157,2098,2.157,2099,3.412,2100,2.157,2101,2.157,2102,2.157,2103,4.232,2104,3.412,2105,2.157,2106,2.157,2107,4.232,2108,3.412,2109,3.412,2110,2.157,2111,5.835,2112,4.81,2113,2.157,2114,3.412,2115,1.86,2116,2.157,2117,2.157,2118,2.157,2119,2.157,2120,2.157,2121,2.157,2122,4.81,2123,3.412,2124,2.157,2125,2.157,2126,4.147,2127,1.86,2128,4.232,2129,2.157,2130,2.157,2131,3.412,2132,4.232,2133,4.232,2134,4.232,2135,2.157,2136,2.941,2137,4.81,2138,2.157,2139,6.05,2140,2.157,2141,2.157,2142,2.157,2143,3.412,2144,2.157,2145,2.157,2146,2.157,2147,3.412,2148,4.81,2149,4.81,2150,2.157,2151,2.157,2152,2.157,2153,6.619,2154,2.157,2155,2.157,2156,5.24,2157,2.157,2158,4.232,2159,2.157,2160,2.157,2161,2.157,2162,3.412,2163,2.157,2164,2.157,2165,2.157,2166,2.157,2167,3.412,2168,2.157,2169,2.157,2170,2.157,2171,2.157,2172,4.232,2173,2.157,2174,2.157,2175,2.157,2176,2.157,2177,4.81,2178,2.157,2179,2.157,2180,2.157,2181,2.157,2182,2.157,2183,2.157,2184,2.157,2185,2.157,2186,2.157,2187,2.157,2188,4.232,2189,3.412,2190,2.157,2191,2.157,2192,2.157,2193,2.157,2194,2.157,2195,2.157,2196,2.157,2197,2.157,2198,2.157,2199,2.157,2200,2.157,2201,2.157,2202,2.157,2203,2.157,2204,2.157,2205,2.157,2206,2.157,2207,2.157,2208,2.157,2209,3.412,2210,4.81,2211,2.157,2212,4.232,2213,3.412,2214,3.412,2215,4.232,2216,2.157,2217,2.157,2218,2.157,2219,3.412,2220,2.157,2221,2.157,2222,2.157,2223,2.157,2224,3.412,2225,2.157,2226,3.412,2227,2.157,2228,2.157,2229,2.157,2230,2.157,2231,2.157,2232,2.157,2233,2.157,2234,2.157,2235,4.232,2236,3.412,2237,2.157,2238,3.412,2239,2.157,2240,2.157,2241,2.157,2242,3.412,2243,2.157,2244,2.157,2245,2.157,2246,2.157,2247,2.157,2248,2.157,2249,2.157,2250,2.157,2251,2.157,2252,3.412,2253,3.412,2254,2.157,2255,2.157,2256,2.157,2257,2.157,2258,2.157,2259,2.157,2260,2.157,2261,2.157,2262,2.157,2263,2.157,2264,2.157,2265,2.157,2266,2.157,2267,2.157,2268,2.157,2269,2.157,2270,3.412,2271,2.157,2272,2.157,2273,2.157,2274,2.157,2275,2.157,2276,2.157,2277,2.157,2278,2.157,2279,2.157,2280,3.412,2281,2.157,2282,3.412,2283,2.157,2284,2.157,2285,2.157,2286,2.157,2287,2.157,2288,2.157,2289,2.157,2290,2.157,2291,2.157,2292,3.412,2293,2.157,2294,2.157,2295,2.157,2296,2.157,2297,2.157,2298,2.157,2299,3.412,2300,2.157,2301,2.157,2302,2.157,2303,2.157,2304,2.157,2305,2.157,2306,3.412,2307,1.86,2308,2.157,2309,2.157,2310,2.157]],["title/license.html",[2048,2.441,2049,2.441,2311,2.729]],["body/license.html",[17,0.014,39,2.513,93,4.563,106,2.264,108,3.198,172,0.014,173,0.014,212,3.198,262,4.168,275,3.723,615,2.656,1189,4.082,1819,4.95,1875,5.328,1989,4.082,2075,4.563,2115,4.563,2126,4.563,2127,5.533,2136,5.533,2311,4.563,2312,5.292,2313,6.908,2314,5.292,2315,5.292,2316,6.418,2317,5.292,2318,5.292,2319,5.292,2320,5.292,2321,5.292,2322,5.292,2323,7.69,2324,5.292,2325,5.292,2326,5.292,2327,5.292,2328,5.292,2329,5.292,2330,5.292,2331,5.292,2332,5.292,2333,5.292,2334,5.292,2335,6.418,2336,5.292,2337,5.292,2338,5.292,2339,6.418,2340,5.292,2341,5.292,2342,5.292,2343,5.292,2344,5.292,2345,5.292,2346,5.292,2347,5.292,2348,5.292,2349,5.292,2350,5.292,2351,5.292,2352,5.292,2353,5.292,2354,5.292,2355,5.292,2356,5.292,2357,5.292,2358,5.292,2359,5.292,2360,5.292,2361,5.292,2362,5.292,2363,5.292,2364,5.292,2365,5.292,2366,5.292]],["title/modules.html",[576,2.457]],["body/modules.html",[17,0.015,152,2.356,172,0.015,173,0.015,575,4.124,576,2.783,896,3.806,1071,3.806,1076,3.542,1077,3.806,1109,3.806,2031,6.598,2307,6.598,2367,7.653]],["title/overview.html",[2368,4.462]],["body/overview.html",[1,2.202,2,1.11,17,0.018,99,0.232,106,1.764,114,2.492,133,1.893,135,1.893,137,2.202,139,1.81,141,1.893,142,1.893,144,2.202,146,1.731,148,1.893,151,2.202,154,2.202,156,2.202,158,1.893,160,2.202,162,1.214,163,1.926,165,2.105,167,1.469,169,2.105,172,0.012,173,0.012,188,1.328,301,2.124,559,4.645,575,4.798,576,1.958,577,2.601,578,3.555,579,3.555,580,3.555,581,3.098,582,2.333,591,2.333,896,4.552,897,3.555,898,3.555,899,3.555,1071,5.109,1072,3.555,1073,3.555,1074,3.555,1075,3.555,1076,4.76,1077,4.552,1109,4.895,1110,3.555,1111,3.555,1112,3.555,1522,3.181,1706,3.555,1707,3.555,1708,3.555,1943,4.722,1947,3.555,1948,3.555,1949,3.555,2368,3.555,2369,4.124,2370,4.124]],["title/properties.html",[44,0.416,2026,2.729]],["body/properties.html",[17,0.016,44,0.562,172,0.016,173,0.016,2371,6.155,2372,6.155]],["title/miscellaneous/typealiases.html",[2045,1.913,2373,4.56]],["body/miscellaneous/typealiases.html",[3,0.264,17,0.018,19,0.39,30,2.74,37,3.487,57,0.294,172,0.015,173,0.015,370,3.264,371,3.264,978,5.826,1057,2.896,1168,4.754,1346,3.487,1423,3.487,1505,3.487,1737,3.747,1739,4.754,1740,4.059,1741,4.059,1742,4.059,1743,4.059,1812,4.451,2045,3.487,2374,5.77,2375,5.77,2376,5.77,2377,5.77,2378,5.77]],["title/miscellaneous/variables.html",[2045,1.913,2379,3.931]],["body/miscellaneous/variables.html",[7,1.337,17,0.018,19,0.268,30,2.864,57,0.307,73,1.153,75,1.359,76,1.866,84,1.128,172,0.012,173,0.012,316,2.244,318,2.79,339,1.915,390,2.918,610,2.576,622,2.534,627,3.644,628,2.244,629,2.244,630,2.244,631,2.576,632,2.244,633,2.244,922,3.059,941,2.244,942,4.116,983,2.576,984,2.576,985,2.576,986,2.576,987,2.576,988,2.576,989,2.576,1057,3.027,1083,2.838,1127,4.281,1139,3.059,1142,3.059,1144,3.059,1146,3.059,1148,3.059,1157,3.059,1159,3.059,1164,4.736,1423,3.644,1425,3.42,1431,1.991,1432,2.79,1436,2.11,1441,2.576,1445,2.576,1447,2.838,1448,3.059,1449,3.465,1450,3.059,1451,3.465,1452,3.059,1474,3.42,1505,3.644,1512,3.42,1523,3.42,2019,3.42,2020,4.601,2045,2.397,2047,3.42,2379,3.42,2380,3.966,2381,3.966,2382,6.031,2383,3.966,2384,3.966,2385,3.966,2386,3.966,2387,3.966,2388,3.966,2389,3.966,2390,3.966,2391,3.966]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":23,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/SpacingEditorComponent.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":2044,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":1755,"title":{},"body":{"components/ToastComponent.html":{}}}],["0.25rem",{"_index":1418,"title":{},"body":{"components/PaletteComponent.html":{}}}],["0.2rem",{"_index":1217,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["0.2s",{"_index":1224,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["0.3rem",{"_index":1228,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["0.3s",{"_index":1920,"title":{},"body":{"components/TreeComponent.html":{}}}],["0.5rem",{"_index":1229,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{}}}],["0.5s",{"_index":1945,"title":{},"body":{"components/TreeComponent.html":{}}}],["0.75rem",{"_index":1691,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["0.7em",{"_index":1424,"title":{},"body":{"components/PaletteComponent.html":{}}}],["0/1",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1240,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["0deg",{"_index":1222,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["0px",{"_index":1904,"title":{},"body":{"components/TreeComponent.html":{}}}],["1",{"_index":301,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"index.html":{},"overview.html":{}}}],["1).join",{"_index":311,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["1.0.0",{"_index":2372,"title":{},"body":{"properties.html":{}}}],["1.1.0",{"_index":2035,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1692,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["1/10",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":32,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"components/ToastComponent.html":{},"components/TreeComponent.html":{}}}],["1000",{"_index":1370,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["1046",{"_index":1756,"title":{},"body":{"components/ToastComponent.html":{}}}],["105px",{"_index":1200,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["10px",{"_index":1898,"title":{},"body":{"components/TreeComponent.html":{}}}],["12px",{"_index":1249,"title":{},"body":{"components/HtmlEditorComponent.html":{},"components/TreeComponent.html":{}}}],["13",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["14.1.0",{"_index":2028,"title":{},"body":{"dependencies.html":{}}}],["14l6",{"_index":1942,"title":{},"body":{"components/TreeComponent.html":{}}}],["15",{"_index":2369,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1933,"title":{},"body":{"components/TreeComponent.html":{}}}],["16'%3e%3cpath",{"_index":1934,"title":{},"body":{"components/TreeComponent.html":{}}}],["17",{"_index":2370,"title":{},"body":{"overview.html":{}}}],["1].match(/\\d",{"_index":307,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["1fr",{"_index":1201,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["1px",{"_index":1232,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["1rem",{"_index":1641,"title":{},"body":{"components/SvgIconComponent.html":{},"components/ToastComponent.html":{}}}],["2",{"_index":1519,"title":{},"body":{"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["2.0.0",{"_index":2039,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2033,"title":{},"body":{"dependencies.html":{}}}],["2.11.5",{"_index":2037,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1694,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["200px",{"_index":35,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{}}}],["2021",{"_index":2314,"title":{},"body":{"license.html":{}}}],["20px",{"_index":1903,"title":{},"body":{"components/TreeComponent.html":{}}}],["22px",{"_index":1206,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["25px",{"_index":1207,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{}}}],["27",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1426,"title":{},"body":{"components/PaletteComponent.html":{},"components/TreeComponent.html":{}}}],["2rem",{"_index":1693,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["3",{"_index":20,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["3/10",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["3/22",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1816,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["350px",{"_index":1753,"title":{},"body":{"components/ToastComponent.html":{}}}],["35px",{"_index":1926,"title":{},"body":{"components/TreeComponent.html":{}}}],["3px",{"_index":1419,"title":{},"body":{"components/PaletteComponent.html":{},"components/TreeComponent.html":{}}}],["3s",{"_index":1804,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["4",{"_index":1522,"title":{},"body":{"components/SpacingEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["4.3.1",{"_index":2034,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":452,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["4px",{"_index":1065,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["5",{"_index":1524,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["5.2.0",{"_index":2038,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1215,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["5000",{"_index":1764,"title":{},"body":{"components/ToastComponent.html":{}}}],["5px",{"_index":24,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/PaletteComponent.html":{},"components/TreeComponent.html":{}}}],["6",{"_index":1943,"title":{},"body":{"components/TreeComponent.html":{},"overview.html":{}}}],["6'/%3e%3c/svg%3e",{"_index":1944,"title":{},"body":{"components/TreeComponent.html":{}}}],["6/22",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1214,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["7",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":2040,"title":{},"body":{"dependencies.html":{}}}],["73",{"_index":1211,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["75",{"_index":1212,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["7c7c7c",{"_index":1427,"title":{},"body":{"components/PaletteComponent.html":{}}}],["7px",{"_index":25,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["8",{"_index":27,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["83",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["90deg",{"_index":1205,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["90px",{"_index":1058,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["9px",{"_index":1902,"title":{},"body":{"components/TreeComponent.html":{}}}],["_",{"_index":697,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["_class",{"_index":824,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["_container",{"_index":216,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["_data",{"_index":1255,"title":{},"body":{"components/ItemComponent.html":{}}}],["_getconfig",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{}}}],["_getconfig(id",{"_index":254,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["_hoveredid",{"_index":762,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["_raw",{"_index":668,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["_showtree",{"_index":925,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["a.orders[id",{"_index":1882,"title":{},"body":{"components/TreeComponent.html":{}}}],["a.selected",{"_index":1913,"title":{},"body":{"components/TreeComponent.html":{}}}],["a:focus",{"_index":1916,"title":{},"body":{"components/TreeComponent.html":{}}}],["a:hover",{"_index":1915,"title":{},"body":{"components/TreeComponent.html":{}}}],["above",{"_index":2126,"title":{},"body":{"index.html":{},"license.html":{}}}],["abritrarily",{"_index":2211,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":1901,"title":{},"body":{"components/TreeComponent.html":{}}}],["access",{"_index":1488,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["accessors",{"_index":469,"title":{},"body":{"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ZoneComponent.html":{}}}],["according",{"_index":2143,"title":{},"body":{"index.html":{}}}],["achieved",{"_index":2123,"title":{},"body":{"index.html":{}}}],["action",{"_index":39,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"index.html":{},"license.html":{}}}],["action.action",{"_index":1789,"title":{},"body":{"components/ToastComponent.html":{}}}],["action.text",{"_index":1792,"title":{},"body":{"components/ToastComponent.html":{}}}],["actions",{"_index":1746,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["activate",{"_index":470,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["activate(value",{"_index":542,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["activation",{"_index":1479,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["actual_component",{"_index":171,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["add",{"_index":686,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["addentities",{"_index":200,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["addentities(config",{"_index":234,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["addentities(v",{"_index":294,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["addhighlight",{"_index":814,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["additional",{"_index":2253,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":2231,"title":{},"body":{"index.html":{}}}],["addvalue",{"_index":457,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["addvaluetolist",{"_index":458,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["addvaluetolist(values",{"_index":474,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["affect",{"_index":2087,"title":{},"body":{"index.html":{}}}],["aftercontentinit",{"_index":1364,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{},"components/ZoneComponent.html":{}}}],["afterviewinit",{"_index":1335,"title":{},"body":{"components/ModalComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToastComponent.html":{}}}],["alert",{"_index":1752,"title":{},"body":{"components/ToastComponent.html":{}}}],["aliases",{"_index":2374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1141,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["align_x_center",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align_x_end",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align_x_space_around",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align_x_space_between",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align_x_start",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align_x_stretch",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align_y_baseline",{"_index":1148,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"miscellaneous/variables.html":{}}}],["align_y_center",{"_index":1142,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"miscellaneous/variables.html":{}}}],["align_y_end",{"_index":1144,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"miscellaneous/variables.html":{}}}],["align_y_start",{"_index":1139,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"miscellaneous/variables.html":{}}}],["align_y_stretch",{"_index":1146,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"miscellaneous/variables.html":{}}}],["alignment",{"_index":1128,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"index.html":{}}}],["alignmenthorizontal",{"_index":1121,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["alignmentvertical",{"_index":1122,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["allconfigchanges",{"_index":1303,"title":{},"body":{"components/ItemComponent.html":{}}}],["allow",{"_index":1799,"title":{},"body":{"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{}}}],["allows",{"_index":2210,"title":{},"body":{"index.html":{}}}],["allsuggests",{"_index":52,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["already",{"_index":699,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["always",{"_index":2204,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":2333,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2051,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2027,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":587,"title":{},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"modules/UtilsModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2029,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":91,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":1080,"title":{},"body":{"modules/ConfiguratorModule.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2030,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2032,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":1803,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["animation",{"_index":1761,"title":{},"body":{"components/ToastComponent.html":{}}}],["another",{"_index":346,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"index.html":{}}}],["anymore",{"_index":2304,"title":{},"body":{"index.html":{}}}],["anywhere",{"_index":2230,"title":{},"body":{"index.html":{}}}],["api",{"_index":2057,"title":{},"body":{"index.html":{}}}],["app",{"_index":2078,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":2076,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2093,"title":{},"body":{"index.html":{}}}],["append",{"_index":1826,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["application",{"_index":2056,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2054,"title":{},"body":{"index.html":{}}}],["apply",{"_index":1983,"title":{},"body":{"components/ZoneComponent.html":{}}}],["arborescence",{"_index":2154,"title":{},"body":{"index.html":{}}}],["arguments",{"_index":840,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["aria",{"_index":1666,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["arising",{"_index":2364,"title":{},"body":{"license.html":{}}}],["around",{"_index":1165,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{}}}],["arrange",{"_index":664,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["array",{"_index":1180,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["array.isarray(icons",{"_index":1625,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["array.isarray(this.data",{"_index":1985,"title":{},"body":{"components/ZoneComponent.html":{}}}],["arrow",{"_index":1802,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["arrow_down",{"_index":1157,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"miscellaneous/variables.html":{}}}],["arrow_forward",{"_index":1159,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"miscellaneous/variables.html":{}}}],["associated",{"_index":2324,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2355,"title":{},"body":{"license.html":{}}}],["auto",{"_index":37,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete",{"_index":15,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{}}}],["autocomplete'},{'name",{"_index":132,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["autocomplete.component",{"_index":1953,"title":{},"body":{"modules/UtilsModule.html":{}}}],["autocompletecomponent",{"_index":1,"title":{"components/AutocompleteComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autohide",{"_index":1762,"title":{},"body":{"components/ToastComponent.html":{}}}],["automatically",{"_index":2162,"title":{},"body":{"index.html":{}}}],["available",{"_index":2228,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":1059,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["b",{"_index":1515,"title":{},"body":{"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["b.orders[id",{"_index":1883,"title":{},"body":{"components/TreeComponent.html":{}}}],["backdrop",{"_index":1013,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ModalComponent.html":{}}}],["background",{"_index":1235,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["based",{"_index":2188,"title":{},"body":{"index.html":{}}}],["baseline",{"_index":1149,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["basket",{"_index":2109,"title":{},"body":{"index.html":{}}}],["becomes",{"_index":2280,"title":{},"body":{"index.html":{}}}],["before",{"_index":707,"title":{},"body":{"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["behavior",{"_index":768,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/TreeComponent.html":{}}}],["behaviorsubject",{"_index":759,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["behaviorsubject(false",{"_index":774,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["behaviorsubject(undefined",{"_index":767,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["being",{"_index":2283,"title":{},"body":{"index.html":{}}}],["between",{"_index":1167,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"index.html":{}}}],["bg",{"_index":1208,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["bindings",{"_index":2159,"title":{},"body":{"index.html":{}}}],["blank",{"_index":2092,"title":{},"body":{"index.html":{}}}],["block",{"_index":1416,"title":{},"body":{"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{}}}],["blocks",{"_index":2119,"title":{},"body":{"index.html":{}}}],["blur",{"_index":107,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["blur').pipe(filter",{"_index":104,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["body",{"_index":1055,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["boolean",{"_index":268,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ZoneComponent.html":{}}}],["bootstrap",{"_index":951,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ModalComponent.html":{},"components/SpacingEditorComponent.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/dist/css/bootstrap",{"_index":2083,"title":{},"body":{"index.html":{}}}],["border",{"_index":1230,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["border${direction",{"_index":1549,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["border${match.direction",{"_index":1586,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["borderdirections",{"_index":1461,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["borders",{"_index":1454,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["bottom",{"_index":1057,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":21,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ToastComponent.html":{},"components/TreeComponent.html":{}}}],["break",{"_index":1558,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["browse",{"_index":2367,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2031,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bs",{"_index":149,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["bsstyle",{"_index":1739,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"miscellaneous/typealiases.html":{}}}],["btn",{"_index":451,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/PaletteComponent.html":{},"components/ToolbarComponent.html":{}}}],["btn.disabled",{"_index":1798,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["builder",{"_index":2050,"title":{},"body":{"index.html":{}}}],["builder\";(note",{"_index":2086,"title":{},"body":{"index.html":{}}}],["builder\";(obviously",{"_index":2275,"title":{},"body":{"index.html":{}}}],["builder(this",{"_index":2070,"title":{},"body":{"index.html":{}}}],["builder/styles/ui",{"_index":2085,"title":{},"body":{"index.html":{}}}],["builder:make",{"_index":2287,"title":{},"body":{"index.html":{}}}],["building",{"_index":2118,"title":{},"body":{"index.html":{}}}],["built",{"_index":2177,"title":{},"body":{"index.html":{}}}],["button",{"_index":1483,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["buttons",{"_index":1203,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["c",{"_index":1189,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"license.html":{}}}],["c).join",{"_index":1588,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["c.id",{"_index":694,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["c.type",{"_index":692,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["call",{"_index":878,"title":{},"body":{"directives/ConfigurableDirective.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{}}}],["callback",{"_index":1068,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{}}}],["called",{"_index":1481,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["cancel",{"_index":1336,"title":{},"body":{"components/ModalComponent.html":{}}}],["canredo",{"_index":314,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["canundo",{"_index":312,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["capture",{"_index":991,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["card",{"_index":16,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["care",{"_index":2298,"title":{},"body":{"index.html":{}}}],["case",{"_index":532,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["cases",{"_index":2256,"title":{},"body":{"index.html":{}}}],["catch(e",{"_index":443,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["caused",{"_index":109,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["causes",{"_index":1352,"title":{},"body":{"components/ModalComponent.html":{}}}],["ccc",{"_index":1234,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["cdr",{"_index":940,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["cdref",{"_index":642,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{}}}],["center",{"_index":1143,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["certain",{"_index":2250,"title":{},"body":{"index.html":{}}}],["change",{"_index":553,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"index.html":{}}}],["change.directive",{"_index":1955,"title":{},"body":{"modules/UtilsModule.html":{}}}],["change.directive.ts",{"_index":1363,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{},"coverage.html":{}}}],["change.directive.ts:11",{"_index":1369,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["change.directive.ts:15",{"_index":1373,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["change.directive.ts:26",{"_index":1374,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["change.directive.ts:8",{"_index":1371,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["change.directive.ts:9",{"_index":1372,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["changedetection",{"_index":176,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["changedetectionstrategy",{"_index":184,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":177,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["changedetectorref",{"_index":616,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/ZoneComponent.html":{}}}],["changes",{"_index":657,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["changes.conditionsdata",{"_index":1297,"title":{},"body":{"components/ItemComponent.html":{}}}],["changes.config",{"_index":1178,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{}}}],["changes.dataindex",{"_index":1296,"title":{},"body":{"components/ItemComponent.html":{}}}],["changing",{"_index":2284,"title":{},"body":{"index.html":{}}}],["charge",{"_index":2320,"title":{},"body":{"license.html":{}}}],["check",{"_index":592,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["check(condition",{"_index":405,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checkcondition",{"_index":593,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checkcondition(condition",{"_index":427,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checkdata",{"_index":594,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checkdata(condition",{"_index":424,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checked",{"_index":1209,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["checkequals",{"_index":595,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checkequals(condition",{"_index":435,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checkregexp",{"_index":596,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checkregexp(condition",{"_index":438,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checksinglevalue",{"_index":597,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checksinglevalue(condition",{"_index":432,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["child",{"_index":1867,"title":{},"body":{"components/TreeComponent.html":{}}}],["child's",{"_index":1870,"title":{},"body":{"components/TreeComponent.html":{}}}],["child::after",{"_index":1907,"title":{},"body":{"components/TreeComponent.html":{}}}],["child::before",{"_index":1911,"title":{},"body":{"components/TreeComponent.html":{}}}],["child:before",{"_index":1908,"title":{},"body":{"components/TreeComponent.html":{}}}],["children",{"_index":926,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["children(id",{"_index":1848,"title":{},"body":{"components/TreeComponent.html":{}}}],["claim",{"_index":2358,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{"classes/SvgIcon.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classeditorcomponent",{"_index":133,"title":{"components/ClassEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":180,"title":{},"body":{"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{}}}],["cli",{"_index":2286,"title":{},"body":{"index.html":{}}}],["click",{"_index":110,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/ConfigurableDirective.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["click(event",{"_index":846,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["clickconfigurable",{"_index":901,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["clickconfigurable(configurable",{"_index":789,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["clickinprogress",{"_index":45,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["clicks",{"_index":2175,"title":{},"body":{"index.html":{}}}],["close",{"_index":611,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["closes",{"_index":1497,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["cluster_conditionsmodule",{"_index":578,"title":{},"body":{"modules/ConditionsModule.html":{},"overview.html":{}}}],["cluster_conditionsmodule_declarations",{"_index":579,"title":{},"body":{"modules/ConditionsModule.html":{},"overview.html":{}}}],["cluster_conditionsmodule_exports",{"_index":580,"title":{},"body":{"modules/ConditionsModule.html":{},"overview.html":{}}}],["cluster_configurablemodule",{"_index":897,"title":{},"body":{"modules/ConfigurableModule.html":{},"overview.html":{}}}],["cluster_configurablemodule_declarations",{"_index":899,"title":{},"body":{"modules/ConfigurableModule.html":{},"overview.html":{}}}],["cluster_configurablemodule_exports",{"_index":898,"title":{},"body":{"modules/ConfigurableModule.html":{},"overview.html":{}}}],["cluster_configuratormodule",{"_index":1072,"title":{},"body":{"modules/ConfiguratorModule.html":{},"overview.html":{}}}],["cluster_configuratormodule_declarations",{"_index":1075,"title":{},"body":{"modules/ConfiguratorModule.html":{},"overview.html":{}}}],["cluster_configuratormodule_exports",{"_index":1073,"title":{},"body":{"modules/ConfiguratorModule.html":{},"overview.html":{}}}],["cluster_configuratormodule_imports",{"_index":1074,"title":{},"body":{"modules/ConfiguratorModule.html":{},"overview.html":{}}}],["cluster_dynamicviewsmodule",{"_index":1110,"title":{},"body":{"modules/DynamicViewsModule.html":{},"overview.html":{}}}],["cluster_dynamicviewsmodule_declarations",{"_index":1111,"title":{},"body":{"modules/DynamicViewsModule.html":{},"overview.html":{}}}],["cluster_dynamicviewsmodule_exports",{"_index":1112,"title":{},"body":{"modules/DynamicViewsModule.html":{},"overview.html":{}}}],["cluster_dynamicviewsmodule_imports",{"_index":1113,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["cluster_svgiconsmodule",{"_index":1706,"title":{},"body":{"modules/SvgIconsModule.html":{},"overview.html":{}}}],["cluster_svgiconsmodule_declarations",{"_index":1707,"title":{},"body":{"modules/SvgIconsModule.html":{},"overview.html":{}}}],["cluster_svgiconsmodule_exports",{"_index":1708,"title":{},"body":{"modules/SvgIconsModule.html":{},"overview.html":{}}}],["cluster_utilsmodule",{"_index":1947,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["cluster_utilsmodule_declarations",{"_index":1949,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["cluster_utilsmodule_exports",{"_index":1948,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["code",{"_index":1477,"title":{},"body":{"components/SpacingEditorComponent.html":{},"index.html":{}}}],["coercecsspixelvalue",{"_index":2021,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["coercecsspixelvalue(value",{"_index":1681,"title":{},"body":{"components/SvgIconComponent.html":{},"miscellaneous/functions.html":{}}}],["color",{"_index":1236,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{},"components/TreeComponent.html":{}}}],["color(color",{"_index":1685,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["column",{"_index":1048,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/TreeComponent.html":{}}}],["columns",{"_index":1199,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["comes",{"_index":2278,"title":{},"body":{"index.html":{}}}],["command",{"_index":2071,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":586,"title":{},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/UtilsModule.html":{}}}],["compatible",{"_index":689,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["compile",{"_index":2301,"title":{},"body":{"index.html":{}}}],["complete",{"_index":645,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["completely",{"_index":2236,"title":{},"body":{"index.html":{}}}],["complex",{"_index":2212,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.id",{"_index":375,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["component_template",{"_index":131,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["componentconfig",{"_index":187,"title":{"interfaces/ComponentConfig.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["componentconfig|undefined",{"_index":271,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["componentcreator",{"_index":320,"title":{"interfaces/ComponentCreator.html":{}},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["componentid",{"_index":1462,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{},"overview.html":{}}}],["condition",{"_index":136,"title":{"interfaces/Condition.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["condition.$regexp",{"_index":441,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.data",{"_index":403,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.field",{"_index":530,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["condition.or",{"_index":412,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.pipe",{"_index":589,"title":{},"body":{"modules/ConditionsModule.html":{}}}],["condition.type",{"_index":421,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.value",{"_index":447,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.value.tolowercase",{"_index":436,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.values.every(v",{"_index":431,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.values.find(v",{"_index":429,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.values.map(v",{"_index":413,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["conditional",{"_index":1054,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["conditionally",{"_index":556,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["conditioneditorcomponent",{"_index":135,"title":{"components/ConditionEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionpipe",{"_index":559,"title":{"pipes/ConditionPipe.html":{}},"body":{"pipes/ConditionPipe.html":{},"modules/ConditionsModule.html":{},"coverage.html":{},"overview.html":{}}}],["conditions",{"_index":212,"title":{},"body":{"interfaces/ComponentConfig.html":{},"components/ConditionEditorComponent.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"index.html":{},"license.html":{}}}],["conditions.service",{"_index":571,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["conditions/conditions.service",{"_index":503,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ItemComponent.html":{}}}],["conditionsdata",{"_index":396,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["conditionsdata?.[condition.data",{"_index":404,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["conditionservice",{"_index":568,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["conditionsmodule",{"_index":575,"title":{"modules/ConditionsModule.html":{}},"body":{"modules/ConditionsModule.html":{},"modules.html":{},"overview.html":{}}}],["conditionsservice",{"_index":400,"title":{"injectables/ConditionsService.html":{}},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"components/ItemComponent.html":{},"coverage.html":{}}}],["conditionvalue",{"_index":395,"title":{"interfaces/ConditionValue.html":{}},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"coverage.html":{}}}],["conf",{"_index":272,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["conf?.type",{"_index":273,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["config",{"_index":224,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["config.classes",{"_index":1501,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["config.currency",{"_index":2131,"title":{},"body":{"index.html":{}}}],["config.icons",{"_index":1605,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["config.id",{"_index":1039,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["config.jsonthe",{"_index":2289,"title":{},"body":{"index.html":{}}}],["config.missingiconfallback",{"_index":1607,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["config.type",{"_index":1309,"title":{},"body":{"components/ItemComponent.html":{}}}],["config2",{"_index":1046,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["config2.id",{"_index":1047,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["config=my",{"_index":2288,"title":{},"body":{"index.html":{}}}],["config[0",{"_index":368,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["configchanged",{"_index":612,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{}}}],["configchanges",{"_index":1300,"title":{},"body":{"components/ItemComponent.html":{}}}],["configmodal",{"_index":609,"title":{"interfaces/ConfigModal.html":{}},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["configs",{"_index":1395,"title":{},"body":{"components/PaletteComponent.html":{}}}],["configs.filter(c",{"_index":685,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["configservice",{"_index":220,"title":{"injectables/ConfigService.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["configurable",{"_index":617,"title":{"interfaces/Configurable.html":{}},"body":{"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["configurable.directive",{"_index":760,"title":{},"body":{"interfaces/Configurable.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{}}}],["configurable.id",{"_index":785,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["configurable.service",{"_index":864,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["configurable.zone",{"_index":793,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["configurable/configurable.module",{"_index":1116,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["configurable/configurable.service",{"_index":618,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["configurable]'},{'name",{"_index":164,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["configurabledirective",{"_index":163,"title":{"directives/ConfigurableDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configurabledirectivemap",{"_index":780,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["configurablemodule",{"_index":896,"title":{"modules/ConfigurableModule.html":{}},"body":{"modules/ConfigurableModule.html":{},"modules/DynamicViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["configurableservice",{"_index":761,"title":{"injectables/ConfigurableService.html":{}},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{}}}],["configuration",{"_index":325,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["configuration/config.service",{"_index":619,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{}}}],["configurationmap",{"_index":1845,"title":{},"body":{"components/TreeComponent.html":{}}}],["configurations",{"_index":2168,"title":{},"body":{"index.html":{}}}],["configurator",{"_index":613,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"index.html":{}}}],["configurator'},{'name",{"_index":138,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["configurator.component",{"_index":1089,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["configurator.component.html",{"_index":924,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["configurator.component.scss",{"_index":923,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["configurator.models",{"_index":185,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["configuratorcomponent",{"_index":137,"title":{"components/ConfiguratorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configuratorcontext",{"_index":182,"title":{"interfaces/ConfiguratorContext.html":{}},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/HtmlEditorComponent.html":{},"interfaces/PaletteOptions.html":{},"coverage.html":{}}}],["configuratormodule",{"_index":1071,"title":{"modules/ConfiguratorModule.html":{}},"body":{"modules/ConfiguratorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["configuratoroptions",{"_index":941,"title":{"interfaces/ConfiguratorOptions.html":{}},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurators",{"_index":637,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"index.html":{}}}],["configure",{"_index":1409,"title":{},"body":{"components/PaletteComponent.html":{},"index.html":{}}}],["configuring",{"_index":2247,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":2265,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2365,"title":{},"body":{"license.html":{}}}],["connector",{"_index":1918,"title":{},"body":{"components/TreeComponent.html":{}}}],["console.error(\"unexpected",{"_index":363,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["console.log(\"remove",{"_index":719,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["console.log('cancelled",{"_index":1328,"title":{},"body":{"components/ItemComponent.html":{}}}],["console.log('change",{"_index":250,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["console.log('new",{"_index":290,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["console.log('update",{"_index":288,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["console.log('watch",{"_index":241,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["console.warn(\"incorrect",{"_index":444,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["console.warn('toast",{"_index":1786,"title":{},"body":{"components/ToastComponent.html":{}}}],["const",{"_index":223,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"components/TreeComponent.html":{}}}],["constraint",{"_index":2169,"title":{},"body":{"index.html":{}}}],["constructed",{"_index":644,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["constructor",{"_index":333,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["constructor(cdr",{"_index":938,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["constructor(conditionsservice",{"_index":471,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["constructor(configservice",{"_index":1093,"title":{},"body":{"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["constructor(configurableservice",{"_index":825,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/TreeComponent.html":{}}}],["constructor(content",{"_index":1591,"title":{},"body":{"classes/SvgIcon.html":{}}}],["constructor(dragdropservice",{"_index":1388,"title":{},"body":{"components/PaletteComponent.html":{}}}],["constructor(el",{"_index":1813,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["constructor(host",{"_index":1645,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["constructor(injector",{"_index":1601,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["constructor(ngmodel",{"_index":1367,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["constructor(private",{"_index":1377,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{},"components/ToastComponent.html":{}}}],["constructor(public",{"_index":1598,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"directives/TemplateNameDirective.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["constructor(template",{"_index":1730,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["constructor(toastservice",{"_index":1759,"title":{},"body":{"components/ToastComponent.html":{}}}],["contain",{"_index":2209,"title":{},"body":{"index.html":{}}}],["contained",{"_index":1498,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["container",{"_index":266,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["container.items.findindex(item",{"_index":1035,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["container.items.splice(index",{"_index":365,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["container.items.splice(index+1",{"_index":1043,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["container.items.splice(newindex",{"_index":387,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["container.items.splice(oldindex",{"_index":386,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["containerconfig",{"_index":214,"title":{"interfaces/ContainerConfig.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"coverage.html":{}}}],["containerid",{"_index":342,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["containerindex",{"_index":329,"title":{"interfaces/ContainerIndex.html":{}},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"coverage.html":{}}}],["containerindex).container",{"_index":347,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["containers",{"_index":2153,"title":{},"body":{"index.html":{}}}],["containing",{"_index":2294,"title":{},"body":{"index.html":{}}}],["content",{"_index":1162,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["contentchild",{"_index":90,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ToolbarComponent.html":{}}}],["contentchild(\"itemtpl",{"_index":100,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["contentchild('itemtpl",{"_index":81,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["contentchild(templateref",{"_index":1810,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["contentchildren",{"_index":975,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["contentchildren(templatenamedirective",{"_index":963,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["context",{"_index":181,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{}}}],["context.id",{"_index":1036,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["context.parentid",{"_index":1033,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["contract",{"_index":2361,"title":{},"body":{"license.html":{}}}],["convenience",{"_index":2090,"title":{},"body":{"index.html":{}}}],["convert",{"_index":1179,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"index.html":{}}}],["copies",{"_index":2335,"title":{},"body":{"license.html":{}}}],["copy",{"_index":262,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"license.html":{}}}],["copyright",{"_index":2313,"title":{},"body":{"license.html":{}}}],["correct",{"_index":883,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["correctly",{"_index":2099,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":2147,"title":{},"body":{"index.html":{}}}],["corresponds",{"_index":2137,"title":{},"body":{"index.html":{}}}],["cost",{"_index":2279,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1988,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":544,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["createconfig",{"_index":324,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{}}}],["createconfig(newid",{"_index":360,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["creates",{"_index":2163,"title":{},"body":{"index.html":{}}}],["createstate",{"_index":195,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["creating",{"_index":2052,"title":{},"body":{"index.html":{}}}],["creation",{"_index":1834,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["creator",{"_index":331,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["css",{"_index":179,"title":{},"body":{"components/ClassEditorComponent.html":{},"index.html":{}}}],["currency",{"_index":2112,"title":{},"body":{"index.html":{}}}],["current",{"_index":504,"title":{},"body":{"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{}}}],["currentcolor",{"_index":1640,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["currently",{"_index":763,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["currentval",{"_index":1574,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["cursor",{"_index":40,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["custom",{"_index":651,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["customizing",{"_index":2277,"title":{},"body":{"index.html":{}}}],["d",{"_index":1313,"title":{},"body":{"components/ItemComponent.html":{},"index.html":{}}}],["d='m5",{"_index":1941,"title":{},"body":{"components/TreeComponent.html":{}}}],["damages",{"_index":2359,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1740,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"miscellaneous/typealiases.html":{}}}],["dark",{"_index":371,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"miscellaneous/typealiases.html":{}}}],["dashed",{"_index":1233,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["data",{"_index":390,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ItemComponent.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"components/ZoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data'}['${condition.field",{"_index":422,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["data'}['${condition.field}'].match(/${value.value",{"_index":420,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["data.description",{"_index":2130,"title":{},"body":{"index.html":{}}}],["data.name",{"_index":2129,"title":{},"body":{"index.html":{}}}],["data?.[condition.field]?.tostring",{"_index":425,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["data[index",{"_index":1986,"title":{},"body":{"components/ZoneComponent.html":{}}}],["dataindex",{"_index":754,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ItemComponent.html":{}}}],["deal",{"_index":2326,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2366,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":1375,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["debouncetime(this.ngmodeldebouncetime",{"_index":1380,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["debug",{"_index":507,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["debugtext",{"_index":455,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["declarations",{"_index":584,"title":{},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{}}}],["declare",{"_index":623,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["decoration",{"_index":1912,"title":{},"body":{"components/TreeComponent.html":{}}}],["decorators",{"_index":80,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["deep",{"_index":261,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["default",{"_index":76,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultconfiguratoroptions",{"_index":942,"title":{},"body":{"components/ConfiguratorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultpaletteoptions",{"_index":627,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1023,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/SvgIconComponent.html":{}}}],["defaultsize",{"_index":1433,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{}}}],["define",{"_index":2128,"title":{},"body":{"index.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["defines",{"_index":2184,"title":{},"body":{"index.html":{}}}],["delay",{"_index":1763,"title":{},"body":{"components/ToastComponent.html":{},"directives/TooltipDirective.html":{}}}],["delete",{"_index":547,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["deleteallentities",{"_index":206,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["deleteentities",{"_index":205,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["demo",{"_index":2055,"title":{},"body":{"index.html":{}}}],["depend",{"_index":2142,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":577,"title":{"dependencies.html":{}},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependent",{"_index":2262,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1070,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{}}}],["description",{"_index":1052,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["desirable",{"_index":2285,"title":{},"body":{"index.html":{}}}],["detail",{"_index":1554,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["details",{"_index":1463,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["determines",{"_index":1504,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["developer",{"_index":2114,"title":{},"body":{"index.html":{}}}],["developers",{"_index":2060,"title":{},"body":{"index.html":{}}}],["different",{"_index":1821,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{}}}],["direction",{"_index":1127,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["direction'|'magnitude",{"_index":1568,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["directions",{"_index":1123,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{}}}],["directive",{"_index":129,"title":{"directives/ConfigurableDirective.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"directives/TemplateNameDirective.html":{},"directives/TooltipDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{}}}],["directives",{"_index":162,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"overview.html":{}}}],["directly",{"_index":2219,"title":{},"body":{"index.html":{}}}],["disable",{"_index":820,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["disabled",{"_index":1006,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ToolbarComponent.html":{}}}],["disableif",{"_index":866,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["display",{"_index":555,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["displayed",{"_index":2139,"title":{},"body":{"index.html":{}}}],["displays",{"_index":2206,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1376,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["distribute",{"_index":2331,"title":{},"body":{"license.html":{}}}],["div",{"_index":1632,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["div.innerhtml",{"_index":1634,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["div.queryselector('svg",{"_index":1635,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["dnddropevent",{"_index":1278,"title":{},"body":{"components/ItemComponent.html":{}}}],["dndmodule",{"_index":1081,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{}}}],["document",{"_index":1594,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["documentation",{"_index":1989,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dollar",{"_index":2180,"title":{},"body":{"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["don't",{"_index":795,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["drag",{"_index":354,"title":{},"body":{"interfaces/ComponentCreator.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dragdropservice",{"_index":332,"title":{"injectables/DragDropService.html":{}},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["dragged",{"_index":2221,"title":{},"body":{"index.html":{}}}],["draggedcreator",{"_index":334,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["drop",{"_index":345,"title":{},"body":{"interfaces/ComponentCreator.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"dependencies.html":{},"index.html":{}}}],["drop.service",{"_index":621,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["drop.service.ts",{"_index":323,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"coverage.html":{}}}],["drop.service.ts:100",{"_index":1104,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:21",{"_index":1094,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:24",{"_index":1105,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:25",{"_index":1107,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:28",{"_index":1106,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:30",{"_index":1108,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:36",{"_index":1098,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:64",{"_index":1096,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:78",{"_index":1100,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:89",{"_index":1102,"title":{},"body":{"injectables/DragDropService.html":{}}}],["dropped",{"_index":343,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"index.html":{}}}],["dropped.container",{"_index":350,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["dropped.index",{"_index":352,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["dropzone",{"_index":1311,"title":{},"body":{"components/ItemComponent.html":{}}}],["duplicate",{"_index":931,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["duplicate(context",{"_index":945,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["dynamic",{"_index":620,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"dependencies.html":{},"index.html":{}}}],["dynamicviewsmodule",{"_index":1109,"title":{"modules/DynamicViewsModule.html":{}},"body":{"modules/DynamicViewsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["e",{"_index":1513,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["each",{"_index":1482,"title":{},"body":{"components/SpacingEditorComponent.html":{},"index.html":{}}}],["ease",{"_index":1225,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{}}}],["easily",{"_index":2061,"title":{},"body":{"index.html":{}}}],["edit",{"_index":631,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"miscellaneous/variables.html":{}}}],["edited",{"_index":764,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{}}}],["edited.config.id",{"_index":1049,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["edited.config.type",{"_index":1051,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["edited.context.templates?.[edited.config.type]?.display",{"_index":1050,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["edition",{"_index":1005,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["editor",{"_index":178,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["editor'},{'name",{"_index":134,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["editor.component.html",{"_index":454,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["editor.component.scss",{"_index":1120,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{}}}],["editor.component.ts",{"_index":175,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:101",{"_index":473,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:102",{"_index":1489,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:105",{"_index":478,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:110",{"_index":480,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:115",{"_index":482,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:117",{"_index":1484,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:121",{"_index":484,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:125",{"_index":1499,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:158",{"_index":1495,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":1129,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:185",{"_index":1478,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:196",{"_index":1491,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:21",{"_index":1169,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:22",{"_index":183,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:222",{"_index":1493,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:23",{"_index":1156,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":1251,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["editor.component.ts:25",{"_index":496,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":497,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":498,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{}}}],["editor.component.ts:31",{"_index":472,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":1471,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:34",{"_index":495,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{}}}],["editor.component.ts:35",{"_index":1511,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":476,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":1508,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":1534,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":486,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":1150,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":1155,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":489,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":1525,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:57",{"_index":1172,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":492,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":494,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{}}}],["editor.component.ts:66",{"_index":1132,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:69",{"_index":1506,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:73",{"_index":1138,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:76",{"_index":475,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":1136,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:81",{"_index":1528,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:83",{"_index":491,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:87",{"_index":500,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:89",{"_index":1532,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":502,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:93",{"_index":1470,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:97",{"_index":1509,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:98",{"_index":1533,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editor.component.ts:99",{"_index":1507,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["editorenabled",{"_index":773,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["editors",{"_index":949,"title":{},"body":{"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{}}}],["el",{"_index":826,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["el.parents",{"_index":1879,"title":{},"body":{"components/TreeComponent.html":{}}}],["el.parents.includes(id",{"_index":1880,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.addhighlight",{"_index":1893,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.click(new",{"_index":1885,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.nativeelement.removeattribute(\"selected",{"_index":893,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["el?.nativeelement.scrollintoview",{"_index":1894,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.nativeelement.scrollintoview({behavior",{"_index":1887,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.nativeelement.setattribute(\"selected",{"_index":890,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["element",{"_index":128,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["element'id",{"_index":765,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["elementref",{"_index":827,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{}}}],["elements",{"_index":1485,"title":{},"body":{"components/SpacingEditorComponent.html":{},"index.html":{}}}],["elf",{"_index":2189,"title":{},"body":{"index.html":{}}}],["embedded",{"_index":1354,"title":{},"body":{"components/ModalComponent.html":{}}}],["enabled",{"_index":809,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ZoneComponent.html":{}}}],["enablerawhtml",{"_index":629,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["enablesubcontainers",{"_index":628,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["encapsulate",{"_index":2268,"title":{},"body":{"index.html":{}}}],["encapsulation",{"_index":2261,"title":{},"body":{"index.html":{}}}],["end",{"_index":1145,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["ensure",{"_index":243,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["entities",{"_index":207,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"dependencies.html":{}}}],["equal",{"_index":2165,"title":{},"body":{"index.html":{}}}],["equals",{"_index":393,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"index.html":{}}}],["erase",{"_index":546,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["etc",{"_index":2215,"title":{},"body":{"index.html":{}}}],["eur",{"_index":2107,"title":{},"body":{"index.html":{}}}],["euro",{"_index":2179,"title":{},"body":{"index.html":{}}}],["evaluated",{"_index":505,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["event",{"_index":108,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"license.html":{}}}],["event.data",{"_index":1323,"title":{},"body":{"components/ItemComponent.html":{}}}],["event.data.container",{"_index":1324,"title":{},"body":{"components/ItemComponent.html":{}}}],["event.data.index",{"_index":1325,"title":{},"body":{"components/ItemComponent.html":{}}}],["event.index",{"_index":1326,"title":{},"body":{"components/ItemComponent.html":{}}}],["event.stoppropagation",{"_index":876,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["event.type",{"_index":117,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["eventemitter",{"_index":65,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ZoneComponent.html":{}}}],["events",{"_index":779,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/ToolbarComponent.html":{}}}],["exactly",{"_index":2302,"title":{},"body":{"index.html":{}}}],["example",{"_index":2140,"title":{},"body":{"index.html":{}}}],["exist",{"_index":794,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["existing",{"_index":643,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["existingpalette",{"_index":640,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["exists",{"_index":244,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["experience",{"_index":2200,"title":{},"body":{"index.html":{}}}],["export",{"_index":98,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["exports",{"_index":585,"title":{},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{}}}],["express",{"_index":2346,"title":{},"body":{"license.html":{}}}],["expression",{"_index":446,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"index.html":{}}}],["extends",{"_index":215,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["extra",{"_index":1518,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["extract",{"_index":948,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["eye",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eye_slash",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fact",{"_index":2166,"title":{},"body":{"index.html":{}}}],["false",{"_index":77,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{}}}],["false).sort((a",{"_index":1881,"title":{},"body":{"components/TreeComponent.html":{}}}],["family",{"_index":1246,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["features",{"_index":2181,"title":{},"body":{"index.html":{}}}],["feed",{"_index":1503,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["field",{"_index":391,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"index.html":{}}}],["fields",{"_index":456,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2325,"title":{},"body":{"license.html":{}}}],["fill",{"_index":1237,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["fill='none",{"_index":1935,"title":{},"body":{"components/TreeComponent.html":{}}}],["filter",{"_index":95,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["filter((parent",{"_index":1862,"title":{},"body":{"components/TreeComponent.html":{}}}],["filter(config",{"_index":247,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["find(item",{"_index":284,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["find(p",{"_index":690,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["findparent",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["findparent(id",{"_index":282,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["fine",{"_index":2110,"title":{},"body":{"index.html":{}}}],["first",{"_index":1022,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["fitness",{"_index":2351,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1355,"title":{},"body":{"components/ModalComponent.html":{}}}],["flex",{"_index":140,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["flexbox",{"_index":2242,"title":{},"body":{"index.html":{}}}],["flexeditorcomponent",{"_index":139,"title":{"components/FlexEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flexoption",{"_index":1135,"title":{"interfaces/FlexOption.html":{}},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"coverage.html":{}}}],["focus",{"_index":103,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["following",{"_index":2075,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":1245,"title":{},"body":{"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{}}}],["fontsize",{"_index":1644,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["fontsize(value",{"_index":1684,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["foo",{"_index":2239,"title":{},"body":{"index.html":{}}}],["for(const",{"_index":1581,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["for(let",{"_index":1545,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["force",{"_index":1833,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["forchild",{"_index":1710,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["forchild(icons",{"_index":1711,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["foreach((parent",{"_index":1865,"title":{},"body":{"components/TreeComponent.html":{}}}],["form",{"_index":2235,"title":{},"body":{"index.html":{}}}],["forms",{"_index":2122,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":1079,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["forroot",{"_index":1714,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["forroot(config",{"_index":1715,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["found",{"_index":1787,"title":{},"body":{"components/ToastComponent.html":{}}}],["framework",{"_index":2266,"title":{},"body":{"index.html":{}}}],["free",{"_index":2319,"title":{},"body":{"license.html":{}}}],["freely",{"_index":671,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["fromevent",{"_index":92,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["fromevent(this.inputelement",{"_index":102,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["function",{"_index":63,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"interfaces/ToastAction.html":{},"coverage.html":{}}}],["functional",{"_index":2174,"title":{},"body":{"index.html":{}}}],["functions",{"_index":2046,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2338,"title":{},"body":{"license.html":{}}}],["gap",{"_index":1216,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["generate",{"_index":1041,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["generateautopalette",{"_index":659,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["generated",{"_index":2227,"title":{},"body":{"index.html":{}}}],["generateexistingpalette",{"_index":1384,"title":{},"body":{"components/PaletteComponent.html":{}}}],["generateexistingpalette(configs",{"_index":682,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["generateid",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generateid(type",{"_index":299,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["generates",{"_index":2295,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":1611,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["get_class",{"_index":861,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["getactivate",{"_index":499,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["getalignment",{"_index":1171,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["getall",{"_index":1609,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["getallconfig",{"_index":238,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["getallentities",{"_index":204,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["getconfig",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfig(id",{"_index":256,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["getcontainer",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcontainer(id",{"_index":263,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["getdirection",{"_index":1170,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["getelement",{"_index":1662,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["getentity",{"_index":199,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["gethoveredid",{"_index":918,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["getisarray",{"_index":1979,"title":{},"body":{"components/ZoneComponent.html":{}}}],["getsvgelement",{"_index":1697,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["getsvgelement(name",{"_index":1629,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["getting",{"_index":2048,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["given",{"_index":276,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["giving",{"_index":2199,"title":{},"body":{"index.html":{}}}],["globally",{"_index":2264,"title":{},"body":{"index.html":{}}}],["grab",{"_index":1421,"title":{},"body":{"components/PaletteComponent.html":{}}}],["granted",{"_index":2318,"title":{},"body":{"license.html":{}}}],["grey",{"_index":1417,"title":{},"body":{"components/PaletteComponent.html":{}}}],["grid",{"_index":1198,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["grip",{"_index":1425,"title":{},"body":{"components/PaletteComponent.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":29,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["handlecancel",{"_index":364,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["handlecancel(index",{"_index":1095,"title":{},"body":{"injectables/DragDropService.html":{}}}],["handledrop",{"_index":341,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["handledrop(containerid",{"_index":1097,"title":{},"body":{"injectables/DragDropService.html":{}}}],["having",{"_index":2220,"title":{},"body":{"index.html":{}}}],["heart",{"_index":2183,"title":{},"body":{"index.html":{}}}],["height",{"_index":34,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["height(value",{"_index":1682,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["height='16",{"_index":1931,"title":{},"body":{"components/TreeComponent.html":{}}}],["hello",{"_index":2095,"title":{},"body":{"index.html":{}}}],["hence",{"_index":2157,"title":{},"body":{"index.html":{}}}],["here",{"_index":1824,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hereby",{"_index":2317,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1667,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["hide",{"_index":112,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ItemComponent.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{}}}],["hidetoast",{"_index":338,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["hiding",{"_index":1061,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["hierachical",{"_index":2152,"title":{},"body":{"index.html":{}}}],["hierarchical",{"_index":2205,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":279,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"index.html":{}}}],["highlight",{"_index":815,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["history",{"_index":210,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"dependencies.html":{},"index.html":{}}}],["historystate",{"_index":221,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["holders",{"_index":2356,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":1160,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{}}}],["host",{"_index":1639,"title":{},"body":{"components/SvgIconComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["hostbinding",{"_index":862,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{}}}],["hostbinding('class",{"_index":870,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{}}}],["hostbindings",{"_index":821,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{}}}],["hostlistener",{"_index":863,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlistener('click",{"_index":848,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlistener('mouseenter",{"_index":853,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlistener('mouseleave",{"_index":851,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlistener('mouseover",{"_index":855,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlisteners",{"_index":822,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hover",{"_index":1213,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["hover(id",{"_index":1850,"title":{},"body":{"components/TreeComponent.html":{}}}],["hoveredid",{"_index":783,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/TreeComponent.html":{}}}],["hoveredid(id",{"_index":781,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["hsl(80",{"_index":1210,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["html",{"_index":127,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["htmleditorcomponent",{"_index":141,"title":{"components/HtmlEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["htmlelement",{"_index":860,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["htmlinputelement",{"_index":61,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["i18n",{"_index":2306,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1062,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{}}}],["icon'},{'name",{"_index":153,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["icon.component",{"_index":1718,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["icon.component.ts",{"_index":1638,"title":{},"body":{"components/SvgIconComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["icon.component.ts:29",{"_index":1651,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:42",{"_index":1652,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:46",{"_index":1653,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:50",{"_index":1650,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:55",{"_index":1649,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:60",{"_index":1648,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:64",{"_index":1655,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:65",{"_index":1647,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:76",{"_index":1663,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:80",{"_index":1654,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.content",{"_index":1622,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["icon.init",{"_index":1613,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["icon.module",{"_index":1087,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["icon.module.ts",{"_index":1709,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["icon.module.ts:12",{"_index":1717,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["icon.module.ts:24",{"_index":1712,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["icon/registry.ts",{"_index":1590,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"coverage.html":{}}}],["icon/registry.ts:14",{"_index":1705,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:15",{"_index":1699,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:29",{"_index":1701,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:33",{"_index":1700,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:55",{"_index":1703,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:63",{"_index":1702,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:7",{"_index":1592,"title":{},"body":{"classes/SvgIcon.html":{}}}],["icon/registry.ts:76",{"_index":1704,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:9",{"_index":1593,"title":{},"body":{"classes/SvgIcon.html":{}}}],["icon/svg",{"_index":1086,"title":{},"body":{"modules/ConfiguratorModule.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["icon/types.ts",{"_index":1432,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":625,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TemplateNameDirective.html":{}}}],["icons",{"_index":1083,"title":{},"body":{"modules/ConfiguratorModule.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":2020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":190,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["identifier",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":2207,"title":{},"body":{"index.html":{}}}],["idx",{"_index":300,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["if(!array.isarray(value",{"_index":291,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["if(!condition",{"_index":406,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["if(!condition.$regexp",{"_index":439,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["if(!params",{"_index":572,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["if(!this._getconfig(v.id",{"_index":293,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["if(!this.condition",{"_index":1312,"title":{},"body":{"components/ItemComponent.html":{}}}],["if(!this.options.showexistingpalette",{"_index":683,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["if(!this.options.showstandardpalette",{"_index":661,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["if(action.hidetoast",{"_index":1790,"title":{},"body":{"components/ToastComponent.html":{}}}],["if(c",{"_index":1548,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["if(changes.data",{"_index":1295,"title":{},"body":{"components/ItemComponent.html":{}}}],["if(component",{"_index":374,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["if(condition.data",{"_index":528,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(condition.field",{"_index":527,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(condition.or",{"_index":428,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["if(condition.type",{"_index":417,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["if(configurator",{"_index":704,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["if(context.parentid",{"_index":1042,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["if(context.zone",{"_index":1045,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["if(currentval",{"_index":1576,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["if(data",{"_index":535,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(i",{"_index":1194,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["if(match",{"_index":1573,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["if(message",{"_index":1780,"title":{},"body":{"components/ToastComponent.html":{}}}],["if(notify",{"_index":515,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(open",{"_index":1563,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["if(this.allsuggests",{"_index":121,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["if(this.config.classes?.includes('flex",{"_index":1330,"title":{},"body":{"components/ItemComponent.html":{}}}],["if(this.config.id",{"_index":1539,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["if(this.context.config.condition",{"_index":510,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(this.details",{"_index":1551,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["if(this.disableif",{"_index":871,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["if(this.html",{"_index":1836,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["if(this.modal?.close",{"_index":714,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["if(this.show",{"_index":1350,"title":{},"body":{"components/ModalComponent.html":{}}}],["if(this.suggestgenerator",{"_index":118,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["if(tokens[tokens.length",{"_index":306,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["if(type",{"_index":1569,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["if(type.startswith('border",{"_index":1584,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["if(typeof",{"_index":116,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ItemComponent.html":{}}}],["if(value",{"_index":543,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["image",{"_index":2149,"title":{},"body":{"index.html":{}}}],["img",{"_index":1665,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["immediately",{"_index":2198,"title":{},"body":{"index.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["implied",{"_index":2347,"title":{},"body":{"license.html":{}}}],["import",{"_index":87,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["important",{"_index":1250,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["imports",{"_index":590,"title":{},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/UtilsModule.html":{},"index.html":{}}}],["include",{"_index":2134,"title":{},"body":{"index.html":{}}}],["included",{"_index":2340,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2191,"title":{},"body":{"index.html":{}}}],["including",{"_index":2127,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index=0",{"_index":1546,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["indexable",{"_index":191,"title":{},"body":{"interfaces/ComponentConfig.html":{}}}],["infinity",{"_index":230,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"miscellaneous/typealiases.html":{}}}],["init",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["init(initialvalue",{"_index":222,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["initialize",{"_index":650,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["initialized",{"_index":2144,"title":{},"body":{"index.html":{}}}],["initialvalue",{"_index":225,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["inject",{"_index":1595,"title":{},"body":{"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{}}}],["inject(svg_icons",{"_index":1723,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["inject(svg_icons_config",{"_index":1602,"title":{},"body":{"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{}}}],["inject(svg_missing_icon_fallback",{"_index":1724,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["injectable",{"_index":194,"title":{"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigurableService.html":{},"injectables/DragDropService.html":{},"injectables/SvgIconRegistry.html":{},"injectables/ToastService.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":399,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["injectables",{"_index":591,"title":{},"body":{"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigurableService.html":{},"injectables/DragDropService.html":{},"injectables/SvgIconRegistry.html":{},"injectables/ToastService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1438,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{}}}],["injectiontoken('svg_icons",{"_index":1450,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('svg_icons_config",{"_index":1448,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('svg_missing_icon_fallback",{"_index":1452,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1596,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["injector.get(document",{"_index":1604,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["inline",{"_index":1415,"title":{},"body":{"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{}}}],["inner",{"_index":2243,"title":{},"body":{"index.html":{}}}],["input",{"_index":88,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["input(\"uib",{"_index":865,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["input('uib",{"_index":1294,"title":{},"body":{"components/ItemComponent.html":{},"directives/TemplateNameDirective.html":{},"directives/TooltipDirective.html":{}}}],["input:checked",{"_index":1923,"title":{},"body":{"components/TreeComponent.html":{}}}],["input[type=\"checkbox",{"_index":1925,"title":{},"body":{"components/TreeComponent.html":{}}}],["input[type='radio",{"_index":1226,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["input[type='radio']:checked",{"_index":1238,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["inputelement",{"_index":53,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["inputs",{"_index":51,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["insert",{"_index":1410,"title":{},"body":{"components/PaletteComponent.html":{},"index.html":{}}}],["insertion",{"_index":2233,"title":{},"body":{"index.html":{}}}],["insertnew",{"_index":373,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["insertnew(container",{"_index":1099,"title":{},"body":{"injectables/DragDropService.html":{}}}],["installs",{"_index":2072,"title":{},"body":{"index.html":{}}}],["instance",{"_index":552,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["instead",{"_index":2267,"title":{},"body":{"index.html":{}}}],["integrated",{"_index":2270,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":2067,"title":{},"body":{"index.html":{}}}],["interface",{"_index":186,"title":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"interfaces/FlexOption.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["interfaces",{"_index":188,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"interfaces/FlexOption.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"overview.html":{}}}],["internationalization",{"_index":2305,"title":{},"body":{"index.html":{}}}],["introduce",{"_index":2089,"title":{},"body":{"index.html":{}}}],["introduction",{"_index":2102,"title":{},"body":{"index.html":{}}}],["intuitively",{"_index":2222,"title":{},"body":{"index.html":{}}}],["ipsum",{"_index":2241,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":1961,"title":{},"body":{"components/ZoneComponent.html":{}}}],["ischecked",{"_index":1466,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["ischecked(type",{"_index":1472,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["isconfigurable",{"_index":807,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["iscontainer",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["iscontainer(id",{"_index":267,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["iscontainerconfig",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["iscontainerconfig(conf",{"_index":270,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["ishorizontal",{"_index":1256,"title":{},"body":{"components/ItemComponent.html":{}}}],["issues",{"_index":1353,"title":{},"body":{"components/ModalComponent.html":{}}}],["isused",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isused(id",{"_index":280,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["it's",{"_index":879,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["item",{"_index":38,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["item.component",{"_index":1118,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["item.component.html",{"_index":1254,"title":{},"body":{"components/ItemComponent.html":{}}}],["item.display",{"_index":1411,"title":{},"body":{"components/PaletteComponent.html":{}}}],["item.items.includes(id",{"_index":286,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["item.type",{"_index":1412,"title":{},"body":{"components/PaletteComponent.html":{}}}],["item.uib",{"_index":1428,"title":{},"body":{"components/PaletteComponent.html":{}}}],["item[0",{"_index":381,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["item[field]?.tostring",{"_index":534,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["item]'},{'name",{"_index":143,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["itemclicked",{"_index":1960,"title":{},"body":{"components/ZoneComponent.html":{}}}],["itemcomponent",{"_index":142,"title":{"components/ItemComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["items",{"_index":217,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["itemtpl",{"_index":46,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["itself",{"_index":2190,"title":{},"body":{"index.html":{}}}],["json",{"_index":2293,"title":{},"body":{"index.html":{}}}],["json.parse(json.stringify(config",{"_index":252,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["justify",{"_index":1124,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["key",{"_index":192,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{}}}],["key(name",{"_index":1668,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["key:'align_x_center",{"_index":1152,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_end",{"_index":1153,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_space_around",{"_index":1163,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_space_between",{"_index":1166,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_start",{"_index":1151,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_stretch",{"_index":1154,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["keyof",{"_index":1439,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["kind",{"_index":2345,"title":{},"body":{"license.html":{}}}],["l",{"_index":1523,"title":{},"body":{"components/SpacingEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":1218,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{}}}],["label:before",{"_index":1927,"title":{},"body":{"components/TreeComponent.html":{}}}],["label:hover",{"_index":1241,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["large",{"_index":1521,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["lastkey",{"_index":1642,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["layout",{"_index":1053,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["layouts",{"_index":2213,"title":{},"body":{"index.html":{}}}],["left",{"_index":1505,"title":{},"body":{"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":126,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["lets",{"_index":2059,"title":{},"body":{"index.html":{}}}],["level",{"_index":1876,"title":{},"body":{"components/TreeComponent.html":{}}}],["lg",{"_index":1444,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["li",{"_index":1897,"title":{},"body":{"components/TreeComponent.html":{}}}],["li::after",{"_index":1905,"title":{},"body":{"components/TreeComponent.html":{}}}],["li::before",{"_index":1900,"title":{},"body":{"components/TreeComponent.html":{}}}],["li:first",{"_index":1910,"title":{},"body":{"components/TreeComponent.html":{}}}],["li:last",{"_index":1906,"title":{},"body":{"components/TreeComponent.html":{}}}],["li:not(.section",{"_index":1899,"title":{},"body":{"components/TreeComponent.html":{}}}],["liability",{"_index":2360,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2357,"title":{},"body":{"license.html":{}}}],["library",{"_index":1460,"title":{},"body":{"components/SpacingEditorComponent.html":{},"index.html":{}}}],["license",{"_index":2311,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":1743,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"miscellaneous/typealiases.html":{}}}],["limitation",{"_index":2328,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2348,"title":{},"body":{"license.html":{}}}],["line",{"_index":1197,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["linear",{"_index":1921,"title":{},"body":{"components/TreeComponent.html":{}}}],["linecap='round",{"_index":1938,"title":{},"body":{"components/TreeComponent.html":{}}}],["linejoin='round",{"_index":1939,"title":{},"body":{"components/TreeComponent.html":{}}}],["lines",{"_index":2274,"title":{},"body":{"index.html":{}}}],["list",{"_index":28,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["listed",{"_index":2208,"title":{},"body":{"index.html":{}}}],["lists",{"_index":2257,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1437,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{}}}],["loaded",{"_index":2263,"title":{},"body":{"index.html":{}}}],["localize",{"_index":337,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{}}}],["location",{"_index":2218,"title":{},"body":{"index.html":{}}}],["look",{"_index":2104,"title":{},"body":{"index.html":{}}}],["lorem",{"_index":2240,"title":{},"body":{"index.html":{}}}],["ltr",{"_index":927,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["m",{"_index":1474,"title":{},"body":{"components/SpacingEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["magnitude",{"_index":1476,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["magnitudes",{"_index":1464,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["main",{"_index":397,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["make",{"_index":2290,"title":{},"body":{"index.html":{}}}],["managed",{"_index":2186,"title":{},"body":{"index.html":{}}}],["management",{"_index":2182,"title":{},"body":{"index.html":{}}}],["map",{"_index":211,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"components/TreeComponent.html":{}}}],["map((config",{"_index":251,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["map(c",{"_index":693,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["map(config",{"_index":998,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["margin",{"_index":1422,"title":{},"body":{"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["marginmagnitudes",{"_index":1465,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["marked",{"_index":2309,"title":{},"body":{"index.html":{}}}],["match",{"_index":796,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/SpacingEditorComponent.html":{}}}],["match.magnitude",{"_index":1585,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["match[prop",{"_index":1575,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["matching",{"_index":173,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":33,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ToastComponent.html":{},"components/TreeComponent.html":{}}}],["maxage",{"_index":229,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["md",{"_index":1443,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["means",{"_index":2269,"title":{},"body":{"index.html":{}}}],["medium",{"_index":1520,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["meet",{"_index":1620,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["merchantability",{"_index":2350,"title":{},"body":{"license.html":{}}}],["merge",{"_index":93,"title":{},"body":{"components/AutocompleteComponent.html":{},"license.html":{}}}],["mergedconfig",{"_index":1643,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["message",{"_index":1745,"title":{},"body":{"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["message.message",{"_index":1791,"title":{},"body":{"components/ToastComponent.html":{}}}],["message.options",{"_index":1783,"title":{},"body":{"components/ToastComponent.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["method",{"_index":880,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/SpacingEditorComponent.html":{}}}],["methods",{"_index":48,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["miscellaneous",{"_index":2045,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missingiconfallback",{"_index":1434,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{}}}],["mit",{"_index":2312,"title":{},"body":{"license.html":{}}}],["modal",{"_index":641,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["modal'},{'name",{"_index":145,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["modal.component",{"_index":1952,"title":{},"body":{"modules/UtilsModule.html":{}}}],["modal.getorcreateinstance(this.el.nativeelement",{"_index":1351,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":144,"title":{"components/ModalComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":1314,"title":{},"body":{"components/ItemComponent.html":{}}}],["model",{"_index":1954,"title":{},"body":{"modules/UtilsModule.html":{}}}],["modify",{"_index":2115,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifying",{"_index":2196,"title":{},"body":{"index.html":{}}}],["modular",{"_index":2117,"title":{},"body":{"index.html":{}}}],["module",{"_index":574,"title":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{}},"body":{}}],["modules",{"_index":576,"title":{"modules.html":{}},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1713,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["monospace",{"_index":1247,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["more",{"_index":1458,"title":{},"body":{"components/SpacingEditorComponent.html":{},"index.html":{}}}],["mouseenter",{"_index":823,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseenterconfigurable",{"_index":902,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["mouseenterconfigurable(configurable",{"_index":786,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["mouseevent",{"_index":847,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseevent(\"click",{"_index":1886,"title":{},"body":{"components/TreeComponent.html":{}}}],["mouseleave",{"_index":816,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseleave(event",{"_index":850,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseleaveconfigurable",{"_index":903,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["mouseleaveconfigurable(configurable",{"_index":788,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["mousenter",{"_index":817,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mousenter(event",{"_index":852,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseover",{"_index":818,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseover(event",{"_index":854,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseoverconfigurable",{"_index":904,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["mouseoverconfigurable(configurable",{"_index":784,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["movebetween",{"_index":377,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["movebetween(container",{"_index":1101,"title":{},"body":{"injectables/DragDropService.html":{}}}],["moved",{"_index":2223,"title":{},"body":{"index.html":{}}}],["movewithin",{"_index":383,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["movewithin(container",{"_index":1103,"title":{},"body":{"injectables/DragDropService.html":{}}}],["moving",{"_index":2195,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1722,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["multiple",{"_index":1868,"title":{},"body":{"components/TreeComponent.html":{},"index.html":{}}}],["mutable",{"_index":978,"title":{},"body":{"components/ConfiguratorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mycomponent",{"_index":2155,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.directive",{"_index":981,"title":{},"body":{"components/ConfiguratorComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{}}}],["name.directive.ts",{"_index":1729,"title":{},"body":{"directives/TemplateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:10",{"_index":1731,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["name.directive.ts:12",{"_index":1735,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["name.directive.ts:7",{"_index":1734,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["name.directive.ts:8",{"_index":1732,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["name.directive.ts:9",{"_index":1733,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["nativeelement",{"_index":813,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["nearest",{"_index":1889,"title":{},"body":{"components/TreeComponent.html":{}}}],["necessary",{"_index":1982,"title":{},"body":{"components/ZoneComponent.html":{}}}],["need",{"_index":769,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"index.html":{}}}],["needed",{"_index":376,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"index.html":{}}}],["negate",{"_index":2259,"title":{},"body":{"index.html":{}}}],["nested",{"_index":1027,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["new",{"_index":84,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":357,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["newindex",{"_index":385,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ng",{"_index":2068,"title":{},"body":{"index.html":{}}}],["ngaftercontentinit",{"_index":932,"title":{},"body":{"components/ConfiguratorComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ZoneComponent.html":{}}}],["ngafterviewinit",{"_index":933,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ModalComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToastComponent.html":{}}}],["ngif",{"_index":2251,"title":{},"body":{"index.html":{}}}],["ngmodel",{"_index":1368,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["ngmodelchangedebounced",{"_index":1365,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["ngmodelchangedebounced]'},{'name",{"_index":166,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["ngmodelchangedebounceddirective",{"_index":165,"title":{"directives/NgModelChangeDebouncedDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngmodeldebouncetime",{"_index":1366,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["ngmodule",{"_index":588,"title":{},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"index.html":{}}}],["ngneat/elf",{"_index":197,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"dependencies.html":{}}}],["ngonchanges",{"_index":459,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["ngonchanges(changes",{"_index":1130,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["ngondestroy",{"_index":1258,"title":{},"body":{"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{}}}],["ngoninit",{"_index":49,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["ngx",{"_index":1082,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"components/ItemComponent.html":{},"dependencies.html":{},"index.html":{}}}],["non",{"_index":687,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["none",{"_index":1227,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["noninfringement",{"_index":2354,"title":{},"body":{"license.html":{}}}],["normal",{"_index":2103,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":706,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["notice",{"_index":2136,"title":{},"body":{"index.html":{},"license.html":{}}}],["notify",{"_index":487,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["now",{"_index":882,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["npm",{"_index":2074,"title":{},"body":{"index.html":{}}}],["null",{"_index":1695,"title":{},"body":{"components/SvgIconComponent.html":{},"components/ToastComponent.html":{}}}],["number",{"_index":330,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["o.bootstrap",{"_index":1191,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["o.code",{"_index":1547,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["object",{"_index":398,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["object.assign",{"_index":653,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["object.entries(this.state",{"_index":1583,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["object.keys(this.context.templates).foreach((type",{"_index":675,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["object.keys(this.data",{"_index":525,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["object.keys(this.state",{"_index":1553,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["objects",{"_index":2254,"title":{},"body":{"index.html":{}}}],["obligation",{"_index":2164,"title":{},"body":{"index.html":{}}}],["observable",{"_index":85,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["obtaining",{"_index":2322,"title":{},"body":{"license.html":{}}}],["of(c",{"_index":698,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["of(config",{"_index":712,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["of(this.allsuggests.filter(suggest",{"_index":122,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["offcanvas",{"_index":928,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["offcanvas.getorcreateinstance(this.offcanvasel.nativeelement",{"_index":1012,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["offcanvasbodyel",{"_index":929,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["offcanvasel",{"_index":930,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["og",{"_index":348,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ogcontainer",{"_index":378,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ogcontainer.items.splice(ogindex",{"_index":380,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ogindex",{"_index":379,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ok",{"_index":710,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["oldindex",{"_index":384,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["omit",{"_index":2160,"title":{},"body":{"index.html":{}}}],["ommited",{"_index":2276,"title":{},"body":{"index.html":{}}}],["onaction",{"_index":1758,"title":{},"body":{"components/ToastComponent.html":{}}}],["onaction(action",{"_index":1768,"title":{},"body":{"components/ToastComponent.html":{}}}],["onchanges",{"_index":450,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["ondestroy",{"_index":1253,"title":{},"body":{"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{}}}],["ondndcanceled",{"_index":1259,"title":{},"body":{"components/ItemComponent.html":{}}}],["ondndcanceled(item",{"_index":1275,"title":{},"body":{"components/ItemComponent.html":{}}}],["ondnddrop",{"_index":1260,"title":{},"body":{"components/ItemComponent.html":{}}}],["ondnddrop(event",{"_index":1277,"title":{},"body":{"components/ItemComponent.html":{}}}],["ondndend",{"_index":702,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["ondndstart",{"_index":1385,"title":{},"body":{"components/PaletteComponent.html":{}}}],["ondndstart(item",{"_index":700,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["one",{"_index":2077,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["onitemclicked",{"_index":1959,"title":{},"body":{"components/ZoneComponent.html":{}}}],["onitemclicked(event",{"_index":1970,"title":{},"body":{"components/ZoneComponent.html":{}}}],["onmodalclose",{"_index":1337,"title":{},"body":{"components/ModalComponent.html":{},"components/PaletteComponent.html":{}}}],["onmodalclose(success",{"_index":713,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["onselect",{"_index":50,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["onselect(value",{"_index":70,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["ontoastmessage",{"_index":1748,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["opacity",{"_index":1919,"title":{},"body":{"components/TreeComponent.html":{}}}],["open",{"_index":1543,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["openmodal",{"_index":1386,"title":{},"body":{"components/PaletteComponent.html":{}}}],["openmodal(id",{"_index":703,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["opens",{"_index":1496,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["operator",{"_index":411,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["operator}${condition.data",{"_index":419,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["option",{"_index":1187,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{}}}],["option.description",{"_index":1456,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["option.title",{"_index":1455,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorOptions.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":638,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["options.paletteoptions",{"_index":1028,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["order",{"_index":1861,"title":{},"body":{"components/TreeComponent.html":{},"index.html":{}}}],["orders",{"_index":1871,"title":{},"body":{"components/TreeComponent.html":{}}}],["otherwise",{"_index":2363,"title":{},"body":{"license.html":{}}}],["out",{"_index":106,"title":{},"body":{"components/AutocompleteComponent.html":{},"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":89,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ZoneComponent.html":{}}}],["outputs",{"_index":55,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ZoneComponent.html":{}}}],["overflow",{"_index":36,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{}}}],["overriden",{"_index":1823,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["overview",{"_index":2368,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1473,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["p'|'m'|'border'|string",{"_index":1567,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["p.startswith(\"border",{"_index":1562,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["p.type",{"_index":691,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["package",{"_index":2026,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1056,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["palette",{"_index":355,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["palette'},{'name",{"_index":147,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["palette.component.html",{"_index":634,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["palette.component.scss",{"_index":636,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["palette/palette.component",{"_index":982,"title":{},"body":{"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{}}}],["palettecomponent",{"_index":146,"title":{"components/PaletteComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paletteitem",{"_index":624,"title":{"interfaces/PaletteItem.html":{}},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["paletteoptions",{"_index":622,"title":{"interfaces/PaletteOptions.html":{}},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["palettes",{"_index":2226,"title":{},"body":{"index.html":{}}}],["panel",{"_index":1008,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["param",{"_index":1031,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/TreeComponent.html":{}}}],["parameter",{"_index":2141,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":565,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["parent",{"_index":956,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["parent.id",{"_index":1874,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent.items",{"_index":1863,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent.items.foreach((id",{"_index":1866,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent.items.length",{"_index":1864,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent_id",{"_index":1860,"title":{},"body":{"components/TreeComponent.html":{}}}],["parentid",{"_index":755,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{}}}],["parents",{"_index":1869,"title":{},"body":{"components/TreeComponent.html":{}}}],["parse",{"_index":1502,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["partial",{"_index":1716,"title":{},"body":{"modules/SvgIconsModule.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["particular",{"_index":2352,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2132,"title":{},"body":{"index.html":{}}}],["passed",{"_index":2156,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":2271,"title":{},"body":{"index.html":{}}}],["peer",{"_index":2073,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2316,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2336,"title":{},"body":{"license.html":{}}}],["person",{"_index":2321,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2337,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":114,"title":{"pipes/ConditionPipe.html":{}},"body":{"components/AutocompleteComponent.html":{},"pipes/ConditionPipe.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":560,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["pipetransform",{"_index":570,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["placement",{"_index":1125,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"directives/TooltipDirective.html":{}}}],["plain",{"_index":2135,"title":{},"body":{"index.html":{}}}],["point",{"_index":2066,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":41,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["popperjs/core",{"_index":2036,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":2342,"title":{},"body":{"license.html":{}}}],["position",{"_index":1219,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["positions",{"_index":2297,"title":{},"body":{"index.html":{}}}],["possible",{"_index":2158,"title":{},"body":{"index.html":{}}}],["powered",{"_index":2225,"title":{},"body":{"index.html":{}}}],["powers",{"_index":2192,"title":{},"body":{"index.html":{}}}],["presses",{"_index":709,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["prev",{"_index":1890,"title":{},"body":{"components/TreeComponent.html":{}}}],["prev?.removehighlight",{"_index":1892,"title":{},"body":{"components/TreeComponent.html":{}}}],["previous",{"_index":771,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{}}}],["previousconfigurableelement",{"_index":775,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["price",{"_index":2111,"title":{},"body":{"index.html":{}}}],["price\"note",{"_index":2150,"title":{},"body":{"index.html":{}}}],["primary",{"_index":1741,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"miscellaneous/typealiases.html":{}}}],["prior",{"_index":2232,"title":{},"body":{"index.html":{}}}],["private",{"_index":253,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"components/TreeComponent.html":{}}}],["product",{"_index":2138,"title":{},"body":{"index.html":{}}}],["product.description",{"_index":2106,"title":{},"body":{"index.html":{}}}],["product.name",{"_index":2105,"title":{},"body":{"index.html":{}}}],["product.price",{"_index":2108,"title":{},"body":{"index.html":{}}}],["products",{"_index":2148,"title":{},"body":{"index.html":{}}}],["project's",{"_index":2081,"title":{},"body":{"index.html":{}}}],["projects/.../configurator.component.ts",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../palette.component.ts",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../svg",{"_index":2047,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../toast.service.ts",{"_index":2375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../tooltip.directive.ts",{"_index":2377,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../types.helpers.ts",{"_index":2376,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../types.ts",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/conditions/condition.pipe.ts",{"_index":561,"title":{},"body":{"pipes/ConditionPipe.html":{},"coverage.html":{}}}],["projects/lib/src/conditions/condition.pipe.ts:10",{"_index":569,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["projects/lib/src/conditions/condition.pipe.ts:13",{"_index":566,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["projects/lib/src/conditions/conditions.module.ts",{"_index":583,"title":{},"body":{"modules/ConditionsModule.html":{}}}],["projects/lib/src/conditions/conditions.service.ts",{"_index":389,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"coverage.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:22",{"_index":606,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:26",{"_index":600,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:32",{"_index":607,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:37",{"_index":608,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:49",{"_index":602,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:54",{"_index":601,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:63",{"_index":605,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:75",{"_index":603,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/conditions/conditions.service.ts:80",{"_index":604,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts",{"_index":812,"title":{},"body":{"directives/ConfigurableDirective.html":{},"coverage.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:100",{"_index":858,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:104",{"_index":845,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:108",{"_index":849,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:18",{"_index":834,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:19",{"_index":838,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:20",{"_index":835,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:21",{"_index":836,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:22",{"_index":832,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:23",{"_index":833,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:24",{"_index":831,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:25",{"_index":837,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:27",{"_index":830,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:37",{"_index":856,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:42",{"_index":839,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:48",{"_index":844,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:54",{"_index":842,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:60",{"_index":843,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:66",{"_index":841,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:89",{"_index":857,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:93",{"_index":859,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.module.ts",{"_index":900,"title":{},"body":{"modules/ConfigurableModule.html":{}}}],["projects/lib/src/configurable/configurable.service.ts",{"_index":753,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"coverage.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:100",{"_index":910,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:21",{"_index":912,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:28",{"_index":914,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:31",{"_index":915,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:34",{"_index":917,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:37",{"_index":913,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:39",{"_index":921,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:42",{"_index":919,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:46",{"_index":908,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:52",{"_index":906,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:58",{"_index":907,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:62",{"_index":905,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:85",{"_index":909,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:92",{"_index":911,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:96",{"_index":916,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configuration/config.service.ts",{"_index":189,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"coverage.html":{}}}],["projects/lib/src/configuration/config.service.ts:106",{"_index":743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:110",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:115",{"_index":748,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:129",{"_index":745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:133",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:148",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:152",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:156",{"_index":747,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:160",{"_index":744,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:22",{"_index":193,"title":{},"body":{"interfaces/ComponentConfig.html":{}}}],["projects/lib/src/configuration/config.service.ts:34",{"_index":752,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:35",{"_index":751,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:37",{"_index":740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:46",{"_index":746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:53",{"_index":749,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:57",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:61",{"_index":750,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:72",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:76",{"_index":738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:87",{"_index":739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:95",{"_index":741,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:99",{"_index":742,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configurator/configurator.component.ts",{"_index":922,"title":{},"body":{"components/ConfiguratorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:101",{"_index":950,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:114",{"_index":947,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:120",{"_index":960,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:125",{"_index":958,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:137",{"_index":954,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:150",{"_index":946,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:42",{"_index":964,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:43",{"_index":968,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:45",{"_index":974,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:46",{"_index":970,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:48",{"_index":972,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:50",{"_index":943,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:51",{"_index":944,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:53",{"_index":969,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:55",{"_index":967,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:57",{"_index":961,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:58",{"_index":939,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:62",{"_index":966,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:63",{"_index":965,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:66",{"_index":952,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.models.ts",{"_index":1066,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/configurator.module.ts",{"_index":1078,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["projects/lib/src/configurator/editors/class",{"_index":174,"title":{},"body":{"components/ClassEditorComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/editors/condition",{"_index":449,"title":{},"body":{"components/ConditionEditorComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/editors/flex",{"_index":1119,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/editors/html",{"_index":1243,"title":{},"body":{"components/HtmlEditorComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/editors/spacing",{"_index":1453,"title":{},"body":{"components/SpacingEditorComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts",{"_index":610,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:108",{"_index":1394,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:127",{"_index":1399,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:131",{"_index":1398,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:135",{"_index":1401,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:150",{"_index":1400,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:158",{"_index":1402,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:41",{"_index":1391,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:42",{"_index":1390,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:43",{"_index":1392,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:45",{"_index":1407,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:46",{"_index":1406,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:48",{"_index":1389,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:51",{"_index":1405,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:52",{"_index":1404,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:53",{"_index":1403,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:56",{"_index":1397,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:65",{"_index":1396,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:73",{"_index":1393,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts",{"_index":1797,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts:31",{"_index":1806,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts:34",{"_index":1808,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts:35",{"_index":1809,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts:38",{"_index":1807,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts",{"_index":1842,"title":{},"body":{"components/TreeComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:11",{"_index":1847,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:13",{"_index":1856,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:15",{"_index":1846,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:17",{"_index":1855,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:19",{"_index":1852,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:45",{"_index":1849,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:49",{"_index":1854,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:55",{"_index":1851,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/dynamic",{"_index":321,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{}}}],["projects/lib/src/svg/svg",{"_index":2019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts",{"_index":9,"title":{},"body":{"components/AutocompleteComponent.html":{},"coverage.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:35",{"_index":62,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:36",{"_index":64,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:37",{"_index":60,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:38",{"_index":66,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:39",{"_index":83,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:40",{"_index":86,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:41",{"_index":78,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:43",{"_index":67,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:64",{"_index":71,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts",{"_index":1334,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["projects/lib/src/utils/modal.component.ts:29",{"_index":1348,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:30",{"_index":1340,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:31",{"_index":1339,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:32",{"_index":1341,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:34",{"_index":1349,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:36",{"_index":1343,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:43",{"_index":1344,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:47",{"_index":1342,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:51",{"_index":1345,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/model",{"_index":1362,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{},"coverage.html":{}}}],["projects/lib/src/utils/svg",{"_index":1431,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/utils/template",{"_index":1728,"title":{},"body":{"directives/TemplateNameDirective.html":{},"coverage.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts",{"_index":1751,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:19",{"_index":1771,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:21",{"_index":1765,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:23",{"_index":1773,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:24",{"_index":1772,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:26",{"_index":1760,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:31",{"_index":1766,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:48",{"_index":1767,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:52",{"_index":1769,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.service.ts",{"_index":1737,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/lib/src/utils/toast/toast.service.ts:26",{"_index":1796,"title":{},"body":{"injectables/ToastService.html":{}}}],["projects/lib/src/utils/toast/toast.service.ts:28",{"_index":1795,"title":{},"body":{"injectables/ToastService.html":{}}}],["projects/lib/src/utils/toast/toast.service.ts:37",{"_index":1793,"title":{},"body":{"injectables/ToastService.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts",{"_index":1812,"title":{},"body":{"directives/TooltipDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:10",{"_index":1828,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:19",{"_index":1818,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:29",{"_index":1827,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:37",{"_index":1825,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:39",{"_index":1814,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:41",{"_index":1831,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:43",{"_index":1829,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:55",{"_index":1830,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/types.helpers.ts",{"_index":2378,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/lib/src/utils/utils.module.ts",{"_index":1950,"title":{},"body":{"modules/UtilsModule.html":{}}}],["prop",{"_index":1475,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["prop.title",{"_index":1457,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["propagate",{"_index":1494,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["properly",{"_index":2234,"title":{},"body":{"index.html":{}}}],["properties",{"_index":44,"title":{"properties.html":{}},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"properties.html":{}}}],["property",{"_index":1480,"title":{},"body":{"components/SpacingEditorComponent.html":{},"index.html":{}}}],["props",{"_index":1552,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["props.find(p",{"_index":1561,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["props.includes('m",{"_index":1559,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["props.includes('p",{"_index":1560,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["props.length",{"_index":1557,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["provide",{"_index":1720,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["provided",{"_index":2343,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":218,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["providers",{"_index":1719,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["public",{"_index":235,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"directives/TemplateNameDirective.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["publish",{"_index":2330,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2353,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":962,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/ZoneComponent.html":{}}}],["radio",{"_index":1202,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["radius",{"_index":1231,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["range",{"_index":2245,"title":{},"body":{"index.html":{}}}],["raw",{"_index":669,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["rawhtml",{"_index":672,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["rawhtmlplaceholder",{"_index":630,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["reactive",{"_index":2187,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":213,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"directives/TemplateNameDirective.html":{}}}],["rebuild",{"_index":2116,"title":{},"body":{"index.html":{}}}],["reconfigured",{"_index":2063,"title":{},"body":{"index.html":{}}}],["record",{"_index":402,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/ZoneComponent.html":{}}}],["red",{"_index":1914,"title":{},"body":{"components/TreeComponent.html":{}}}],["redo",{"_index":318,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"miscellaneous/variables.html":{}}}],["refer",{"_index":2171,"title":{},"body":{"index.html":{}}}],["reference",{"_index":2058,"title":{},"body":{"index.html":{}}}],["references",{"_index":2146,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":394,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["regexp(condition.value",{"_index":442,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["register",{"_index":1069,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"injectables/SvgIconRegistry.html":{}}}],["register(icons",{"_index":1624,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["registry",{"_index":1646,"title":{},"body":{"components/SvgIconComponent.html":{},"modules/SvgIconsModule.html":{}}}],["regular",{"_index":445,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"index.html":{}}}],["relative",{"_index":1220,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["remove",{"_index":934,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["remove(context",{"_index":953,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["removeable",{"_index":626,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["removeconfig",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removeconfig(id",{"_index":297,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["removed",{"_index":369,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"directives/TooltipDirective.html":{}}}],["removeedited",{"_index":756,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{}}}],["removehighlight",{"_index":819,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["removeitem",{"_index":1387,"title":{},"body":{"components/PaletteComponent.html":{}}}],["removeitem(item",{"_index":718,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["removes",{"_index":955,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["removeselected",{"_index":757,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{}}}],["removevalue",{"_index":460,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["removevalue(i",{"_index":477,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["removing",{"_index":2224,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":828,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/SpacingEditorComponent.html":{}}}],["renderer2",{"_index":829,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/SpacingEditorComponent.html":{}}}],["replace",{"_index":2125,"title":{},"body":{"index.html":{}}}],["represents",{"_index":2217,"title":{},"body":{"index.html":{}}}],["requires",{"_index":2273,"title":{},"body":{"index.html":{}}}],["reset",{"_index":582,"title":{},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["reshaped",{"_index":2062,"title":{},"body":{"index.html":{}}}],["resolveoptions",{"_index":935,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["resolveoptions(zone",{"_index":957,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["restriction",{"_index":2327,"title":{},"body":{"license.html":{}}}],["result",{"_index":2282,"title":{},"body":{"index.html":{}}}],["results",{"_index":172,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":770,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"index.html":{}}}],["return",{"_index":119,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["returns",{"_index":68,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{}}}],["rgb(0",{"_index":26,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["rgb(0,0,0,0.1",{"_index":1420,"title":{},"body":{"components/PaletteComponent.html":{}}}],["rgba(0",{"_index":1754,"title":{},"body":{"components/ToastComponent.html":{}}}],["right",{"_index":1423,"title":{},"body":{"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":2329,"title":{},"body":{"license.html":{}}}],["role",{"_index":1664,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["root",{"_index":219,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["rotate",{"_index":1204,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["rotate(180deg",{"_index":1063,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["rotate(90deg",{"_index":1946,"title":{},"body":{"components/TreeComponent.html":{}}}],["rotate(var",{"_index":1221,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["row",{"_index":1161,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["rows",{"_index":2214,"title":{},"body":{"index.html":{}}}],["running",{"_index":2299,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":94,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ZoneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":97,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"directives/NgModelChangeDebouncedDirective.html":{}}}],["s",{"_index":1512,"title":{},"body":{"components/SpacingEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["s.unsubscribe",{"_index":1307,"title":{},"body":{"components/ItemComponent.html":{}}}],["safely",{"_index":884,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["same",{"_index":799,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"index.html":{}}}],["sanitize",{"_index":1815,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["schematic",{"_index":2291,"title":{},"body":{"index.html":{}}}],["scratch",{"_index":545,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["script",{"_index":2300,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":1014,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["second",{"_index":2079,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":1742,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"miscellaneous/typealiases.html":{}}}],["section",{"_index":1895,"title":{},"body":{"components/TreeComponent.html":{}}}],["see",{"_index":2172,"title":{},"body":{"index.html":{}}}],["select",{"_index":56,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["select(id",{"_index":1853,"title":{},"body":{"components/TreeComponent.html":{}}}],["selectallentities",{"_index":203,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["selectdata",{"_index":407,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["selectdata(condition",{"_index":401,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["selected",{"_index":113,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectentity",{"_index":202,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["selectentity(id",{"_index":246,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["selectfield",{"_index":461,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["selectfield(field",{"_index":479,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["selects",{"_index":2237,"title":{},"body":{"index.html":{}}}],["selectvalue",{"_index":462,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["selectvalue(value",{"_index":481,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["self",{"_index":1032,"title":{},"body":{"components/ConfiguratorComponent.html":{},"modules/SvgIconsModule.html":{}}}],["sell",{"_index":2334,"title":{},"body":{"license.html":{}}}],["send",{"_index":877,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["server",{"_index":2203,"title":{},"body":{"index.html":{}}}],["service",{"_index":776,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/SpacingEditorComponent.html":{},"modules/SvgIconsModule.html":{},"index.html":{}}}],["set",{"_index":541,"title":{},"body":{"components/ConditionEditorComponent.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["set(config",{"_index":232,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["setactivate(value",{"_index":501,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["setcolor(color",{"_index":1661,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setfontsize(value",{"_index":1660,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setheight(value",{"_index":1659,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["sethoveredid(id",{"_index":920,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["setkey(name",{"_index":1656,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["sets",{"_index":1820,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["setsize(value",{"_index":1657,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setwidth(value",{"_index":1658,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["several",{"_index":2176,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":22,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ToastComponent.html":{},"components/TreeComponent.html":{}}}],["shall",{"_index":2339,"title":{},"body":{"license.html":{}}}],["show",{"_index":1338,"title":{},"body":{"components/ModalComponent.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["show(message",{"_index":1794,"title":{},"body":{"injectables/ToastService.html":{}}}],["showconditionaldisplay",{"_index":987,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showcssclasses",{"_index":985,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showduplicate",{"_index":989,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showexistingpalette",{"_index":633,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showflexeditor",{"_index":983,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showhtmleditor",{"_index":984,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showremove",{"_index":988,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showspacingeditor",{"_index":986,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showstandardpalette",{"_index":632,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showtree",{"_index":936,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["showtree(showtree",{"_index":959,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["side",{"_index":1007,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["simple",{"_index":1801,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["simplechanges",{"_index":1131,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["simplicity",{"_index":2121,"title":{},"body":{"index.html":{}}}],["simply",{"_index":2238,"title":{},"body":{"index.html":{}}}],["sinequa",{"_index":2315,"title":{},"body":{"license.html":{}}}],["sinequa/ngx",{"_index":2069,"title":{},"body":{"index.html":{}}}],["size",{"_index":1248,"title":{},"body":{"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{}}}],["size(value",{"_index":1676,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["sizes",{"_index":1435,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["slower",{"_index":2281,"title":{},"body":{"index.html":{}}}],["sm",{"_index":1442,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["small",{"_index":1413,"title":{},"body":{"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["smooth",{"_index":1888,"title":{},"body":{"components/TreeComponent.html":{}}}],["software",{"_index":2323,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1239,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["sometimes",{"_index":2249,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"modules/ConditionsModule.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["source.key",{"_index":557,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["space",{"_index":1164,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["spacing",{"_index":150,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["spacingeditorcomponent",{"_index":148,"title":{"components/SpacingEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["span",{"_index":1414,"title":{},"body":{"components/PaletteComponent.html":{}}}],["special",{"_index":531,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{}}}],["specific",{"_index":1024,"title":{},"body":{"components/ConfiguratorComponent.html":{},"directives/TooltipDirective.html":{}}}],["standard",{"_index":656,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["standardpalette",{"_index":639,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["start",{"_index":1140,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["started",{"_index":2049,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starts",{"_index":2145,"title":{},"body":{"index.html":{}}}],["state",{"_index":209,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/SpacingEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["statehistory",{"_index":208,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["statehistory(this.store",{"_index":228,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["statements",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":82,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ModalComponent.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["step",{"_index":2173,"title":{},"body":{"index.html":{}}}],["steps",{"_index":2124,"title":{},"body":{"index.html":{}}}],["still",{"_index":2272,"title":{},"body":{"index.html":{}}}],["stopediting",{"_index":802,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["store",{"_index":196,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"index.html":{}}}],["store'changes",{"_index":778,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["storing",{"_index":1067,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{}}}],["stretch",{"_index":1147,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["string",{"_index":58,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{}}}],["strings",{"_index":2308,"title":{},"body":{"index.html":{}}}],["string|undefined",{"_index":1537,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["stroke",{"_index":1937,"title":{},"body":{"components/TreeComponent.html":{}}}],["stroke='rgba%280,0,0,.5%29",{"_index":1936,"title":{},"body":{"components/TreeComponent.html":{}}}],["structure",{"_index":2151,"title":{},"body":{"index.html":{}}}],["style",{"_index":1137,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["styled",{"_index":2100,"title":{},"body":{"index.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["stylesheet",{"_index":2082,"title":{},"body":{"index.html":{}}}],["stylesheets",{"_index":2080,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":635,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/TreeComponent.html":{}}}],["styleurls:['./configurator.component.scss",{"_index":990,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["styling",{"_index":2088,"title":{},"body":{"index.html":{}}}],["sub",{"_index":666,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToastComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["subject",{"_index":615,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"license.html":{}}}],["sublicense",{"_index":2332,"title":{},"body":{"license.html":{}}}],["subs",{"_index":1257,"title":{},"body":{"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{}}}],["subscribe",{"_index":777,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{}}}],["subscribe((config",{"_index":361,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["subscribe((value",{"_index":1381,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["subscribe(configs",{"_index":647,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["subscription",{"_index":1292,"title":{},"body":{"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ToastComponent.html":{},"components/ZoneComponent.html":{}}}],["substantial",{"_index":2341,"title":{},"body":{"license.html":{}}}],["success",{"_index":1346,"title":{},"body":{"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"miscellaneous/typealiases.html":{}}}],["such",{"_index":2091,"title":{},"body":{"index.html":{}}}],["suggest",{"_index":43,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["suggest.includes(this.inputelement.value",{"_index":124,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["suggestgenerator",{"_index":54,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["suggests",{"_index":47,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["support",{"_index":2307,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":152,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"modules.html":{}}}],["svg.outerhtml",{"_index":1623,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('fit",{"_index":1615,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('focusable",{"_index":1621,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('height",{"_index":1616,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('preserveaspectratio",{"_index":1618,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('width",{"_index":1617,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg/svg",{"_index":1084,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["svg_config",{"_index":1430,"title":{"interfaces/SVG_CONFIG.html":{}},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{}}}],["svg_config['sizes",{"_index":1440,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["svg_icons",{"_index":1449,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg_icons_config",{"_index":1447,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg_missing_icon_fallback",{"_index":1451,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svgelement",{"_index":1637,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svgicon",{"_index":1589,"title":{"classes/SvgIcon.html":{}},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"coverage.html":{}}}],["svgicon(data",{"_index":1628,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svgiconcomponent",{"_index":151,"title":{"components/SvgIconComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgiconregistry",{"_index":1599,"title":{"injectables/SvgIconRegistry.html":{}},"body":{"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{}}}],["svgiconsmodule",{"_index":1077,"title":{"modules/SvgIconsModule.html":{}},"body":{"modules/ConfiguratorModule.html":{},"modules/SvgIconsModule.html":{},"modules.html":{},"overview.html":{}}}],["svgiconsmodule.forroot(({icons",{"_index":1092,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["svgicontype",{"_index":1436,"title":{"interfaces/SvgIconType.html":{}},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svgicontype[]).concat(...icons",{"_index":1726,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["svgmap",{"_index":1600,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svgsvgelement",{"_index":1630,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["switch",{"_index":2260,"title":{},"body":{"index.html":{}}}],["switch(detail.nativeelement.id",{"_index":1556,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["switchmap",{"_index":96,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConfiguratorComponent.html":{}}}],["switchmap((context",{"_index":996,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["switchmap(event",{"_index":115,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["synced",{"_index":2202,"title":{},"body":{"index.html":{}}}],["t",{"_index":1514,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["table",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1500,"title":{},"body":{"components/SpacingEditorComponent.html":{},"index.html":{}}}],["takes",{"_index":2292,"title":{},"body":{"index.html":{}}}],["tap",{"_index":977,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["tap((config",{"_index":249,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["template",{"_index":42,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["template(s",{"_index":2296,"title":{},"body":{"index.html":{}}}],["template.display",{"_index":677,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["template.iconclass",{"_index":678,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["template.title",{"_index":679,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["template]'},{'name",{"_index":168,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["templatename",{"_index":1736,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["templatenamedirective",{"_index":167,"title":{"directives/TemplateNameDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateref",{"_index":79,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToolbarComponent.html":{}}}],["templates",{"_index":758,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["templateurl",{"_index":453,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["test",{"_index":274,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["tested",{"_index":506,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["text",{"_index":336,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["textarea",{"_index":1244,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["therefore",{"_index":2194,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1026,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this._data",{"_index":1317,"title":{},"body":{"components/ItemComponent.html":{}}}],["this._getconfig(id",{"_index":257,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this._getconfig(value.id",{"_index":289,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this._hoveredid",{"_index":782,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this._showtree",{"_index":1020,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.addvaluetolist(this.values",{"_index":529,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.alignmenthorizontal",{"_index":1177,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.alignmentvertical",{"_index":1176,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.borderdirections",{"_index":1531,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.cdr.markforcheck",{"_index":1004,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["this.cdref.detectchanges",{"_index":1566,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.cdref.markforcheck",{"_index":649,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.checkcondition(condition",{"_index":426,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.checkdata(condition",{"_index":409,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.checkequals(value",{"_index":434,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.checkregexp(value",{"_index":433,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.checksinglevalue(condition",{"_index":430,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.children.foreach",{"_index":1017,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["this.classes",{"_index":1181,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["this.classes.filter(c",{"_index":1188,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{}}}],["this.classes.includes('flex",{"_index":1174,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.classes.indexof(style",{"_index":1186,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.classes.join",{"_index":1184,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.classes.length",{"_index":1578,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.classes.push(style",{"_index":1195,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.classes[match.index",{"_index":1577,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.clickinprogress",{"_index":105,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.close.next(success",{"_index":1360,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.componentid",{"_index":1540,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.condition",{"_index":1320,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.conditionsdata",{"_index":1322,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.conditionservice.checkdata(params",{"_index":573,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["this.conditionsservice.check(this.config?.condition",{"_index":1321,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.conditionsservice.selectdata(condition",{"_index":522,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.conditionsservice.writecondition(condition",{"_index":539,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.config",{"_index":1308,"title":{},"body":{"components/ItemComponent.html":{},"components/SvgIconComponent.html":{},"directives/TooltipDirective.html":{}}}],["this.config.classes",{"_index":1183,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["this.config.classes?.includes('d",{"_index":1331,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.config.classes?.includes('uib",{"_index":1332,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.config.classes?.split",{"_index":1182,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{}}}],["this.config.id",{"_index":1541,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.configservice.generateid(config.id",{"_index":1040,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.generateid(dropped",{"_index":358,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.getconfig(context.id",{"_index":1038,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.getcontainer(containerid",{"_index":344,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.getcontainer(context.parentid",{"_index":1034,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.getcontainer(dropped.container",{"_index":349,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.init",{"_index":2094,"title":{},"body":{"index.html":{}}}],["this.configservice.isused(c.id",{"_index":696,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.configservice.removeconfig(item.display",{"_index":720,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.configservice.undo",{"_index":340,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.updateconfig([config",{"_index":1044,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.updateconfig([container",{"_index":366,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.updateconfig([ogcontainer",{"_index":382,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.updateconfig(config",{"_index":1001,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.updateconfig(container",{"_index":388,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.updateconfig(this.config",{"_index":1185,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/SpacingEditorComponent.html":{}}}],["this.configservice.watchallconfig",{"_index":646,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.configservice.watchallconfig().subscribe",{"_index":1304,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.configservice.watchallconfig().subscribe(config",{"_index":1002,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.watchconfig(context!.id).pipe",{"_index":997,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.watchconfig(this.id).subscribe((config",{"_index":1301,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.configservice.watchconfig(this.id).subscribe((id",{"_index":1981,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.configurable",{"_index":1310,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.configurableservice.clickconfigurable(this",{"_index":881,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.configurabledirectivemap.get(hoveredid",{"_index":1891,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurableservice.configurabledirectivemap.get(id",{"_index":1884,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurableservice.configurabledirectivemap.get(this.zone",{"_index":889,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.configurabledirectivemap.set(this.id",{"_index":869,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.editorenabled",{"_index":1976,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.configurableservice.editorenabled$.subscribe(value",{"_index":1009,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configurableservice.hoveredid",{"_index":895,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/TreeComponent.html":{}}}],["this.configurableservice.mouseenterconfigurable(this",{"_index":874,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.mouseleaveconfigurable(this",{"_index":875,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.mouseoverconfigurable(this",{"_index":873,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.stopediting",{"_index":1016,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configurableservice.toggleeditor",{"_index":1811,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.configurableservice.watchedited().pipe",{"_index":993,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configuration",{"_index":1003,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/TreeComponent.html":{}}}],["this.configuration.foreach((el",{"_index":1858,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap",{"_index":1857,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap.get(id",{"_index":1872,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap.set(el.id",{"_index":1859,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap.set(id",{"_index":1873,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap.values()].filter((el",{"_index":1878,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurators",{"_index":1000,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configurators[tpl.templatename",{"_index":1019,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configurators[type",{"_index":681,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.container",{"_index":1841,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.context.config.condition",{"_index":540,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.config.condition!.field",{"_index":551,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.config.condition?.values.push({value",{"_index":549,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.config.condition?.values.splice(i",{"_index":550,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.configchanged",{"_index":516,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.conditionsdata",{"_index":523,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.data",{"_index":519,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.data.foreach(item",{"_index":533,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.data[this.context.context.dataindex",{"_index":520,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.dataindex",{"_index":518,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.templates",{"_index":674,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.context.templates![type",{"_index":676,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.context.templates?.[c.type]?.display",{"_index":695,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.createconfig",{"_index":1688,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.data",{"_index":521,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ItemComponent.html":{}}}],["this.data[this.dataindex",{"_index":1319,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.dataindex",{"_index":1318,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.debugtext",{"_index":538,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.details",{"_index":1555,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.direction",{"_index":1175,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.directions",{"_index":1529,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.document",{"_index":1603,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.document.createelement('div",{"_index":1633,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.dragdropservice.draggedcreator",{"_index":701,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.dragdropservice.handlecancel(index",{"_index":1329,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.dragdropservice.handledrop(this.id",{"_index":1327,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.draggedcreator",{"_index":359,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.draggedcreator?.type",{"_index":356,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.edited",{"_index":992,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.edited$.next(configurable",{"_index":801,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.edited$.next(undefined",{"_index":800,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.edited$.pipe(filter(this.isconfigurable",{"_index":806,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.editorenabled$.next(enabled",{"_index":811,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.editorenabled$.value",{"_index":810,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.el",{"_index":1779,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.el.nativeelement",{"_index":868,"title":{},"body":{"directives/ConfigurableDirective.html":{},"directives/TooltipDirective.html":{}}}],["this.el.nativeelement.addeventlistener('hidden.bs.modal",{"_index":1358,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.el.nativeelement.classlist.contains('edited",{"_index":885,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.el.nativeelement.style.display",{"_index":1333,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.element.classlist.add(`svg",{"_index":1674,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.classlist.remove(`svg",{"_index":1672,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.innerhtml",{"_index":1675,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.setattribute('aria",{"_index":1671,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.style.color",{"_index":1686,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.style.fontsize",{"_index":1677,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.style.height",{"_index":1683,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.style.width",{"_index":1680,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.existingpalette",{"_index":684,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.fields",{"_index":524,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.findparent(id",{"_index":281,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.generateautopalette",{"_index":654,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.generateexistingpalette(configs",{"_index":648,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.generateexistingpalette(this.configservice.getallconfig",{"_index":658,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.get(name",{"_index":1631,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.getallconfig",{"_index":283,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.getconfig(id",{"_index":242,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.highlight",{"_index":872,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.historystate",{"_index":227,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.hasfuture",{"_index":315,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.haspast",{"_index":313,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.pause",{"_index":258,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.redo",{"_index":319,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.resume",{"_index":260,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.undo",{"_index":317,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.horizontal",{"_index":1316,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.host.nativeelement",{"_index":1690,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.hoveredid",{"_index":787,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.html",{"_index":1840,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.id",{"_index":894,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{}}}],["this.inputelement.value",{"_index":123,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.insertnew(container",{"_index":362,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.iscontainerconfig(config",{"_index":264,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.iscontainerconfig(item",{"_index":285,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.iscontainerconfig(this._getconfig(id",{"_index":269,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.ishorizontal",{"_index":1315,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.itemclicked.next({data",{"_index":1987,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.lastkey",{"_index":1673,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.magnitudes",{"_index":1526,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.magnitudes.options",{"_index":1527,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.marginmagnitudes",{"_index":1530,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.mergedconfig",{"_index":1687,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.mergedconfig.sizes[this.mergedconfig.defaultsize",{"_index":1689,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.mergedconfig.sizes[value",{"_index":1678,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.message",{"_index":1778,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.modal",{"_index":705,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.close",{"_index":711,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.close.complete",{"_index":717,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.close.next(success",{"_index":715,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.config",{"_index":716,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.show",{"_index":1356,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modal?.dispose",{"_index":1357,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modal?.hide",{"_index":1361,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.movebetween(container",{"_index":353,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.movewithin(og",{"_index":351,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.nativeelement",{"_index":867,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.ngmodel.update",{"_index":1379,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["this.ngmodelchangedebounced.emit(value",{"_index":1382,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["this.offcanvas",{"_index":1010,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvas.hide",{"_index":1011,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvas.show",{"_index":994,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvas.toggle",{"_index":1037,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvasbodyel.nativeelement.scroll(0",{"_index":1021,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvasel.nativeelement.addeventlistener('hide.bs.offcanvas",{"_index":1015,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.onmodalclose(false",{"_index":1359,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.ontoastmessage.next(null",{"_index":1750,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["this.ontoastmessage.next({message",{"_index":1749,"title":{},"body":{"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["this.openmodal(id",{"_index":680,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.options",{"_index":652,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToastComponent.html":{}}}],["this.options.enablerawhtml",{"_index":667,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.options.enablesubcontainers",{"_index":662,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.options.paletteoptions",{"_index":1029,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.options.rawhtmlplaceholder",{"_index":673,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.placement",{"_index":1839,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.previousconfigurableelement",{"_index":790,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement.id",{"_index":791,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement.removeedited",{"_index":797,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement.removeselected",{"_index":798,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement.zone",{"_index":792,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement?.removeedited",{"_index":803,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement?.removeselected",{"_index":804,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.register(config.icons",{"_index":1606,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.register(config.missingiconfallback",{"_index":1608,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.registry.get(name",{"_index":1669,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.registry.get(this.config.missingiconfallback?.name",{"_index":1670,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.removeedited",{"_index":886,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.removeselected",{"_index":887,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.renderer.addclass(this.el.nativeelement",{"_index":891,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.renderer.removeattribute(detail.nativeelement",{"_index":1565,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.renderer.removeclass(this.el.nativeelement",{"_index":892,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.renderer.setattribute(detail.nativeelement",{"_index":1564,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.resolveoptions(context.zone",{"_index":999,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.root",{"_index":1877,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.select",{"_index":111,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.select.next(value",{"_index":125,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.selectdata(condition",{"_index":408,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.service.register",{"_index":1725,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["this.service.register(missingiconfallback",{"_index":1727,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["this.showtree(false",{"_index":995,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.standardpalette",{"_index":660,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.standardpalette.push",{"_index":663,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.state",{"_index":1544,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.state[`border${direction",{"_index":1550,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.state[type",{"_index":1572,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.state[type]?.[prop",{"_index":1571,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.state[type][prop",{"_index":1579,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.store",{"_index":226,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.pipe",{"_index":245,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.pipe(selectallentities",{"_index":237,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.query(getallentities",{"_index":239,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.query(getentity(id",{"_index":255,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.subscribe(console.log",{"_index":231,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.update",{"_index":233,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.update(addentities(config",{"_index":259,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.update(deleteentities(id",{"_index":298,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.sub",{"_index":1776,"title":{},"body":{"components/ToastComponent.html":{},"components/ZoneComponent.html":{}}}],["this.sub.unsubscribe",{"_index":1788,"title":{},"body":{"components/ToastComponent.html":{},"components/ZoneComponent.html":{}}}],["this.subs",{"_index":1378,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["this.subs.foreach((s",{"_index":1306,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.subs.push(configchanges",{"_index":1305,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.subs.unsubscribe",{"_index":1383,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["this.suggestgenerator(this.inputelement.value",{"_index":120,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.suggests",{"_index":101,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.svgmap",{"_index":1610,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.svgmap.get(key",{"_index":1612,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.svgmap.has(name",{"_index":1626,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.svgmap.set(name",{"_index":1627,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.templates[tpl.templatename",{"_index":1984,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.toast",{"_index":1781,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.hide",{"_index":1785,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.show",{"_index":1784,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.ontoastmessage.subscribe((message",{"_index":1777,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show",{"_index":367,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.toelement(icon.content",{"_index":1614,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.tooltip",{"_index":1837,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltip?.dispose",{"_index":1832,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.undoaction",{"_index":372,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.updateclasses",{"_index":1580,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.updatecondition",{"_index":1299,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.updateconfig",{"_index":548,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.updateconfig(config",{"_index":1302,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.updateconfig(false",{"_index":509,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.updatedata",{"_index":1298,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.updatedata(this.context.config.condition",{"_index":511,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.updatedebugtext(this.context.config.condition",{"_index":514,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.updatedetails",{"_index":1542,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.updatefields",{"_index":512,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.updatestate",{"_index":1538,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["this.updatevalues(this.context.config.condition",{"_index":513,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.values",{"_index":526,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.writevalue(condition",{"_index":414,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.zone",{"_index":888,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.zoneoptions[zone",{"_index":1025,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.zoneoptions[zone]?.paletteoptions",{"_index":1030,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["those",{"_index":2229,"title":{},"body":{"index.html":{}}}],["through",{"_index":2065,"title":{},"body":{"index.html":{}}}],["throw",{"_index":265,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["times",{"_index":2167,"title":{},"body":{"index.html":{}}}],["title",{"_index":614,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"directives/TemplateNameDirective.html":{},"directives/TooltipDirective.html":{}}}],["toast",{"_index":1738,"title":{},"body":{"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["toast'},{'name",{"_index":155,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["toast.component.html",{"_index":1757,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.getorcreateinstance(this.el.nativeelement",{"_index":1782,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.options",{"_index":1747,"title":{},"body":{"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{}}}],["toast.service",{"_index":1774,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.component",{"_index":1956,"title":{},"body":{"modules/UtilsModule.html":{}}}],["toastaction",{"_index":326,"title":{"interfaces/ToastAction.html":{}},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcomponent",{"_index":154,"title":{"components/ToastComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toastmessage",{"_index":1744,"title":{"interfaces/ToastMessage.html":{}},"body":{"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastmessage|null",{"_index":1775,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":327,"title":{"injectables/ToastService.html":{}},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toelement",{"_index":1698,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["toelement(content",{"_index":1636,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["toggle",{"_index":772,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/SpacingEditorComponent.html":{}}}],["toggle(type",{"_index":1490,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["toggleclass",{"_index":1126,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["toggleclass(style",{"_index":1133,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["toggleeditor",{"_index":808,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ToolbarComponent.html":{}}}],["toggles",{"_index":1492,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["tokens",{"_index":304,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["tokens.length",{"_index":310,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["tokens.slice(0",{"_index":309,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["tokens[tokens.length",{"_index":308,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["toolbar",{"_index":1060,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["toolbar'},{'name",{"_index":157,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["toolbar.component",{"_index":1090,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["toolbar.component.html",{"_index":1805,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":156,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":2053,"title":{},"body":{"index.html":{}}}],["tooltip",{"_index":170,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["tooltip's",{"_index":1173,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"directives/TooltipDirective.html":{}}}],["tooltip.directive",{"_index":1951,"title":{},"body":{"modules/UtilsModule.html":{}}}],["tooltip.getorcreateinstance(this.el.nativeelement",{"_index":1838,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipdirective",{"_index":169,"title":{"directives/TooltipDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tooltipplacement",{"_index":1168,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"directives/TooltipDirective.html":{},"miscellaneous/typealiases.html":{}}}],["top",{"_index":30,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":2362,"title":{},"body":{"license.html":{}}}],["tpl",{"_index":1018,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["trace",{"_index":2303,"title":{},"body":{"index.html":{}}}],["track",{"_index":554,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["trackbyfn",{"_index":463,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["trackbyfn(index",{"_index":483,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["transclusion",{"_index":2133,"title":{},"body":{"index.html":{}}}],["transform",{"_index":563,"title":{},"body":{"pipes/ConditionPipe.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["transform(value",{"_index":564,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["transition",{"_index":1223,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["translate(0",{"_index":1924,"title":{},"body":{"components/TreeComponent.html":{}}}],["translate(9999px",{"_index":1922,"title":{},"body":{"components/TreeComponent.html":{}}}],["translatey",{"_index":1064,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["translation",{"_index":2310,"title":{},"body":{"index.html":{}}}],["trash",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tree'},{'name",{"_index":159,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["tree.component.css",{"_index":1843,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree.component.html",{"_index":1844,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree/tree.component",{"_index":1091,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["treecomponent",{"_index":158,"title":{"components/TreeComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trigger",{"_index":1817,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["trivial",{"_index":2161,"title":{},"body":{"index.html":{}}}],["true",{"_index":339,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":440,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["tslib",{"_index":2041,"title":{},"body":{"dependencies.html":{}}}],["turned",{"_index":1193,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["turnoff",{"_index":1134,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["turnoff.find(o",{"_index":1190,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type,match",{"_index":1582,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["type.slice(1",{"_index":303,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["type.split",{"_index":305,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["type.startswith(\"_",{"_index":302,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["typealiases",{"_index":2373,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":517,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ItemComponent.html":{},"components/SvgIconComponent.html":{},"components/ZoneComponent.html":{}}}],["types",{"_index":1597,"title":{},"body":{"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{}}}],["type}${code",{"_index":1570,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["type}${match.direction",{"_index":1587,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["ui",{"_index":1408,"title":{},"body":{"components/PaletteComponent.html":{},"index.html":{}}}],["uib",{"_index":14,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["uibcondition",{"_index":562,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["ul",{"_index":1896,"title":{},"body":{"components/TreeComponent.html":{}}}],["ul.tree",{"_index":1909,"title":{},"body":{"components/TreeComponent.html":{}}}],["ul::before",{"_index":1917,"title":{},"body":{"components/TreeComponent.html":{}}}],["undefined",{"_index":248,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["under",{"_index":2098,"title":{},"body":{"index.html":{}}}],["understand",{"_index":508,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["undo",{"_index":316,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"miscellaneous/variables.html":{}}}],["undo/redo",{"_index":2193,"title":{},"body":{"index.html":{}}}],["undoable",{"_index":2197,"title":{},"body":{"index.html":{}}}],["undoaction",{"_index":335,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["unique",{"_index":2170,"title":{},"body":{"index.html":{}}}],["unless",{"_index":1192,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"index.html":{}}}],["unselected",{"_index":766,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["unused",{"_index":1429,"title":{},"body":{"components/PaletteComponent.html":{}}}],["update",{"_index":655,"title":{},"body":{"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{}}}],["updateclasses",{"_index":1467,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["updatecondition",{"_index":1261,"title":{},"body":{"components/ItemComponent.html":{}}}],["updateconfig",{"_index":464,"title":{},"body":{"components/ConditionEditorComponent.html":{},"injectables/ConfigService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{}}}],["updateconfig(config",{"_index":1281,"title":{},"body":{"components/ItemComponent.html":{}}}],["updateconfig(notify",{"_index":485,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updateconfig(value",{"_index":287,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["updated",{"_index":1835,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["updatedata",{"_index":465,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ItemComponent.html":{}}}],["updatedata(condition",{"_index":488,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatedebugtext",{"_index":466,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatedebugtext(condition",{"_index":490,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatedetails",{"_index":1468,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["updateentities",{"_index":201,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["updateentities([v.id",{"_index":295,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["updatefields",{"_index":467,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatestate",{"_index":1469,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["updatevalues",{"_index":468,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatevalues(condition",{"_index":493,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["upon",{"_index":1486,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["url(\"data:image/svg+xml,%3csvg",{"_index":1928,"title":{},"body":{"components/TreeComponent.html":{}}}],["usage",{"_index":2101,"title":{},"body":{"index.html":{}}}],["usd",{"_index":2113,"title":{},"body":{"index.html":{}}}],["use",{"_index":1819,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":277,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"index.html":{}}}],["user",{"_index":708,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["users",{"_index":2064,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":1721,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["using",{"_index":2252,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":1459,"title":{},"body":{"components/SpacingEditorComponent.html":{},"index.html":{}}}],["utilities.min",{"_index":2084,"title":{},"body":{"index.html":{}}}],["utils",{"_index":328,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{}}}],["utils/svg",{"_index":1085,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["utils/template",{"_index":980,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["utils/types.helpers",{"_index":979,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["utils/utils.module",{"_index":1088,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{}}}],["utilsmodule",{"_index":1076,"title":{"modules/UtilsModule.html":{}},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/UtilsModule.html":{},"modules.html":{},"overview.html":{}}}],["v",{"_index":296,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["v)).join(operator",{"_index":415,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value(s",{"_index":558,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["value.map(v",{"_index":292,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["value.match(condition.$regexp",{"_index":448,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["value.not",{"_index":418,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["value.tolowercase",{"_index":437,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["value.value",{"_index":423,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["values",{"_index":392,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["values.includes(data",{"_index":536,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["values.push(data",{"_index":537,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["value}px",{"_index":1696,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["var",{"_index":130,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["variable",{"_index":2004,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":2379,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":665,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["verify",{"_index":2258,"title":{},"body":{"index.html":{}}}],["version",{"_index":2371,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":1158,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["via",{"_index":2255,"title":{},"body":{"index.html":{}}}],["viewbox='0",{"_index":1932,"title":{},"body":{"components/TreeComponent.html":{}}}],["viewchild",{"_index":976,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ModalComponent.html":{},"components/ToastComponent.html":{}}}],["viewchild('modal",{"_index":1347,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild('offcanvas",{"_index":973,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["viewchild('offcanvasbody",{"_index":971,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["viewchild('toastref",{"_index":1770,"title":{},"body":{"components/ToastComponent.html":{}}}],["viewchildren",{"_index":1535,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["viewchildren(\"details",{"_index":1536,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["viewchildren('details",{"_index":1510,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["viewinit",{"_index":1487,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["views.module.ts",{"_index":1115,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["views/drag",{"_index":322,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["views/dynamic",{"_index":1114,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["views/item.component.ts",{"_index":1252,"title":{},"body":{"components/ItemComponent.html":{},"coverage.html":{}}}],["views/item.component.ts:100",{"_index":1279,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:110",{"_index":1276,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:115",{"_index":1271,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:26",{"_index":1268,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:27",{"_index":1269,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:28",{"_index":1265,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:29",{"_index":1266,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:30",{"_index":1263,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:32",{"_index":1267,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:34",{"_index":1264,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:37",{"_index":1270,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:39",{"_index":1288,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:40",{"_index":1286,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:42",{"_index":1293,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:44",{"_index":1284,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:46",{"_index":1262,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:49",{"_index":1289,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:50",{"_index":1287,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:51",{"_index":1290,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:52",{"_index":1285,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:53",{"_index":1291,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:56",{"_index":1272,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:63",{"_index":1274,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:70",{"_index":1273,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:74",{"_index":1282,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:90",{"_index":1283,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:94",{"_index":1280,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/zone.component.ts",{"_index":1957,"title":{},"body":{"components/ZoneComponent.html":{},"coverage.html":{}}}],["views/zone.component.ts:26",{"_index":1973,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:27",{"_index":1978,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:29",{"_index":1965,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:30",{"_index":1964,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:31",{"_index":1963,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:33",{"_index":1966,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:35",{"_index":1977,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:37",{"_index":1962,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:40",{"_index":1974,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:41",{"_index":1975,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:42",{"_index":1972,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:45",{"_index":1969,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:51",{"_index":1967,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:57",{"_index":1968,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:61",{"_index":1980,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:65",{"_index":1971,"title":{},"body":{"components/ZoneComponent.html":{}}}],["visible",{"_index":1800,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["visual",{"_index":2185,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2216,"title":{},"body":{"index.html":{}}}],["visually",{"_index":2248,"title":{},"body":{"index.html":{}}}],["void",{"_index":69,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/ToastAction.html":{},"components/ToastComponent.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["want",{"_index":2120,"title":{},"body":{"index.html":{}}}],["warning",{"_index":370,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"interfaces/ToastAction.html":{},"interfaces/ToastMessage.html":{},"injectables/ToastService.html":{},"miscellaneous/typealiases.html":{}}}],["warranties",{"_index":2349,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2344,"title":{},"body":{"license.html":{}}}],["watchallconfig",{"_index":236,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["watchconfig",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["watchconfig(id",{"_index":240,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["watchedited",{"_index":805,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["well",{"_index":1822,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{}}}],["whether",{"_index":275,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"license.html":{}}}],["white",{"_index":1242,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{}}}],["whose",{"_index":688,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["wide",{"_index":2244,"title":{},"body":{"index.html":{}}}],["width",{"_index":31,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["width(value",{"_index":1679,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["width='16",{"_index":1930,"title":{},"body":{"components/TreeComponent.html":{}}}],["width='2",{"_index":1940,"title":{},"body":{"components/TreeComponent.html":{}}}],["withentities",{"_index":198,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["within",{"_index":278,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/SpacingEditorComponent.html":{},"index.html":{}}}],["without",{"_index":1875,"title":{},"body":{"components/TreeComponent.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":2096,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":1196,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["wrapped",{"_index":2097,"title":{},"body":{"index.html":{}}}],["wrapping",{"_index":2246,"title":{},"body":{"index.html":{}}}],["write",{"_index":670,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["writecondition",{"_index":598,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["writecondition(condition",{"_index":410,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["writevalue",{"_index":599,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["writevalue(condition",{"_index":416,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["wysiwyg",{"_index":2201,"title":{},"body":{"index.html":{}}}],["x",{"_index":1516,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["xl",{"_index":1445,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{},"miscellaneous/variables.html":{}}}],["xmidymid",{"_index":1619,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["xmlns='http://www.w3.org/2000/svg",{"_index":1929,"title":{},"body":{"components/TreeComponent.html":{}}}],["xs",{"_index":1441,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{},"miscellaneous/variables.html":{}}}],["xxl",{"_index":1446,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["y",{"_index":1517,"title":{},"body":{"components/SpacingEditorComponent.html":{}}}],["yes",{"_index":567,"title":{},"body":{"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"components/PaletteComponent.html":{},"injectables/ToastService.html":{},"components/ZoneComponent.html":{}}}],["z",{"_index":18,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ToastComponent.html":{},"components/TreeComponent.html":{}}}],["zone",{"_index":161,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteOptions.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["zone.component",{"_index":1117,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["zone.component.html",{"_index":1958,"title":{},"body":{"components/ZoneComponent.html":{}}}],["zone.js",{"_index":2043,"title":{},"body":{"dependencies.html":{}}}],["zonecomponent",{"_index":160,"title":{"components/ZoneComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SpacingEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["zoneoptions",{"_index":937,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["zones",{"_index":2178,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":581,"title":{},"body":{"modules/ConditionsModule.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AutocompleteComponent.html":{"url":"components/AutocompleteComponent.html","title":"component - AutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/utils/autocomplete.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-autocomplete\n            \n\n\n            \n                styles\n                \n.card {\n  z-index: 3;\n  box-shadow: 0 5px 7px rgb(0 0 0 / 8%);\n}\n.list-group {\n  top: 0;\n  width: 100%;\n  max-height: 200px;\n  overflow: auto;\n}\n.list-group-item-action {\n  cursor: pointer;\n}\n\n            \n\n            \n                template\n                \n  \n    \n      \n    \n  \n\n\n{{suggest}}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickInProgress\n                            \n                            \n                                itemTpl\n                            \n                            \n                                suggests$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allSuggests\n                            \n                            \n                                inputElement\n                            \n                            \n                                suggestGenerator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allSuggests\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/autocomplete.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputElement\n                    \n                \n                \n                    \n                        Type :     HTMLInputElement\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/autocomplete.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suggestGenerator\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/autocomplete.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/autocomplete.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/autocomplete.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/autocomplete.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clickInProgress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/autocomplete.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTpl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild('itemTpl', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/autocomplete.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggests$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/autocomplete.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, Output, EventEmitter, ContentChild, TemplateRef } from \"@angular/core\";\nimport { fromEvent, merge, Observable, of } from \"rxjs\";\nimport { filter, switchMap } from \"rxjs/operators\";\n\n@Component({\n  selector: 'uib-autocomplete',\n  template: `\n\n  \n    \n      \n    \n  \n\n\n{{suggest}}\n  `,\n  styles: [`\n.card {\n  z-index: 3;\n  box-shadow: 0 5px 7px rgb(0 0 0 / 8%);\n}\n.list-group {\n  top: 0;\n  width: 100%;\n  max-height: 200px;\n  overflow: auto;\n}\n.list-group-item-action {\n  cursor: pointer;\n}\n`]\n})\nexport class AutocompleteComponent implements OnInit {\n  @Input() inputElement: HTMLInputElement;\n  @Input() suggestGenerator?: (value: string) => Observable;\n  @Input() allSuggests?: string[];\n  @Output() select = new EventEmitter();\n  @ContentChild(\"itemTpl\", {static: false}) itemTpl: TemplateRef;\n  suggests$ = new Observable();\n  clickInProgress = false;\n\n  ngOnInit() {\n    this.suggests$ = merge(\n      fromEvent(this.inputElement, 'input'),\n      fromEvent(this.inputElement, 'focus'),\n      fromEvent(this.inputElement, 'blur').pipe(filter(() => (!this.clickInProgress))), // Filter out blur event caused by a click on the autocomplete\n      this.select // Hide the autocomplete when an item has been selected\n    ).pipe(\n      switchMap(event => {\n        if(typeof event !== 'string' && event.type !== 'blur') {\n          if(this.suggestGenerator) {\n            return this.suggestGenerator(this.inputElement.value);\n          }\n          else if(this.allSuggests) {\n            return of(this.allSuggests.filter(suggest => suggest !== this.inputElement.value && suggest.includes(this.inputElement.value)));\n          }\n        }\n        return of([]);\n      })\n    );\n  }\n\n  onSelect(value: string) {\n    this.inputElement.value = value;\n    this.select.next(value);\n  }\n\n}\n    \n\n\n    \n            \n.card {\n  z-index: 3;\n  box-shadow: 0 5px 7px rgb(0 0 0 / 8%);\n}\n.list-group {\n  top: 0;\n  width: 100%;\n  max-height: 200px;\n  overflow: auto;\n}\n.list-group-item-action {\n  cursor: pointer;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{suggest}}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'AutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassEditorComponent.html":{"url":"components/ClassEditorComponent.html","title":"component - ClassEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/class-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-class-editor\n            \n\n\n\n            \n                template\n                CSS Classes\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n                \n                    \n                        Type :         ConfiguratorContext\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/class-editor.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ConfiguratorContext } from '../configurator.models';\n\n@Component({\n  selector: 'uib-class-editor',\n  template: `\n  CSS Classes\n  \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClassEditorComponent {\n  @Input() context: ConfiguratorContext;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CSS Classes'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClassEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentConfig.html":{"url":"interfaces/ComponentConfig.html","title":"interface - ComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/config.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            classes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            condition\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configuration/config.service.ts:22\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condition:         Condition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Condition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createState, Store } from '@ngneat/elf';\nimport {\n  withEntities,\n  getEntity,\n  addEntities,\n  updateEntities,\n  selectEntity,\n  selectAllEntities,\n  getAllEntities,\n  deleteEntities,\n  deleteAllEntities,\n} from '@ngneat/elf-entities';\nimport { stateHistory } from '@ngneat/elf-state-history';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Condition } from '../conditions';\n\nexport interface ComponentConfig {\n  readonly id: string;\n  type: string;\n  classes?: string;\n  [key: string]: any;\n  condition?: Condition;\n}\n\nexport interface ContainerConfig extends ComponentConfig {\n  type: '_container';\n  items: string[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigService {\n  store: Store;\n  historyState: any;\n\n  init(initialValue: ComponentConfig[]) {\n    const { state, config } = createState(\n      withEntities({ initialValue })\n    );\n    this.store = new Store({ name: 'config', state, config });\n    this.historyState = stateHistory(this.store, { maxAge: Infinity });\n    this.store.subscribe(console.log);\n  }\n\n  set(config: ComponentConfig[]) {\n    this.store.update(\n      deleteAllEntities(),\n      addEntities(config)\n    );\n  }\n\n  public watchAllConfig(): Observable {\n    return this.store.pipe(selectAllEntities());\n  }\n\n  public getAllConfig(): ComponentConfig[] {\n    return this.store.query(getAllEntities());\n  }\n\n  public watchConfig(id: string): Observable {\n    //console.log('watch:', id);\n    this.getConfig(id); // Ensure a value exists (if 'id' has no config)\n    return this.store.pipe(\n      selectEntity(id),\n      filter(config => config !== undefined),\n      //tap((config) => console.log('change:', config)),\n      map((config) => JSON.parse(JSON.stringify(config)))\n    );\n  }\n\n  private _getConfig(id: string): ComponentConfig | undefined {\n    return this.store.query(getEntity(id));\n  }\n\n  public getConfig(id: string): ComponentConfig {\n    let config = this._getConfig(id);\n    if (!config) {\n      config = { id, type: id };\n      this.historyState.pause();\n      this.store.update(addEntities(config));\n      this.historyState.resume();\n    }\n    return JSON.parse(JSON.stringify(config)); // Deep copy\n  }\n\n  public getContainer(id: string): ContainerConfig {\n    const config = this.getConfig(id);\n    if (!this.isContainerConfig(config)) {\n      throw `${id} is not a container`;\n    }\n    return config;\n  }\n\n  public isContainer(id: string): boolean {\n    return this.isContainerConfig(this._getConfig(id));\n  }\n\n  public isContainerConfig(conf: ComponentConfig|undefined): conf is ContainerConfig {\n    return conf?.type === '_container';\n  }\n\n  /**\n   * Test whether a given component id is used within the hierarchy of a container\n   */\n  public isUsed(id: string) {\n    return !!this.findParent(id);\n  }\n\n  public findParent(id: string): ContainerConfig | undefined {\n    return this.getAllConfig()\n      .find(item => this.isContainerConfig(item) && item.items.includes(id)) as ContainerConfig | undefined;\n  }\n\n  public updateConfig(value: ComponentConfig | ComponentConfig[]) {\n    //console.log('update config', this._getConfig(value.id));\n    //console.log('new config', value);\n    if(!Array.isArray(value)) value = [value];\n    this.store.update(\n      ...value.map(v => {\n        if(!this._getConfig(v.id)){\n          return addEntities(v)\n        }\n        return updateEntities([v.id], () => v)}\n      )\n    );\n  }\n\n  public removeConfig(id: string) {\n    this.store.update(deleteEntities(id));\n  }\n\n  public generateId(type: string) {\n    let idx = 1;\n    let root = type.startsWith(\"_\")? type.slice(1) : type;\n    const tokens = type.split(\"-\");\n    if(tokens[tokens.length-1].match(/\\d+/)) {\n      idx = +tokens[tokens.length-1];\n      root = tokens.slice(0, tokens.length-1).join('-');\n    }\n    let id = root;\n    do {\n      id = `${root}-${idx++}`;\n    } while (this._getConfig(id) || id === type);\n    return id;\n  }\n\n  public canUndo$(){\n    return this.historyState.hasPast$;\n  }\n\n  public canRedo$(){\n    return this.historyState.hasFuture$;\n  }\n\n  public undo() {\n    this.historyState.undo();\n  }\n\n  public redo() {\n    this.historyState.redo();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentCreator.html":{"url":"interfaces/ComponentCreator.html","title":"interface - ComponentCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/drag-drop.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createConfig\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createConfig:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ComponentConfig,\n  ConfigService,\n  ContainerConfig,\n} from '../configuration';\nimport { ToastAction, ToastService } from '../utils';\n\nexport interface ContainerIndex {\n  container: string;\n  index: number;\n}\n\nexport interface ComponentCreator {\n  type: string;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropService {\n\n  constructor(\n    public configService: ConfigService,\n    public toastService: ToastService\n  ) {}\n\n  draggedCreator?: ComponentCreator;\n\n  undoAction: ToastAction = {\n    text: $localize `Undo`,\n    hideToast: true,\n    action: () => this.configService.undo()\n  }\n\n  public handleDrop(\n    containerId: string,\n    index: number,\n    dropped: ContainerIndex | string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    // Drop a component from a container to another container\n    if ((dropped as ContainerIndex).container) {\n      dropped = dropped as ContainerIndex;\n      const og = this.configService.getContainer(dropped.container);\n      if (dropped.container === containerId) {\n        this.moveWithin(og, dropped.index, index);\n      } else {\n        this.moveBetween(container, index, og, dropped.index);\n      }\n    }\n    // Drag a component creator (from a palette)\n    else if (this.draggedCreator?.type === dropped) {\n      const newId = this.configService.generateId(dropped);\n      this.draggedCreator\n        .createConfig(newId, this.draggedCreator)\n        .subscribe((config) => this.insertNew(container, index, config));\n    }\n    else {\n      console.error(\"Unexpected dropped item:\", dropped);\n    }\n  }\n\n  public handleCancel(\n    index: number,\n    containerId: string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    const config = container.items.splice(index, 1);\n    this.configService.updateConfig([container]);\n    this.toastService.show(\n      $localize `Component '${config[0]}' removed`,\n      \"warning text-dark\",\n      [this.undoAction]\n    );\n  }\n\n  private insertNew(\n    container: ContainerConfig,\n    index: number,\n    component: ComponentConfig|undefined\n  ) {\n    if(component) {\n      container.items.splice(index, 0, component.id);\n      this.configService.updateConfig([container, component]); // addEntities might be needed\n    }\n  }\n\n  private moveBetween(\n    container: ContainerConfig,\n    index: number,\n    ogContainer: ContainerConfig,\n    ogIndex: number\n  ) {\n    let item = ogContainer.items.splice(ogIndex, 1);\n    container.items.splice(index, 0, item[0]);\n    this.configService.updateConfig([ogContainer, container]);\n  }\n\n  private moveWithin(\n    container: ContainerConfig,\n    oldIndex: number,\n    newIndex: number\n  ) {\n    if (oldIndex !== newIndex && oldIndex !== newIndex - 1) {\n      let item = container.items.splice(oldIndex, 1);\n      if (newIndex > oldIndex) {\n        newIndex--;\n      }\n      container.items.splice(newIndex, 0, item[0]);\n      this.configService.updateConfig(container);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Condition.html":{"url":"interfaces/Condition.html","title":"interface - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/conditions/conditions.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            or\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        or\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        or:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"equals\" | \"regexp\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"equals\" | \"regexp\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     ConditionValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ConditionValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n\nexport interface Condition {\n  data?: string; // conditionsData selector (or undefined for the main data object)\n  field: string; // The field to select from the data object\n  type: 'equals' | 'regexp';\n  values: ConditionValue[];\n  or?: boolean;\n}\n\nexport interface ConditionValue {\n  value: string;\n  not?: boolean;\n  $regexp?: RegExp;\n}\n\n\n@Injectable({providedIn: 'root'})\nexport class ConditionsService {\n\n  public selectData(condition: Condition, conditionsData?: Record, data?: any): any {\n    return condition.data? conditionsData?.[condition.data] : data;\n  }\n\n  public check(condition: Condition | undefined, conditionsData?: Record, data?: any): boolean {\n    if(!condition) return true;\n    const selectData = this.selectData(condition, conditionsData, data);\n    return this.checkData(condition, selectData);\n  }\n\n  public writeCondition(condition: Condition) {\n    const operator = condition.or? ') OR (' : ') AND (';\n    return '('+condition.values.map(v => this.writeValue(condition, v)).join(operator)+')';\n  }\n\n  public writeValue(condition: Condition, value: ConditionValue) {\n    if(condition.type === 'regexp') {\n      const operator = value.not? '!' : '';\n      return `${operator}${condition.data || 'data'}['${condition.field}'].match(/${value.value}/)'`;\n    }\n    else if (condition.type === 'equals') {\n      const operator = value.not? '!==' : '==='\n      return `${condition.data || 'data'}['${condition.field}'] ${operator} '${value.value}'`;\n    }\n    return '';\n  }\n  \n  public checkData(condition: Condition, data?: any) {\n    const value = data?.[condition.field]?.toString() || '';\n    return this.checkCondition(condition, value);\n  }\n\n  private checkCondition(condition: Condition, data: string): boolean {\n    if(condition.or) {\n      return !!condition.values.find(v => this.checkSingleValue(condition, v, data));\n    }\n    else {\n      return condition.values.every(v => this.checkSingleValue(condition, v, data));\n    }\n  }\n\n  private checkSingleValue(condition: Condition, value: ConditionValue, data: string) {\n    let test;\n    if(condition.type === 'regexp') {\n      test = this.checkRegexp(value, data);\n    }\n    else if(condition.type === 'equals') {\n      test = this.checkEquals(value, data);\n    }\n    return test? !value.not : !!value.not;\n  }\n\n  \n  private checkEquals(condition: ConditionValue, value: string): boolean {\n    return condition.value.toLowerCase() === value.toLowerCase();\n  }\n\n\n  private checkRegexp(condition: ConditionValue, value: string) {\n    if(!condition.$regexp) {\n      try {\n        condition.$regexp = new RegExp(condition.value, 'i');\n      }\n      catch(e) {\n        console.warn(\"Incorrect regular expression \", condition.value);\n        return true;\n      }\n    }\n    return value.match(condition.$regexp);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionEditorComponent.html":{"url":"components/ConditionEditorComponent.html","title":"component - ConditionEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConditionEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/condition-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-condition-editor\n            \n\n\n            \n                styles\n                \n  .condition-value .btn {\n    width: 40px;\n  }\n  .autocomplete .list-group {\n    top: 0;\n    width: 100%;\n    max-height: 200px;\n    overflow: auto;\n  }\n  \n            \n\n\n            \n                templateUrl\n                ./condition-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conditionsService\n                            \n                            \n                                data\n                            \n                            \n                                debugText\n                            \n                            \n                                fields\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addValue\n                            \n                            \n                                    Private\n                                addValueToList\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                removeValue\n                            \n                            \n                                selectField\n                            \n                            \n                                selectValue\n                            \n                            \n                                trackByFn\n                            \n                            \n                                updateConfig\n                            \n                            \n                                updateData\n                            \n                            \n                                updateDebugText\n                            \n                            \n                                updateFields\n                            \n                            \n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    activate\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionsService: ConditionsService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionsService\n                                                  \n                                                        \n                                                                        ConditionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n                \n                    \n                        Type :         ConfiguratorContext\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addValue\n                        \n                    \n                \n            \n            \n                \naddValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addValueToList\n                        \n                    \n                \n            \n            \n                \n                    \n                    addValueToList(values: string[], item: any, field: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeValue\n                        \n                    \n                \n            \n            \n                \nremoveValue(i: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectField\n                        \n                    \n                \n            \n            \n                \nselectField(field: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectValue\n                        \n                    \n                \n            \n            \n                \nselectValue(value: string, condition: ConditionValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    condition\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(index, item)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConfig\n                        \n                    \n                \n            \n            \n                \nupdateConfig(notify)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    notify\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDebugText\n                        \n                    \n                \n            \n            \n                \nupdateDebugText(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFields\n                        \n                    \n                \n            \n            \n                \nupdateFields()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValues\n                        \n                    \n                \n            \n            \n                \nupdateValues(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conditionsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConditionsService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        activate\n                    \n                \n\n                \n                    \n                        getactivate()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:87\n                                \n                            \n\n                \n                    \n                        setactivate(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:91\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges } from \"@angular/core\";\nimport { Condition, ConditionsService, ConditionValue } from \"../../conditions/conditions.service\";\nimport { ConfiguratorContext } from \"../configurator.models\";\n\n@Component({\n  selector: 'uib-condition-editor',\n  templateUrl: './condition-editor.component.html',\n  styles: [`\n  .condition-value .btn {\n    width: 40px;\n  }\n  .autocomplete .list-group {\n    top: 0;\n    width: 100%;\n    max-height: 200px;\n    overflow: auto;\n  }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConditionEditorComponent implements OnChanges {\n  @Input() context: ConfiguratorContext;\n\n  // The data on which the current condition is evaluated\n  data: any;\n  // The data field on which the current condition is evaluated\n  fields: string[];\n  // The list of values tested by the current condition\n  values: string[];\n  // A debug text to understand the current condition\n  debugText: string;\n\n  constructor(\n    public conditionsService: ConditionsService\n  ){}\n\n  ngOnChanges() {\n    this.updateConfig(false);\n  }\n\n  updateConfig(notify = true) {\n    if(this.context.config.condition) {\n      this.updateData(this.context.config.condition);\n      this.updateFields();\n      this.updateValues(this.context.config.condition);\n      this.updateDebugText(this.context.config.condition);\n    }\n    if(notify) {\n      this.context.configChanged();\n    }\n  }\n\n  updateData(condition: Condition) {\n    const data = typeof this.context.context.dataIndex === 'undefined'?\n      this.context.context.data : this.context.context.data[this.context.context.dataIndex];\n    this.data = this.conditionsService.selectData(condition, this.context.context.conditionsData, data);\n  }\n\n  updateFields() {\n    this.fields = this.data? Object.keys(this.data) : [];\n  }\n\n  updateValues(condition: Condition) {\n    this.values = [];\n    if(condition.field && this.data) {\n      if(condition.data || typeof this.context.context.dataIndex === 'undefined') {\n        this.addValueToList(this.values, this.data, condition.field);\n      }\n      // Special case of the data list\n      else {\n        this.context.context.data.forEach(item => this.addValueToList(this.values, item, condition.field));\n      }\n    }\n  }\n\n  private addValueToList(values: string[], item: any, field: string) {\n    const data = item[field]?.toString();\n    if(data && !values.includes(data)) {\n      values.push(data);\n    }\n  }\n\n  updateDebugText(condition: Condition) {\n    this.debugText = this.conditionsService.writeCondition(condition);\n  }\n\n  get activate(): boolean {\n    return !!this.context.config.condition;\n  }\n\n  set activate(value: boolean) {\n    if(value) { // Create a new condition from scratch\n      this.context.config.condition = {data: '', type: 'equals', field: '', values: [{value: ''}]};\n    }\n    else {  // Erase the current condition\n      delete this.context.config.condition;\n    }\n    this.updateConfig();\n  }\n\n  addValue() {\n    this.context.config.condition?.values.push({value: ''});\n  }\n\n  removeValue(i: number) {\n    this.context.config.condition?.values.splice(i, 1);\n    this.updateConfig();\n  }\n\n  selectField(field: string) {\n    this.context.config.condition!.field = field;\n    this.updateConfig();\n  }\n\n  selectValue(value: string, condition: ConditionValue) {\n    condition.value = value;\n    this.updateConfig();\n  }\n\n  // This item instance might change, so we track by index\n  trackByFn(index, item) {\n    return index;\n  }\n}\n\n    \n\n    \n        \n\n  \n  Display this component conditionally\n\n\n\n\n  \n    Data\n    \n      data\n      {{source.key}}\n    \n  \n\n  \n    Field\n    \n    \n  \n\n  \n    Type\n    \n      Equals\n      Regular Expression\n    \n  \n\n  \n    Value(s)\n    \n    \n      \n        \n        Not\n      \n      \n        \n        \n      \n      +\n       1\">-\n    \n  \n\n   1\">\n    \n    Display if any of the conditions is true\n  \n\n\n  \n    Debug text\n    {{debugText}}\n  \n\n\n    \n\n    \n            \n  .condition-value .btn {\n    width: 40px;\n  }\n  .autocomplete .list-group {\n    top: 0;\n    width: 100%;\n    max-height: 200px;\n    overflow: auto;\n  }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Display this component conditionally      Data          data      {{source.key}}            Field                Type          Equals      Regular Expression            Value(s)                              Not                                        +       1\">-         1\">        Display if any of the conditions is true        Debug text    {{debugText}}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ConditionPipe.html":{"url":"pipes/ConditionPipe.html","title":"pipe - ConditionPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ConditionPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/conditions/condition.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        uibCondition\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, params?: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/condition.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conditionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConditionsService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/conditions/condition.pipe.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Condition, ConditionsService } from \"./conditions.service\";\n\n@Pipe({\n  name: 'uibCondition'\n})\nexport class ConditionPipe implements PipeTransform {\n\n  constructor(\n    public conditionService: ConditionsService\n  ){}\n\n  transform(value: any, params?: Condition): boolean {\n    if(!params) return true;\n    return this.conditionService.checkData(params, value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConditionValue.html":{"url":"interfaces/ConditionValue.html","title":"interface - ConditionValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConditionValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/conditions/conditions.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            $regexp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            not\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $regexp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $regexp:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        not\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        not:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n\nexport interface Condition {\n  data?: string; // conditionsData selector (or undefined for the main data object)\n  field: string; // The field to select from the data object\n  type: 'equals' | 'regexp';\n  values: ConditionValue[];\n  or?: boolean;\n}\n\nexport interface ConditionValue {\n  value: string;\n  not?: boolean;\n  $regexp?: RegExp;\n}\n\n\n@Injectable({providedIn: 'root'})\nexport class ConditionsService {\n\n  public selectData(condition: Condition, conditionsData?: Record, data?: any): any {\n    return condition.data? conditionsData?.[condition.data] : data;\n  }\n\n  public check(condition: Condition | undefined, conditionsData?: Record, data?: any): boolean {\n    if(!condition) return true;\n    const selectData = this.selectData(condition, conditionsData, data);\n    return this.checkData(condition, selectData);\n  }\n\n  public writeCondition(condition: Condition) {\n    const operator = condition.or? ') OR (' : ') AND (';\n    return '('+condition.values.map(v => this.writeValue(condition, v)).join(operator)+')';\n  }\n\n  public writeValue(condition: Condition, value: ConditionValue) {\n    if(condition.type === 'regexp') {\n      const operator = value.not? '!' : '';\n      return `${operator}${condition.data || 'data'}['${condition.field}'].match(/${value.value}/)'`;\n    }\n    else if (condition.type === 'equals') {\n      const operator = value.not? '!==' : '==='\n      return `${condition.data || 'data'}['${condition.field}'] ${operator} '${value.value}'`;\n    }\n    return '';\n  }\n  \n  public checkData(condition: Condition, data?: any) {\n    const value = data?.[condition.field]?.toString() || '';\n    return this.checkCondition(condition, value);\n  }\n\n  private checkCondition(condition: Condition, data: string): boolean {\n    if(condition.or) {\n      return !!condition.values.find(v => this.checkSingleValue(condition, v, data));\n    }\n    else {\n      return condition.values.every(v => this.checkSingleValue(condition, v, data));\n    }\n  }\n\n  private checkSingleValue(condition: Condition, value: ConditionValue, data: string) {\n    let test;\n    if(condition.type === 'regexp') {\n      test = this.checkRegexp(value, data);\n    }\n    else if(condition.type === 'equals') {\n      test = this.checkEquals(value, data);\n    }\n    return test? !value.not : !!value.not;\n  }\n\n  \n  private checkEquals(condition: ConditionValue, value: string): boolean {\n    return condition.value.toLowerCase() === value.toLowerCase();\n  }\n\n\n  private checkRegexp(condition: ConditionValue, value: string) {\n    if(!condition.$regexp) {\n      try {\n        condition.$regexp = new RegExp(condition.value, 'i');\n      }\n      catch(e) {\n        console.warn(\"Incorrect regular expression \", condition.value);\n        return true;\n      }\n    }\n    return value.match(condition.$regexp);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConditionsModule.html":{"url":"modules/ConditionsModule.html","title":"module - ConditionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ConditionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConditionsModule\n\n\n\ncluster_ConditionsModule_declarations\n\n\n\ncluster_ConditionsModule_exports\n\n\n\n\nConditionPipe\n\nConditionPipe\n\n\n\nConditionsModule\n\nConditionsModule\n\nConditionsModule -->\n\nConditionPipe->ConditionsModule\n\n\n\n\n\nConditionPipe \n\nConditionPipe \n\nConditionPipe  -->\n\nConditionsModule->ConditionPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/conditions/conditions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConditionPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConditionPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ConditionPipe } from './condition.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ConditionPipe],\n  exports: [ConditionPipe]\n})\nexport class ConditionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConditionsService.html":{"url":"injectables/ConditionsService.html","title":"injectable - ConditionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConditionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/conditions/conditions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Private\n                                checkCondition\n                            \n                            \n                                    Public\n                                checkData\n                            \n                            \n                                    Private\n                                checkEquals\n                            \n                            \n                                    Private\n                                checkRegexp\n                            \n                            \n                                    Private\n                                checkSingleValue\n                            \n                            \n                                    Public\n                                selectData\n                            \n                            \n                                    Public\n                                writeCondition\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check(condition: Condition | undefined, conditionsData?: Record, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditionsData\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkCondition\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkCondition(condition: Condition, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkData\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkData(condition: Condition, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkEquals\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEquals(condition: ConditionValue, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkRegexp\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRegexp(condition: ConditionValue, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkSingleValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkSingleValue(condition: Condition, value: ConditionValue, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectData\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectData(condition: Condition, conditionsData?: Record, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditionsData\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        writeCondition\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(condition: Condition, value: ConditionValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/conditions/conditions.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n\nexport interface Condition {\n  data?: string; // conditionsData selector (or undefined for the main data object)\n  field: string; // The field to select from the data object\n  type: 'equals' | 'regexp';\n  values: ConditionValue[];\n  or?: boolean;\n}\n\nexport interface ConditionValue {\n  value: string;\n  not?: boolean;\n  $regexp?: RegExp;\n}\n\n\n@Injectable({providedIn: 'root'})\nexport class ConditionsService {\n\n  public selectData(condition: Condition, conditionsData?: Record, data?: any): any {\n    return condition.data? conditionsData?.[condition.data] : data;\n  }\n\n  public check(condition: Condition | undefined, conditionsData?: Record, data?: any): boolean {\n    if(!condition) return true;\n    const selectData = this.selectData(condition, conditionsData, data);\n    return this.checkData(condition, selectData);\n  }\n\n  public writeCondition(condition: Condition) {\n    const operator = condition.or? ') OR (' : ') AND (';\n    return '('+condition.values.map(v => this.writeValue(condition, v)).join(operator)+')';\n  }\n\n  public writeValue(condition: Condition, value: ConditionValue) {\n    if(condition.type === 'regexp') {\n      const operator = value.not? '!' : '';\n      return `${operator}${condition.data || 'data'}['${condition.field}'].match(/${value.value}/)'`;\n    }\n    else if (condition.type === 'equals') {\n      const operator = value.not? '!==' : '==='\n      return `${condition.data || 'data'}['${condition.field}'] ${operator} '${value.value}'`;\n    }\n    return '';\n  }\n  \n  public checkData(condition: Condition, data?: any) {\n    const value = data?.[condition.field]?.toString() || '';\n    return this.checkCondition(condition, value);\n  }\n\n  private checkCondition(condition: Condition, data: string): boolean {\n    if(condition.or) {\n      return !!condition.values.find(v => this.checkSingleValue(condition, v, data));\n    }\n    else {\n      return condition.values.every(v => this.checkSingleValue(condition, v, data));\n    }\n  }\n\n  private checkSingleValue(condition: Condition, value: ConditionValue, data: string) {\n    let test;\n    if(condition.type === 'regexp') {\n      test = this.checkRegexp(value, data);\n    }\n    else if(condition.type === 'equals') {\n      test = this.checkEquals(value, data);\n    }\n    return test? !value.not : !!value.not;\n  }\n\n  \n  private checkEquals(condition: ConditionValue, value: string): boolean {\n    return condition.value.toLowerCase() === value.toLowerCase();\n  }\n\n\n  private checkRegexp(condition: ConditionValue, value: string) {\n    if(!condition.$regexp) {\n      try {\n        condition.$regexp = new RegExp(condition.value, 'i');\n      }\n      catch(e) {\n        console.warn(\"Incorrect regular expression \", condition.value);\n        return true;\n      }\n    }\n    return value.match(condition.$regexp);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigModal.html":{"url":"interfaces/ConfigModal.html","title":"interface - ConfigModal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/palette/palette.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            close\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            configChanged\n                                        \n                                \n                                \n                                        \n                                            configurator\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        close\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        close:         Subject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Subject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         ComponentConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configChanged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configChanged:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configurator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configurator:         TemplateNameDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TemplateNameDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Configurable } from '../../configurable/configurable.service';\nimport { ComponentConfig, ConfigService } from '../../configuration/config.service';\nimport { ComponentCreator, DragDropService } from '../../dynamic-views/drag-drop.service';\nimport { TemplateNameDirective } from '../../utils';\nimport { PaletteOptions } from '../configurator.models';\n\ndeclare interface PaletteItem extends ComponentCreator {\n  type: string;\n  display?: string;\n  iconClass?: string;\n  title?: string;\n  removeable?: boolean;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\ndeclare interface ConfigModal {\n  configurator: TemplateNameDirective;\n  config: ComponentConfig;\n  configChanged: () => void;\n  title: string;\n  close: Subject;\n}\n\nexport const defaultPaletteOptions: PaletteOptions = {\n  enableSubcontainers: true,\n  enableRawHtml: true,\n  rawHtmlPlaceholder: \"Edit me\",\n  showStandardPalette: true,\n  showExistingPalette: true\n};\n\n@Component({\n  selector: 'uib-palette',\n  templateUrl: './palette.component.html',\n  styleUrls: ['./palette.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaletteComponent implements OnInit, OnChanges {\n  @Input() context: Configurable;\n  @Input() configurators: Record = {};\n  @Input() options = defaultPaletteOptions;\n\n  standardPalette: PaletteItem[];\n  existingPalette: PaletteItem[];\n\n  modal?: ConfigModal;\n\n  constructor(\n    public dragDropService: DragDropService,\n    public configService: ConfigService,\n    public cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    // The palette of existing components is constructed from the complete configuration\n    this.configService.watchAllConfig()\n      .subscribe(configs => {\n        this.generateExistingPalette(configs)\n        this.cdRef.markForCheck();\n      });\n  }\n\n  ngOnChanges() {\n    // Initialize options with default, then custom\n    this.options = Object.assign({}, defaultPaletteOptions, this.options);\n    this.generateAutoPalette();\n    // The existing palette must be update when the standard palette changes\n    this.generateExistingPalette(this.configService.getAllConfig());\n  }\n\n  generateAutoPalette() {\n    this.standardPalette = [];\n    if(!this.options.showStandardPalette) {\n      return;\n    }\n    if (this.options.enableSubcontainers) {\n      this.standardPalette.push({\n        type: '_container',\n        display: $localize `Container`,\n        title: $localize `A component to arrange various sub-components`,\n        createConfig: (id: string) => of({ type: '_container', id, items: [] }),\n      });\n    }\n    if (this.options.enableRawHtml) {\n      this.standardPalette.push({\n        type: '_raw-html',\n        display: $localize `Raw HTML`,\n        title: $localize `A component to write HTML freely`,\n        createConfig: (id: string) => of({ type: '_raw-html', id, rawHtml: this.options.rawHtmlPlaceholder})\n      })\n    }\n    if (this.context.templates) {\n      Object.keys(this.context.templates).forEach((type) => {\n        let template = this.context.templates![type];\n        this.standardPalette.push({\n          type,\n          display: template.display || type,\n          iconClass: template.iconClass,\n          title: template.title,\n          createConfig: (id: string) => this.openModal(id, type, this.configurators[type]),\n        });\n      });\n    }\n  }\n\n  generateExistingPalette(configs: ComponentConfig[]) {\n    if(!this.options.showExistingPalette) {\n      this.existingPalette = [];\n      return;\n    }\n    this.existingPalette = configs.filter(c =>\n      // Add any non-container config whose type is compatible with the standard palette\n      this.standardPalette\n        .find(p => p.type !== '_container' && p.type === c.type))\n        .map(c => ({\n          type: c.type,\n          display: c.id,\n          title: $localize `Type: ${this.context.templates?.[c.type]?.display || c.type}`,\n          removeable: !this.configService.isUsed(c.id),\n          createConfig: _ => of(c) // The config already exists\n        })\n    )\n  }\n\n  onDndStart(item: PaletteItem) {\n    this.dragDropService.draggedCreator = item;\n  }\n\n  onDndEnd() {\n    this.dragDropService.draggedCreator = undefined;\n  }\n\n  openModal(id: string, type: string, configurator?: TemplateNameDirective): Observable {\n    const config = {type, id};\n    if(configurator) {\n      this.modal = {\n        configurator,\n        config,\n        configChanged: () => {}, // do nothing when the configurator changes the config (before user presses 'OK')\n        title: $localize `Create new ${type} component`,\n        close: new Subject()\n      }\n      return this.modal.close;\n    }\n    return of(config);\n  }\n\n  onModalClose(success: boolean) {\n    if(this.modal?.close) {\n      this.modal.close.next(success? this.modal.config : undefined);\n      this.modal.close.complete();\n      this.modal = undefined;\n    }\n  }\n\n  removeItem(item: PaletteItem) {\n    console.log(\"remove\", item);\n    this.configService.removeConfig(item.display!); // The display is the component id\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                historyState\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getConfig\n                            \n                            \n                                    Public\n                                canRedo$\n                            \n                            \n                                    Public\n                                canUndo$\n                            \n                            \n                                    Public\n                                findParent\n                            \n                            \n                                    Public\n                                generateId\n                            \n                            \n                                    Public\n                                getAllConfig\n                            \n                            \n                                    Public\n                                getConfig\n                            \n                            \n                                    Public\n                                getContainer\n                            \n                            \n                                init\n                            \n                            \n                                    Public\n                                isContainer\n                            \n                            \n                                    Public\n                                isContainerConfig\n                            \n                            \n                                    Public\n                                isUsed\n                            \n                            \n                                    Public\n                                redo\n                            \n                            \n                                    Public\n                                removeConfig\n                            \n                            \n                                set\n                            \n                            \n                                    Public\n                                undo\n                            \n                            \n                                    Public\n                                updateConfig\n                            \n                            \n                                    Public\n                                watchAllConfig\n                            \n                            \n                                    Public\n                                watchConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getConfig(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentConfig | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        canRedo$\n                        \n                    \n                \n            \n            \n                \n                    \n                    canRedo$()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        canUndo$\n                        \n                    \n                \n            \n            \n                \n                    \n                    canUndo$()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findParent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ContainerConfig | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateId\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateId(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ComponentConfig[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContainer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ContainerConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit(initialValue: ComponentConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    initialValue\n                                    \n                                                ComponentConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    isContainer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isContainerConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    isContainerConfig(conf: ComponentConfig | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conf\n                                    \n                                                ComponentConfig | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ContainerConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isUsed\n                        \n                    \n                \n            \n            \n                \n                    \n                    isUsed(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:106\n                \n            \n\n\n            \n                \n                    Test whether a given component id is used within the hierarchy of a container\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        redo\n                        \n                    \n                \n            \n            \n                \n                    \n                    redo()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeConfig(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(config: ComponentConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ComponentConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        undo\n                        \n                    \n                \n            \n            \n                \n                    \n                    undo()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateConfig(value: ComponentConfig | ComponentConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ComponentConfig | ComponentConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        watchAllConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    watchAllConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        watchConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    watchConfig(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        historyState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configuration/config.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configuration/config.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createState, Store } from '@ngneat/elf';\nimport {\n  withEntities,\n  getEntity,\n  addEntities,\n  updateEntities,\n  selectEntity,\n  selectAllEntities,\n  getAllEntities,\n  deleteEntities,\n  deleteAllEntities,\n} from '@ngneat/elf-entities';\nimport { stateHistory } from '@ngneat/elf-state-history';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Condition } from '../conditions';\n\nexport interface ComponentConfig {\n  readonly id: string;\n  type: string;\n  classes?: string;\n  [key: string]: any;\n  condition?: Condition;\n}\n\nexport interface ContainerConfig extends ComponentConfig {\n  type: '_container';\n  items: string[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigService {\n  store: Store;\n  historyState: any;\n\n  init(initialValue: ComponentConfig[]) {\n    const { state, config } = createState(\n      withEntities({ initialValue })\n    );\n    this.store = new Store({ name: 'config', state, config });\n    this.historyState = stateHistory(this.store, { maxAge: Infinity });\n    this.store.subscribe(console.log);\n  }\n\n  set(config: ComponentConfig[]) {\n    this.store.update(\n      deleteAllEntities(),\n      addEntities(config)\n    );\n  }\n\n  public watchAllConfig(): Observable {\n    return this.store.pipe(selectAllEntities());\n  }\n\n  public getAllConfig(): ComponentConfig[] {\n    return this.store.query(getAllEntities());\n  }\n\n  public watchConfig(id: string): Observable {\n    //console.log('watch:', id);\n    this.getConfig(id); // Ensure a value exists (if 'id' has no config)\n    return this.store.pipe(\n      selectEntity(id),\n      filter(config => config !== undefined),\n      //tap((config) => console.log('change:', config)),\n      map((config) => JSON.parse(JSON.stringify(config)))\n    );\n  }\n\n  private _getConfig(id: string): ComponentConfig | undefined {\n    return this.store.query(getEntity(id));\n  }\n\n  public getConfig(id: string): ComponentConfig {\n    let config = this._getConfig(id);\n    if (!config) {\n      config = { id, type: id };\n      this.historyState.pause();\n      this.store.update(addEntities(config));\n      this.historyState.resume();\n    }\n    return JSON.parse(JSON.stringify(config)); // Deep copy\n  }\n\n  public getContainer(id: string): ContainerConfig {\n    const config = this.getConfig(id);\n    if (!this.isContainerConfig(config)) {\n      throw `${id} is not a container`;\n    }\n    return config;\n  }\n\n  public isContainer(id: string): boolean {\n    return this.isContainerConfig(this._getConfig(id));\n  }\n\n  public isContainerConfig(conf: ComponentConfig|undefined): conf is ContainerConfig {\n    return conf?.type === '_container';\n  }\n\n  /**\n   * Test whether a given component id is used within the hierarchy of a container\n   */\n  public isUsed(id: string) {\n    return !!this.findParent(id);\n  }\n\n  public findParent(id: string): ContainerConfig | undefined {\n    return this.getAllConfig()\n      .find(item => this.isContainerConfig(item) && item.items.includes(id)) as ContainerConfig | undefined;\n  }\n\n  public updateConfig(value: ComponentConfig | ComponentConfig[]) {\n    //console.log('update config', this._getConfig(value.id));\n    //console.log('new config', value);\n    if(!Array.isArray(value)) value = [value];\n    this.store.update(\n      ...value.map(v => {\n        if(!this._getConfig(v.id)){\n          return addEntities(v)\n        }\n        return updateEntities([v.id], () => v)}\n      )\n    );\n  }\n\n  public removeConfig(id: string) {\n    this.store.update(deleteEntities(id));\n  }\n\n  public generateId(type: string) {\n    let idx = 1;\n    let root = type.startsWith(\"_\")? type.slice(1) : type;\n    const tokens = type.split(\"-\");\n    if(tokens[tokens.length-1].match(/\\d+/)) {\n      idx = +tokens[tokens.length-1];\n      root = tokens.slice(0, tokens.length-1).join('-');\n    }\n    let id = root;\n    do {\n      id = `${root}-${idx++}`;\n    } while (this._getConfig(id) || id === type);\n    return id;\n  }\n\n  public canUndo$(){\n    return this.historyState.hasPast$;\n  }\n\n  public canRedo$(){\n    return this.historyState.hasFuture$;\n  }\n\n  public undo() {\n    this.historyState.undo();\n  }\n\n  public redo() {\n    this.historyState.redo();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configurable.html":{"url":"interfaces/Configurable.html","title":"interface - Configurable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Configurable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurable/configurable.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            conditionsData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dataIndex\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            parentId\n                                        \n                                \n                                \n                                        \n                                            removeEdited\n                                        \n                                \n                                \n                                        \n                                            removeSelected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templates\n                                        \n                                \n                                \n                                        \n                                            zone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        conditionsData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        conditionsData:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeEdited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeEdited:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeSelected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeSelected:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templates:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { TemplateNameDirective } from '../utils';\nimport {ConfigurableDirective} from './configurable.directive';\n\nexport interface Configurable {\n  id: string;\n  parentId: string;\n  zone: string;\n  templates?: Record;\n  data?: any;\n  dataIndex?: number;\n  conditionsData?: Record;\n  removeEdited: () => void;\n  removeSelected: () => void;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurableService {\n  private _hoveredId?: string;\n\n  /** \n   * currently edited element'id.\n   * \n   * Can be undefined when element is unselected\n   */\n  edited$ = new BehaviorSubject(undefined);\n  \n  // behavior subject as we need to retrieve the previous value to toggle it\n  editorEnabled$ = new BehaviorSubject(false);\n  \n  // previous edited element\n  previousConfigurableElement?: Configurable;\n  \n  // configurable service must subscribe to store'changes events (config service)\n  configurableDirectiveMap: Map = new Map();\n\n  set hoveredId(id: string | undefined) {\n    this._hoveredId = id;\n  }\n  get hoveredId(): string | undefined {\n    return this._hoveredId;\n  }\n\n  mouseoverConfigurable(configurable: Configurable) {\n    if (this._hoveredId === undefined) {\n      this._hoveredId = configurable.id;\n    }\n  }\n\n  mouseenterConfigurable(configurable: Configurable) {\n    if (configurable.id !== this.hoveredId) {\n      this._hoveredId = configurable.id;\n    }\n  }\n\n  mouseleaveConfigurable(configurable: Configurable) {\n    this._hoveredId = undefined;\n  }\n\n  clickConfigurable(configurable: Configurable) {\n    if (!this.previousConfigurableElement) {\n      // previous is undefined\n      this.previousConfigurableElement = configurable;\n    }\n    else if (this.previousConfigurableElement.id !== configurable.id\n      || (this.previousConfigurableElement.id === configurable.id && this.previousConfigurableElement.zone !== configurable.zone)) {\n      // previous element exist and his id don't match with the new configurable element\n            \n      this.previousConfigurableElement.removeEdited();\n      this.previousConfigurableElement.removeSelected();\n      this.previousConfigurableElement = configurable;\n    }\n    else if (this.previousConfigurableElement.id === configurable.id && this.previousConfigurableElement.zone === configurable.zone) {\n      // same id and same zone\n      this.previousConfigurableElement = undefined;\n      this.edited$.next(undefined);\n      return;\n    }\n    \n    this.edited$.next(configurable);\n  }\n\n  stopEditing() {\n    this.previousConfigurableElement?.removeEdited();\n    this.previousConfigurableElement?.removeSelected();\n    this.previousConfigurableElement = undefined;\n    this.edited$.next(undefined);\n  }\n\n  watchEdited(): Observable {\n    return this.edited$.pipe(filter(this.isConfigurable));\n  }\n\n  isConfigurable = (configurable: Configurable | undefined): configurable is Configurable => {\n    return !!configurable;\n  }\n  \n  toggleEditor() {\n    const enabled = !this.editorEnabled$.value;\n    this.editorEnabled$.next(enabled);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ConfigurableDirective.html":{"url":"directives/ConfigurableDirective.html","title":"directive - ConfigurableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ConfigurableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurable/configurable.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Configurable\n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uib-configurable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nativeElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addHighlight\n                            \n                            \n                                click\n                            \n                            \n                                highlight\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mousenter\n                            \n                            \n                                mouseover\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeEdited\n                            \n                            \n                                removeHighlight\n                            \n                            \n                                removeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionsData\n                            \n                            \n                                data\n                            \n                            \n                                dataIndex\n                            \n                            \n                                id\n                            \n                            \n                                parentId\n                            \n                            \n                                templates\n                            \n                            \n                                uib-disable-if\n                            \n                            \n                                zone\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mouseover\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _class\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configurableService: ConfigurableService, el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurable/configurable.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditionsData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templates\n                    \n                \n                \n                    \n                        Type :         Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uib-disable-if\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zone\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:19\n                            \n                        \n            \n        \n\n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.directive.ts:42\n                        \n                    \n\n\n        \n    \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:66\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:54\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:60\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:48\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addHighlight\n                        \n                    \n                \n            \n            \n                \naddHighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlight\n                        \n                    \n                \n            \n            \n                \nhighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseleave\n                        \n                    \n                \n            \n            \n                \nmouseleave(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mousenter\n                        \n                    \n                \n            \n            \n                \nmousenter(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseover\n                        \n                    \n                \n            \n            \n                \nmouseover(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseover', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEdited\n                        \n                    \n                \n            \n            \n                \nremoveEdited()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeHighlight\n                        \n                    \n                \n            \n            \n                \nremoveHighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nativeElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.directive.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _class\n                    \n                \n\n                \n                    \n                        get_class()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:42\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport { TemplateNameDirective } from '../utils';\n\nimport { Configurable, ConfigurableService } from './configurable.service';\n\n@Directive({\n  selector: '[uib-configurable]',\n})\nexport class ConfigurableDirective implements Configurable, OnInit {\n  @Input() id: string;\n  @Input() zone: string;\n  @Input() parentId: string;\n  @Input() templates?: Record;\n  @Input() data?: any;\n  @Input() dataIndex?: number;\n  @Input() conditionsData?: Record;\n  @Input(\"uib-disable-if\") disableIf?: any;\n  \n  nativeElement: HTMLElement;\n\n  constructor(\n    private configurableService: ConfigurableService,\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.nativeElement = this.el.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.configurableService.configurableDirectiveMap.set(this.id, this);\n  }\n\n  @HostBinding('class')\n  get _class() {\n    if(this.disableIf) return '';\n    return `uib-configurable ${this.highlight() ? 'highlight' : ''}`;\n  }\n\n  @HostListener('mouseover', ['$event'])\n  mouseover(event: MouseEvent) {\n    if(this.disableIf) return;\n    this.configurableService.mouseoverConfigurable(this);\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  mousenter(event: MouseEvent) {\n    if(this.disableIf) return;\n    this.configurableService.mouseenterConfigurable(this);\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  mouseleave(event: MouseEvent) {\n    if(this.disableIf) return;\n    this.configurableService.mouseleaveConfigurable(this);\n  }\n\n  @HostListener('click', ['$event'])\n  click(event: MouseEvent) {\n    if(this.disableIf) return;\n    event.stopPropagation();\n    \n    // before to set 'edited' class to current element\n    // send it to configurableService to update the previous element and call it's removeEdited() method\n    this.configurableService.clickConfigurable(this);\n    \n    // now, previous 'edited' class should be correct,\n    // we can safely set the 'edited' class to the current element\n    if (this.el.nativeElement.classList.contains('edited')) {\n      this.removeEdited();\n      this.removeSelected();\n    } else {\n      if (this.zone) {\n        const el = this.configurableService.configurableDirectiveMap.get(this.zone);\n        el?.nativeElement.setAttribute(\"selected\",\"\")\n      }\n  \n      this.renderer.addClass(this.el.nativeElement, 'edited');\n    }\n  }\n  \n  removeEdited() {\n    this.renderer.removeClass(this.el.nativeElement, 'edited');\n  }\n  \n  removeSelected() {\n    if (this.zone) {\n      const el = this.configurableService.configurableDirectiveMap.get(this.zone);\n      el?.nativeElement.removeAttribute(\"selected\");\n    }\n  }\n  \n  removeHighlight() {\n    this.renderer.removeClass(this.el.nativeElement, 'highlight');\n  }\n  \n  addHighlight() {\n    this.renderer.addClass(this.el.nativeElement, 'highlight');\n  }\n\n  highlight() {\n    return this.id === this.configurableService.hoveredId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigurableModule.html":{"url":"modules/ConfigurableModule.html","title":"module - ConfigurableModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigurableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigurableModule\n\n\n\ncluster_ConfigurableModule_exports\n\n\n\ncluster_ConfigurableModule_declarations\n\n\n\n\nConfigurableDirective\n\nConfigurableDirective\n\n\n\nConfigurableModule\n\nConfigurableModule\n\nConfigurableModule -->\n\nConfigurableDirective->ConfigurableModule\n\n\n\n\n\nConfigurableDirective \n\nConfigurableDirective \n\nConfigurableDirective  -->\n\nConfigurableModule->ConfigurableDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/configurable/configurable.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfigurableDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigurableDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\n\nimport { ConfigurableDirective } from \"./configurable.directive\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        ConfigurableDirective\n    ],\n    exports: [\n        ConfigurableDirective\n    ]\n})\nexport class ConfigurableModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigurableService.html":{"url":"injectables/ConfigurableService.html","title":"injectable - ConfigurableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigurableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurable/configurable.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _hoveredId\n                            \n                            \n                                configurableDirectiveMap\n                            \n                            \n                                edited$\n                            \n                            \n                                editorEnabled$\n                            \n                            \n                                isConfigurable\n                            \n                            \n                                    Optional\n                                previousConfigurableElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickConfigurable\n                            \n                            \n                                mouseenterConfigurable\n                            \n                            \n                                mouseleaveConfigurable\n                            \n                            \n                                mouseoverConfigurable\n                            \n                            \n                                stopEditing\n                            \n                            \n                                toggleEditor\n                            \n                            \n                                watchEdited\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hoveredId\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickConfigurable\n                        \n                    \n                \n            \n            \n                \nclickConfigurable(configurable: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurable\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseenterConfigurable\n                        \n                    \n                \n            \n            \n                \nmouseenterConfigurable(configurable: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurable\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseleaveConfigurable\n                        \n                    \n                \n            \n            \n                \nmouseleaveConfigurable(configurable: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurable\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseoverConfigurable\n                        \n                    \n                \n            \n            \n                \nmouseoverConfigurable(configurable: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurable\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopEditing\n                        \n                    \n                \n            \n            \n                \nstopEditing()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditor\n                        \n                    \n                \n            \n            \n                \ntoggleEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchEdited\n                        \n                    \n                \n            \n            \n                \nwatchEdited()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _hoveredId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurableDirectiveMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edited$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:28\n                        \n                    \n\n            \n                \n                    currently edited element'id.\nCan be undefined when element is unselected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorEnabled$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isConfigurable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        previousConfigurableElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Configurable\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hoveredId\n                    \n                \n\n                \n                    \n                        gethoveredId()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurable/configurable.service.ts:42\n                                \n                            \n\n                \n                    \n                        sethoveredId(id: string | undefined)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurable/configurable.service.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                        string | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { TemplateNameDirective } from '../utils';\nimport {ConfigurableDirective} from './configurable.directive';\n\nexport interface Configurable {\n  id: string;\n  parentId: string;\n  zone: string;\n  templates?: Record;\n  data?: any;\n  dataIndex?: number;\n  conditionsData?: Record;\n  removeEdited: () => void;\n  removeSelected: () => void;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurableService {\n  private _hoveredId?: string;\n\n  /** \n   * currently edited element'id.\n   * \n   * Can be undefined when element is unselected\n   */\n  edited$ = new BehaviorSubject(undefined);\n  \n  // behavior subject as we need to retrieve the previous value to toggle it\n  editorEnabled$ = new BehaviorSubject(false);\n  \n  // previous edited element\n  previousConfigurableElement?: Configurable;\n  \n  // configurable service must subscribe to store'changes events (config service)\n  configurableDirectiveMap: Map = new Map();\n\n  set hoveredId(id: string | undefined) {\n    this._hoveredId = id;\n  }\n  get hoveredId(): string | undefined {\n    return this._hoveredId;\n  }\n\n  mouseoverConfigurable(configurable: Configurable) {\n    if (this._hoveredId === undefined) {\n      this._hoveredId = configurable.id;\n    }\n  }\n\n  mouseenterConfigurable(configurable: Configurable) {\n    if (configurable.id !== this.hoveredId) {\n      this._hoveredId = configurable.id;\n    }\n  }\n\n  mouseleaveConfigurable(configurable: Configurable) {\n    this._hoveredId = undefined;\n  }\n\n  clickConfigurable(configurable: Configurable) {\n    if (!this.previousConfigurableElement) {\n      // previous is undefined\n      this.previousConfigurableElement = configurable;\n    }\n    else if (this.previousConfigurableElement.id !== configurable.id\n      || (this.previousConfigurableElement.id === configurable.id && this.previousConfigurableElement.zone !== configurable.zone)) {\n      // previous element exist and his id don't match with the new configurable element\n            \n      this.previousConfigurableElement.removeEdited();\n      this.previousConfigurableElement.removeSelected();\n      this.previousConfigurableElement = configurable;\n    }\n    else if (this.previousConfigurableElement.id === configurable.id && this.previousConfigurableElement.zone === configurable.zone) {\n      // same id and same zone\n      this.previousConfigurableElement = undefined;\n      this.edited$.next(undefined);\n      return;\n    }\n    \n    this.edited$.next(configurable);\n  }\n\n  stopEditing() {\n    this.previousConfigurableElement?.removeEdited();\n    this.previousConfigurableElement?.removeSelected();\n    this.previousConfigurableElement = undefined;\n    this.edited$.next(undefined);\n  }\n\n  watchEdited(): Observable {\n    return this.edited$.pipe(filter(this.isConfigurable));\n  }\n\n  isConfigurable = (configurable: Configurable | undefined): configurable is Configurable => {\n    return !!configurable;\n  }\n  \n  toggleEditor() {\n    const enabled = !this.editorEnabled$.value;\n    this.editorEnabled$.next(enabled);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfiguratorComponent.html":{"url":"components/ConfiguratorComponent.html","title":"component - ConfiguratorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfiguratorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/configurator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-configurator\n            \n\n            \n                styleUrls\n                ./configurator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configurator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _showTree\n                            \n                            \n                                children\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                configurableService\n                            \n                            \n                                configuration\n                            \n                            \n                                configurators\n                            \n                            \n                                edited$\n                            \n                            \n                                ltr\n                            \n                            \n                                offcanvas\n                            \n                            \n                                offcanvasBodyEl\n                            \n                            \n                                offcanvasEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                duplicate\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                resolveOptions\n                            \n                            \n                                showTree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                zoneOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, configurableService: ConfigurableService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/configurator.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ConfiguratorOptions\n\n                    \n                \n                \n                    \n                        Default value : defaultConfiguratorOptions\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/configurator.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoneOptions\n                    \n                \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/configurator.component.ts:51\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        duplicate\n                        \n                    \n                \n            \n            \n                \nduplicate(context: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:114\n                \n            \n\n\n            \n                \n                    Extract list of configuration editors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:101\n                \n            \n\n\n            \n                \n                    Create Bootstrap OffCanvas component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(context: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:137\n                \n            \n\n\n            \n                \n                    It removes the item from the parent container.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveOptions\n                        \n                    \n                \n            \n            \n                \nresolveOptions(zone: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTree\n                        \n                    \n                \n            \n            \n                \nshowTree(showTree)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    showTree\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _showTree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(TemplateNameDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configurableService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigurableService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurators\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edited$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ltr\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offcanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Offcanvas\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offcanvasBodyEl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('offcanvasBody')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offcanvasEl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('offcanvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  OnInit,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { Offcanvas } from 'bootstrap';\nimport { switchMap, map, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Configurable, ConfigurableService } from '../configurable/configurable.service';\nimport { ComponentConfig, ConfigService, ContainerConfig } from '../configuration/config.service';\nimport { Mutable } from '../utils/types.helpers';\nimport { TemplateNameDirective } from '../utils/template-name.directive';\nimport { defaultPaletteOptions } from './palette/palette.component';\nimport { ConfiguratorContext, ConfiguratorOptions } from './configurator.models';\n\nexport const defaultConfiguratorOptions: ConfiguratorOptions = {\n  paletteOptions: defaultPaletteOptions,\n  showFlexEditor: true,\n  showHtmlEditor: true,\n  showCssClasses: true,\n  showSpacingEditor: true,\n  showConditionalDisplay: true,\n  showRemove: true,\n  showDuplicate: true\n}\n\n@Component({\n  selector: 'uib-configurator',\n  templateUrl: './configurator.component.html',\n  styleUrls:['./configurator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorComponent implements OnInit {\n  // Capture configurator templates\n  @ContentChildren(TemplateNameDirective)\n  children: QueryList;\n  configurators: Record = {};\n\n  @ViewChild('offcanvas') offcanvasEl: ElementRef;\n  offcanvas: Offcanvas;\n\n  @ViewChild('offcanvasBody') offcanvasBodyEl: ElementRef;\n\n  @Input() options = defaultConfiguratorOptions;\n  @Input() zoneOptions: Record = {};\n\n  edited$: Observable;\n\n  configuration: ComponentConfig[] = [];\n\n  _showTree: boolean;\n  ltr = false;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public configurableService: ConfigurableService,\n    public configService: ConfigService\n  ) {}\n\n  ngOnInit(): void {\n\n    this.edited$ = this.configurableService.watchEdited().pipe(\n      tap(() => this.offcanvas.show()),\n      tap(() => this.showTree(false)),\n      switchMap((context) =>\n        this.configService.watchConfig(context!.id).pipe(\n          map(config => ({\n            context,\n            config,\n            options: this.resolveOptions(context.zone),\n            configurators: this.configurators,\n            configChanged: () => this.configService.updateConfig(config)\n          }))\n        )\n      )\n    );\n\n    // subscribe to configuration events\n    this.configService.watchAllConfig().subscribe(config => {\n      this.configuration = config!;\n      this.cdr.markForCheck();\n    });\n\n    // when edition is disabled, close side panel\n    this.configurableService.editorEnabled$.subscribe(value => {\n      if (value === false && this.offcanvas) {\n        this.offcanvas.hide();\n      }\n    });\n  }\n\n  /**\n   * Create Bootstrap OffCanvas component\n   */\n  ngAfterViewInit() {\n    this.offcanvas = Offcanvas.getOrCreateInstance(this.offcanvasEl.nativeElement, {\n      backdrop: false,\n      scroll: true\n    });\n    this.offcanvasEl.nativeElement.addEventListener('hide.bs.offcanvas', _ => {\n      this.configurableService.stopEditing();\n    });\n  }\n\n  /**\n   * Extract list of configuration editors\n   */\n  ngAfterContentInit() {\n    this.children.forEach(\n      tpl => (this.configurators[tpl.templateName] = tpl)\n    );\n  }\n\n  showTree(showTree = true) {\n    this._showTree = showTree;\n    this.offcanvasBodyEl.nativeElement.scroll(0, 0);\n  }\n\n  resolveOptions(zone: string) {\n    // First set defaults, then the configurator options, then zone-specific options\n    const options = Object.assign({}, defaultConfiguratorOptions, this.options, this.zoneOptions[zone] || {});\n    // Same thing for the nested palette options\n    options.paletteOptions = Object.assign({}, defaultPaletteOptions, this.options.paletteOptions, this.zoneOptions[zone]?.paletteOptions || {});\n    return options;\n  }\n\n  /**\n   * It removes the item from the parent container.\n   * @param {Event} event - Event\n   */\n  remove(context: Configurable) {\n    // only uib-zone cannot self remove\n    if (context.parentId) {\n      const container = this.configService.getContainer(context.parentId);\n      const index = container.items.findIndex(item => item === context.id);\n      if (index !== -1) {\n        container.items.splice(index, 1);\n        this.configService.updateConfig([container]);\n        this.offcanvas.toggle();\n      }\n    }\n  }\n\n  duplicate(context: Configurable) {\n    const config: Mutable = this.configService.getConfig(context.id);\n    config.id = this.configService.generateId(config.id); // Generate a new config id\n    if(context.parentId) {\n      const container = this.configService.getContainer(context.parentId);\n      const index = container.items.findIndex(item => item === context.id);\n      if (index !== -1) {\n        container.items.splice(index+1, 0, config.id);\n        this.configService.updateConfig([config, container]);\n      }\n    }\n    // Special case of a zone\n    else if(context.zone === context.id) {\n      // Create another copy\n      const config2: Mutable = this.configService.getConfig(context.id);\n      config2.id = this.configService.generateId(config.id);\n\n      const container: ContainerConfig = {\n        id: context.id,\n        type: '_container',\n        items: [config.id, config2.id],\n        classes: \"flex-column\",\n      };\n\n      this.configService.updateConfig([config, config2, container]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{edited.config.id}}\n      \n      (Type: {{edited.context.templates?.[edited.config.type]?.display || edited.config.type}})\n    \n    Configuration Tree\n\n    \n      \n    \n    \n      \n    \n    \n  \n\n  \n\n    \n      \n      \n        {{description}}\n        \n      \n\n      \n      \n\n      \n        \n          Component palette\n          \n          \n        \n\n        \n          Layout\n          \n        \n      \n\n      \n      \n\n      \n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        Conditional display\n        \n      \n\n      \n        \n          Remove\n        \n        \n          Duplicate\n        \n      \n    \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./configurator.component.scss\n                \n                .offcanvas-body {\n  padding-bottom: 90px; /* avoid toolbar hiding bottom of configurator */\n}\n\n.ltr > svg-icon {\n  transform: rotate(180deg) translateY(-4px);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{edited.config.id}}            (Type: {{edited.context.templates?.[edited.config.type]?.display || edited.config.type}})        Configuration Tree                                                            {{description}}                                                  Component palette                                              Layout                                                                                                                    Conditional display                                      Remove                          Duplicate                        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfiguratorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfiguratorContext.html":{"url":"interfaces/ConfiguratorContext.html","title":"interface - ConfiguratorContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfiguratorContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/configurator.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            configChanged\n                                        \n                                \n                                \n                                        \n                                            configurators\n                                        \n                                \n                                \n                                        \n                                            context\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         ComponentConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object storing the configuration of the component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configChanged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configChanged:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback that the configurator should call to update the configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configurators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configurators:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Register of all the components configurators\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         Configurable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configurable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Context of the zone of the edited component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ConfiguratorOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfiguratorOptions\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Options of the configurators (may change depending on zone)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Configurable } from \"../configurable\";\nimport { ComponentConfig } from \"../configuration\";\nimport { TemplateNameDirective } from \"../utils\";\n\nexport interface ConfiguratorOptions {\n  paletteOptions?: PaletteOptions;\n  showFlexEditor?: boolean;\n  showHtmlEditor?: boolean;\n  showCssClasses?: boolean;\n  showSpacingEditor?: boolean;\n  showConditionalDisplay?: boolean;\n  showRemove?: boolean;\n  showDuplicate?: boolean;\n}\n\nexport interface PaletteOptions {\n  enableSubcontainers?: boolean;\n  enableRawHtml?: boolean;\n  rawHtmlPlaceholder?: string;\n  showStandardPalette?: boolean;\n  showExistingPalette?: boolean;\n}\n\nexport interface ConfiguratorContext {\n  /** Object storing the configuration of the component */\n  config: ComponentConfig;\n  /** Options of the configurators (may change depending on zone) */\n  options: ConfiguratorOptions;\n  /** Register of all the components configurators  */\n  configurators: Record;\n  /** Context of the zone of the edited component */\n  context: Configurable;\n  /** Callback that the configurator should call to update the configuration */\n  configChanged: () => void;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfiguratorModule.html":{"url":"modules/ConfiguratorModule.html","title":"module - ConfiguratorModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfiguratorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfiguratorModule\n\n\n\ncluster_ConfiguratorModule_exports\n\n\n\ncluster_ConfiguratorModule_imports\n\n\n\ncluster_ConfiguratorModule_declarations\n\n\n\n\nClassEditorComponent\n\nClassEditorComponent\n\n\n\nConfiguratorModule\n\nConfiguratorModule\n\nConfiguratorModule -->\n\nClassEditorComponent->ConfiguratorModule\n\n\n\n\n\nConditionEditorComponent\n\nConditionEditorComponent\n\nConfiguratorModule -->\n\nConditionEditorComponent->ConfiguratorModule\n\n\n\n\n\nConfiguratorComponent\n\nConfiguratorComponent\n\nConfiguratorModule -->\n\nConfiguratorComponent->ConfiguratorModule\n\n\n\n\n\nFlexEditorComponent\n\nFlexEditorComponent\n\nConfiguratorModule -->\n\nFlexEditorComponent->ConfiguratorModule\n\n\n\n\n\nHtmlEditorComponent\n\nHtmlEditorComponent\n\nConfiguratorModule -->\n\nHtmlEditorComponent->ConfiguratorModule\n\n\n\n\n\nPaletteComponent\n\nPaletteComponent\n\nConfiguratorModule -->\n\nPaletteComponent->ConfiguratorModule\n\n\n\n\n\nSpacingEditorComponent\n\nSpacingEditorComponent\n\nConfiguratorModule -->\n\nSpacingEditorComponent->ConfiguratorModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nConfiguratorModule -->\n\nToolbarComponent->ConfiguratorModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nConfiguratorModule -->\n\nTreeComponent->ConfiguratorModule\n\n\n\n\n\nConfiguratorComponent \n\nConfiguratorComponent \n\nConfiguratorComponent  -->\n\nConfiguratorModule->ConfiguratorComponent \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nConfiguratorModule->ToolbarComponent \n\n\n\n\n\nUtilsModule \n\nUtilsModule \n\nUtilsModule  -->\n\nConfiguratorModule->UtilsModule \n\n\n\n\n\nSvgIconsModule\n\nSvgIconsModule\n\nConfiguratorModule -->\n\nSvgIconsModule->ConfiguratorModule\n\n\n\n\n\nUtilsModule\n\nUtilsModule\n\nConfiguratorModule -->\n\nUtilsModule->ConfiguratorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/configurator/configurator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassEditorComponent\n                        \n                        \n                            ConditionEditorComponent\n                        \n                        \n                            ConfiguratorComponent\n                        \n                        \n                            FlexEditorComponent\n                        \n                        \n                            HtmlEditorComponent\n                        \n                        \n                            PaletteComponent\n                        \n                        \n                            SpacingEditorComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TreeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SvgIconsModule\n                        \n                        \n                            UtilsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfiguratorComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            UtilsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DndModule } from 'ngx-drag-drop';\nimport { icons } from '../svg/svg-icons';\nimport { SvgIconsModule } from '../utils/svg-icon/svg-icon.module';\nimport { UtilsModule } from '../utils/utils.module';\nimport { ClassEditorComponent, ConditionEditorComponent, FlexEditorComponent, HtmlEditorComponent, SpacingEditorComponent } from './editors';\nimport { ConfiguratorComponent } from './configurator.component';\nimport { PaletteComponent } from './palette/palette.component';\nimport { ToolbarComponent } from './toolbar.component';\nimport { TreeComponent } from './tree/tree.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilsModule, DndModule, SvgIconsModule.forRoot(({icons}))\n  ],\n  declarations: [\n    ConfiguratorComponent,\n    ClassEditorComponent,\n    PaletteComponent,\n    HtmlEditorComponent,\n    ToolbarComponent,\n    TreeComponent,\n    FlexEditorComponent,\n    ConditionEditorComponent,\n    SpacingEditorComponent\n  ],\n  exports: [\n    UtilsModule,\n    ConfiguratorComponent,\n    ToolbarComponent\n  ],\n})\nexport class ConfiguratorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfiguratorOptions.html":{"url":"interfaces/ConfiguratorOptions.html","title":"interface - ConfiguratorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfiguratorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/configurator.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            paletteOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showConditionalDisplay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showCssClasses\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showDuplicate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showFlexEditor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showHtmlEditor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showRemove\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showSpacingEditor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        paletteOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paletteOptions:         PaletteOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaletteOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showConditionalDisplay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showConditionalDisplay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCssClasses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCssClasses:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showFlexEditor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showFlexEditor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showHtmlEditor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showHtmlEditor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showRemove\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showRemove:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showSpacingEditor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showSpacingEditor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Configurable } from \"../configurable\";\nimport { ComponentConfig } from \"../configuration\";\nimport { TemplateNameDirective } from \"../utils\";\n\nexport interface ConfiguratorOptions {\n  paletteOptions?: PaletteOptions;\n  showFlexEditor?: boolean;\n  showHtmlEditor?: boolean;\n  showCssClasses?: boolean;\n  showSpacingEditor?: boolean;\n  showConditionalDisplay?: boolean;\n  showRemove?: boolean;\n  showDuplicate?: boolean;\n}\n\nexport interface PaletteOptions {\n  enableSubcontainers?: boolean;\n  enableRawHtml?: boolean;\n  rawHtmlPlaceholder?: string;\n  showStandardPalette?: boolean;\n  showExistingPalette?: boolean;\n}\n\nexport interface ConfiguratorContext {\n  /** Object storing the configuration of the component */\n  config: ComponentConfig;\n  /** Options of the configurators (may change depending on zone) */\n  options: ConfiguratorOptions;\n  /** Register of all the components configurators  */\n  configurators: Record;\n  /** Context of the zone of the edited component */\n  context: Configurable;\n  /** Callback that the configurator should call to update the configuration */\n  configChanged: () => void;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainerConfig.html":{"url":"interfaces/ContainerConfig.html","title":"interface - ContainerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContainerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/config.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createState, Store } from '@ngneat/elf';\nimport {\n  withEntities,\n  getEntity,\n  addEntities,\n  updateEntities,\n  selectEntity,\n  selectAllEntities,\n  getAllEntities,\n  deleteEntities,\n  deleteAllEntities,\n} from '@ngneat/elf-entities';\nimport { stateHistory } from '@ngneat/elf-state-history';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Condition } from '../conditions';\n\nexport interface ComponentConfig {\n  readonly id: string;\n  type: string;\n  classes?: string;\n  [key: string]: any;\n  condition?: Condition;\n}\n\nexport interface ContainerConfig extends ComponentConfig {\n  type: '_container';\n  items: string[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigService {\n  store: Store;\n  historyState: any;\n\n  init(initialValue: ComponentConfig[]) {\n    const { state, config } = createState(\n      withEntities({ initialValue })\n    );\n    this.store = new Store({ name: 'config', state, config });\n    this.historyState = stateHistory(this.store, { maxAge: Infinity });\n    this.store.subscribe(console.log);\n  }\n\n  set(config: ComponentConfig[]) {\n    this.store.update(\n      deleteAllEntities(),\n      addEntities(config)\n    );\n  }\n\n  public watchAllConfig(): Observable {\n    return this.store.pipe(selectAllEntities());\n  }\n\n  public getAllConfig(): ComponentConfig[] {\n    return this.store.query(getAllEntities());\n  }\n\n  public watchConfig(id: string): Observable {\n    //console.log('watch:', id);\n    this.getConfig(id); // Ensure a value exists (if 'id' has no config)\n    return this.store.pipe(\n      selectEntity(id),\n      filter(config => config !== undefined),\n      //tap((config) => console.log('change:', config)),\n      map((config) => JSON.parse(JSON.stringify(config)))\n    );\n  }\n\n  private _getConfig(id: string): ComponentConfig | undefined {\n    return this.store.query(getEntity(id));\n  }\n\n  public getConfig(id: string): ComponentConfig {\n    let config = this._getConfig(id);\n    if (!config) {\n      config = { id, type: id };\n      this.historyState.pause();\n      this.store.update(addEntities(config));\n      this.historyState.resume();\n    }\n    return JSON.parse(JSON.stringify(config)); // Deep copy\n  }\n\n  public getContainer(id: string): ContainerConfig {\n    const config = this.getConfig(id);\n    if (!this.isContainerConfig(config)) {\n      throw `${id} is not a container`;\n    }\n    return config;\n  }\n\n  public isContainer(id: string): boolean {\n    return this.isContainerConfig(this._getConfig(id));\n  }\n\n  public isContainerConfig(conf: ComponentConfig|undefined): conf is ContainerConfig {\n    return conf?.type === '_container';\n  }\n\n  /**\n   * Test whether a given component id is used within the hierarchy of a container\n   */\n  public isUsed(id: string) {\n    return !!this.findParent(id);\n  }\n\n  public findParent(id: string): ContainerConfig | undefined {\n    return this.getAllConfig()\n      .find(item => this.isContainerConfig(item) && item.items.includes(id)) as ContainerConfig | undefined;\n  }\n\n  public updateConfig(value: ComponentConfig | ComponentConfig[]) {\n    //console.log('update config', this._getConfig(value.id));\n    //console.log('new config', value);\n    if(!Array.isArray(value)) value = [value];\n    this.store.update(\n      ...value.map(v => {\n        if(!this._getConfig(v.id)){\n          return addEntities(v)\n        }\n        return updateEntities([v.id], () => v)}\n      )\n    );\n  }\n\n  public removeConfig(id: string) {\n    this.store.update(deleteEntities(id));\n  }\n\n  public generateId(type: string) {\n    let idx = 1;\n    let root = type.startsWith(\"_\")? type.slice(1) : type;\n    const tokens = type.split(\"-\");\n    if(tokens[tokens.length-1].match(/\\d+/)) {\n      idx = +tokens[tokens.length-1];\n      root = tokens.slice(0, tokens.length-1).join('-');\n    }\n    let id = root;\n    do {\n      id = `${root}-${idx++}`;\n    } while (this._getConfig(id) || id === type);\n    return id;\n  }\n\n  public canUndo$(){\n    return this.historyState.hasPast$;\n  }\n\n  public canRedo$(){\n    return this.historyState.hasFuture$;\n  }\n\n  public undo() {\n    this.historyState.undo();\n  }\n\n  public redo() {\n    this.historyState.redo();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainerIndex.html":{"url":"interfaces/ContainerIndex.html","title":"interface - ContainerIndex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContainerIndex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/drag-drop.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ComponentConfig,\n  ConfigService,\n  ContainerConfig,\n} from '../configuration';\nimport { ToastAction, ToastService } from '../utils';\n\nexport interface ContainerIndex {\n  container: string;\n  index: number;\n}\n\nexport interface ComponentCreator {\n  type: string;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropService {\n\n  constructor(\n    public configService: ConfigService,\n    public toastService: ToastService\n  ) {}\n\n  draggedCreator?: ComponentCreator;\n\n  undoAction: ToastAction = {\n    text: $localize `Undo`,\n    hideToast: true,\n    action: () => this.configService.undo()\n  }\n\n  public handleDrop(\n    containerId: string,\n    index: number,\n    dropped: ContainerIndex | string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    // Drop a component from a container to another container\n    if ((dropped as ContainerIndex).container) {\n      dropped = dropped as ContainerIndex;\n      const og = this.configService.getContainer(dropped.container);\n      if (dropped.container === containerId) {\n        this.moveWithin(og, dropped.index, index);\n      } else {\n        this.moveBetween(container, index, og, dropped.index);\n      }\n    }\n    // Drag a component creator (from a palette)\n    else if (this.draggedCreator?.type === dropped) {\n      const newId = this.configService.generateId(dropped);\n      this.draggedCreator\n        .createConfig(newId, this.draggedCreator)\n        .subscribe((config) => this.insertNew(container, index, config));\n    }\n    else {\n      console.error(\"Unexpected dropped item:\", dropped);\n    }\n  }\n\n  public handleCancel(\n    index: number,\n    containerId: string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    const config = container.items.splice(index, 1);\n    this.configService.updateConfig([container]);\n    this.toastService.show(\n      $localize `Component '${config[0]}' removed`,\n      \"warning text-dark\",\n      [this.undoAction]\n    );\n  }\n\n  private insertNew(\n    container: ContainerConfig,\n    index: number,\n    component: ComponentConfig|undefined\n  ) {\n    if(component) {\n      container.items.splice(index, 0, component.id);\n      this.configService.updateConfig([container, component]); // addEntities might be needed\n    }\n  }\n\n  private moveBetween(\n    container: ContainerConfig,\n    index: number,\n    ogContainer: ContainerConfig,\n    ogIndex: number\n  ) {\n    let item = ogContainer.items.splice(ogIndex, 1);\n    container.items.splice(index, 0, item[0]);\n    this.configService.updateConfig([ogContainer, container]);\n  }\n\n  private moveWithin(\n    container: ContainerConfig,\n    oldIndex: number,\n    newIndex: number\n  ) {\n    if (oldIndex !== newIndex && oldIndex !== newIndex - 1) {\n      let item = container.items.splice(oldIndex, 1);\n      if (newIndex > oldIndex) {\n        newIndex--;\n      }\n      container.items.splice(newIndex, 0, item[0]);\n      this.configService.updateConfig(container);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DragDropService.html":{"url":"injectables/DragDropService.html","title":"injectable - DragDropService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DragDropService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/drag-drop.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Optional\n                                draggedCreator\n                            \n                            \n                                    Public\n                                toastService\n                            \n                            \n                                undoAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleCancel\n                            \n                            \n                                    Public\n                                handleDrop\n                            \n                            \n                                    Private\n                                insertNew\n                            \n                            \n                                    Private\n                                moveBetween\n                            \n                            \n                                    Private\n                                moveWithin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleCancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleCancel(index: number, containerId: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    containerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleDrop\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDrop(containerId: string, index: number, dropped: ContainerIndex | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    containerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dropped\n                                    \n                                                ContainerIndex | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertNew\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertNew(container: ContainerConfig, index: number, component: ComponentConfig | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ContainerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                                ComponentConfig | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        moveBetween\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveBetween(container: ContainerConfig, index: number, ogContainer: ContainerConfig, ogIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ContainerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ogContainer\n                                    \n                                                ContainerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ogIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        moveWithin\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveWithin(container: ContainerConfig, oldIndex: number, newIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ContainerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        draggedCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentCreator\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toastService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undoAction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastAction\n\n                    \n                \n                \n                    \n                        Default value : {\n    text: $localize `Undo`,\n    hideToast: true,\n    action: () => this.configService.undo()\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ComponentConfig,\n  ConfigService,\n  ContainerConfig,\n} from '../configuration';\nimport { ToastAction, ToastService } from '../utils';\n\nexport interface ContainerIndex {\n  container: string;\n  index: number;\n}\n\nexport interface ComponentCreator {\n  type: string;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropService {\n\n  constructor(\n    public configService: ConfigService,\n    public toastService: ToastService\n  ) {}\n\n  draggedCreator?: ComponentCreator;\n\n  undoAction: ToastAction = {\n    text: $localize `Undo`,\n    hideToast: true,\n    action: () => this.configService.undo()\n  }\n\n  public handleDrop(\n    containerId: string,\n    index: number,\n    dropped: ContainerIndex | string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    // Drop a component from a container to another container\n    if ((dropped as ContainerIndex).container) {\n      dropped = dropped as ContainerIndex;\n      const og = this.configService.getContainer(dropped.container);\n      if (dropped.container === containerId) {\n        this.moveWithin(og, dropped.index, index);\n      } else {\n        this.moveBetween(container, index, og, dropped.index);\n      }\n    }\n    // Drag a component creator (from a palette)\n    else if (this.draggedCreator?.type === dropped) {\n      const newId = this.configService.generateId(dropped);\n      this.draggedCreator\n        .createConfig(newId, this.draggedCreator)\n        .subscribe((config) => this.insertNew(container, index, config));\n    }\n    else {\n      console.error(\"Unexpected dropped item:\", dropped);\n    }\n  }\n\n  public handleCancel(\n    index: number,\n    containerId: string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    const config = container.items.splice(index, 1);\n    this.configService.updateConfig([container]);\n    this.toastService.show(\n      $localize `Component '${config[0]}' removed`,\n      \"warning text-dark\",\n      [this.undoAction]\n    );\n  }\n\n  private insertNew(\n    container: ContainerConfig,\n    index: number,\n    component: ComponentConfig|undefined\n  ) {\n    if(component) {\n      container.items.splice(index, 0, component.id);\n      this.configService.updateConfig([container, component]); // addEntities might be needed\n    }\n  }\n\n  private moveBetween(\n    container: ContainerConfig,\n    index: number,\n    ogContainer: ContainerConfig,\n    ogIndex: number\n  ) {\n    let item = ogContainer.items.splice(ogIndex, 1);\n    container.items.splice(index, 0, item[0]);\n    this.configService.updateConfig([ogContainer, container]);\n  }\n\n  private moveWithin(\n    container: ContainerConfig,\n    oldIndex: number,\n    newIndex: number\n  ) {\n    if (oldIndex !== newIndex && oldIndex !== newIndex - 1) {\n      let item = container.items.splice(oldIndex, 1);\n      if (newIndex > oldIndex) {\n        newIndex--;\n      }\n      container.items.splice(newIndex, 0, item[0]);\n      this.configService.updateConfig(container);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicViewsModule.html":{"url":"modules/DynamicViewsModule.html","title":"module - DynamicViewsModule","body":"\n                   \n\n\n\n\n    Modules\n    DynamicViewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DynamicViewsModule\n\n\n\ncluster_DynamicViewsModule_declarations\n\n\n\ncluster_DynamicViewsModule_exports\n\n\n\ncluster_DynamicViewsModule_imports\n\n\n\n\nItemComponent\n\nItemComponent\n\n\n\nDynamicViewsModule\n\nDynamicViewsModule\n\nDynamicViewsModule -->\n\nItemComponent->DynamicViewsModule\n\n\n\n\n\nZoneComponent\n\nZoneComponent\n\nDynamicViewsModule -->\n\nZoneComponent->DynamicViewsModule\n\n\n\n\n\nUtilsModule \n\nUtilsModule \n\nUtilsModule  -->\n\nDynamicViewsModule->UtilsModule \n\n\n\n\n\nZoneComponent \n\nZoneComponent \n\nZoneComponent  -->\n\nDynamicViewsModule->ZoneComponent \n\n\n\n\n\nConfigurableModule\n\nConfigurableModule\n\nDynamicViewsModule -->\n\nConfigurableModule->DynamicViewsModule\n\n\n\n\n\nUtilsModule\n\nUtilsModule\n\nDynamicViewsModule -->\n\nUtilsModule->DynamicViewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/dynamic-views.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ItemComponent\n                        \n                        \n                            ZoneComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigurableModule\n                        \n                        \n                            UtilsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UtilsModule\n                        \n                        \n                            ZoneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigurableModule } from '../configurable/configurable.module';\nimport { UtilsModule } from '../utils/utils.module';\nimport { DndModule } from 'ngx-drag-drop';\n\nimport { ZoneComponent } from './zone.component';\nimport { ItemComponent } from './item.component';\n\n@NgModule({\n  imports: [CommonModule, DndModule, ConfigurableModule, UtilsModule],\n  declarations: [ZoneComponent, ItemComponent],\n  exports: [UtilsModule, ZoneComponent],\n})\nexport class DynamicViewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlexEditorComponent.html":{"url":"components/FlexEditorComponent.html","title":"component - FlexEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlexEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/flex-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-flex-editor\n            \n\n            \n                styleUrls\n                ./flex-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                flex-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alignmentHorizontal\n                            \n                            \n                                alignmentVertical\n                            \n                            \n                                classes\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                directions\n                            \n                            \n                                justify\n                            \n                            \n                                placement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                toggleClass\n                            \n                            \n                                updateConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    direction\n                                \n                                \n                                    alignment\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ComponentConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleClass\n                        \n                    \n                \n            \n            \n                \ntoggleClass(style: string, turnOff: FlexOption[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    style\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    turnOff\n                                    \n                                                FlexOption[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConfig\n                        \n                    \n                \n            \n            \n                \nupdateConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alignmentHorizontal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlexOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {key: 'align_y_start', text: $localize `top`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key: 'align_y_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key: 'align_y_end', text: $localize `bottom`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key: 'align_y_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n    {key: 'align_y_baseline', text: $localize `baseline`, value: 'baseline', bootstrap: 'align-items-baseline'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        alignmentVertical\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlexOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key:'align_x_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlexOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {key: 'arrow_down', text: $localize `vertical`, value: 'column', bootstrap: 'flex-column'},\n    {key: 'arrow_forward', text: $localize `horizontal`, value: 'row', bootstrap: 'flex-row'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        justify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlexOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'justify-content-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'justify-content-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'justify-content-end'},\n    {key:'align_x_space_around', text: $localize `space around`, value: 'space-around', bootstrap: 'justify-content-around'},\n    {key:'align_x_space_between', text: $localize `space between`, value: 'space-between', bootstrap: 'justify-content-between'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TooltipPlacement\n\n                    \n                \n                \n                    \n                        Default value : \"bottom\"\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n\n                \n                    \n                        getdirection()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        alignment\n                    \n                \n\n                \n                    \n                        getalignment()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:57\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ComponentConfig, ConfigService } from '../../configuration';\nimport { TooltipPlacement } from '../../utils';\n\ndeclare interface FlexOption {\n  key: string;\n  text: string;\n  value: string;\n  bootstrap: string;\n}\n\n@Component({\n  selector: 'uib-flex-editor',\n  templateUrl: 'flex-editor.component.html',\n  styleUrls: ['./flex-editor.component.scss'],\n})\nexport class FlexEditorComponent implements OnChanges {\n  @Input() config: ComponentConfig;\n  \n  // tooltip's placement\n  placement: TooltipPlacement = \"bottom\";\n  \n  classes: string[];\n\n  get direction(): 'row' | 'column' {\n    return this.classes.includes('flex-column') ? 'column' : 'row';\n  }\n    \n  directions: FlexOption[] = [\n    {key: 'arrow_down', text: $localize `vertical`, value: 'column', bootstrap: 'flex-column'},\n    {key: 'arrow_forward', text: $localize `horizontal`, value: 'row', bootstrap: 'flex-row'}\n  ]\n  \n  justify: FlexOption[] = [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'justify-content-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'justify-content-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'justify-content-end'},\n    {key:'align_x_space_around', text: $localize `space around`, value: 'space-around', bootstrap: 'justify-content-around'},\n    {key:'align_x_space_between', text: $localize `space between`, value: 'space-between', bootstrap: 'justify-content-between'}\n  ]\n  \n  alignmentHorizontal: FlexOption[] = [\n    {key: 'align_y_start', text: $localize `top`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key: 'align_y_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key: 'align_y_end', text: $localize `bottom`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key: 'align_y_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n    {key: 'align_y_baseline', text: $localize `baseline`, value: 'baseline', bootstrap: 'align-items-baseline'},\n  ]\n  \n  alignmentVertical: FlexOption[] = [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key:'align_x_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n  ]\n\n  get alignment(): FlexOption[] {\n    return this.direction === 'column'? this.alignmentVertical : this.alignmentHorizontal;\n  }\n  \n  \n  constructor(\n    public configService: ConfigService\n  ) {}\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.config) {\n      // convert \"classes\" string into array\n      this.classes = this.config.classes?.split(' ') || [];\n    }\n  }\n\n  updateConfig() {\n    this.config.classes = this.classes.join(' ');\n    this.configService.updateConfig(this.config);\n  }\n\n  toggleClass(style: string, turnOff: FlexOption[] = []) {\n    const i = this.classes.indexOf(style);\n    // Remove all classes matching a flex option\n    this.classes = this.classes.filter(c => c !== style && !turnOff.find(o => o.bootstrap === c));\n    // Then add the class, unless it was already there (in which case, the filter turned it off)\n    if(i === -1) {\n      this.classes.push(style);\n    }\n    this.updateConfig();\n  }\n}\n\n    \n\n    \n        \n\n  Direction\n  \n    \n     \n     \n       \n     \n    \n  \n\n\n\n\n  Justify\n  \n    \n      \n      \n        \n              \n    \n  \n\n\n\n\n  Alignment\n  \n  \n    \n      \n      \n        \n      \n    \n  \n\n\n\n  Wrap\n  \n\n\n\n    \n\n    \n                \n                    ./flex-editor.component.scss\n                \n                .editor-line {\n  display: grid;\n  grid-template-columns: 105px 1fr;\n  align-items: center;\n}\n\n/* ================ RADIO BUTTONS ================= */\n\n.radio-group {\n  // --rotate: 90deg;\n  --icon-width: 22px;\n  --icon-height: 25px;\n  --bg-checked: hsl(80, 73%, 75%);\n  --bg-hover: hsl(80, 61%, 50%);\n\n  display: flex;\n  align-items: center;\n  gap: 0.2rem;\n}\n\n.radio-group label {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  > svg {\n    width: var(--icon-width);\n    height: var(--icon-height);\n\n    transform: rotate(var(--rotate, 0deg));\n    transition: transform 0.2s ease-in-out;\n  }\n}\n\n.radio-group input[type='radio'] {\n  display: none;\n}\n\n.radio-group input[type='radio'] + label {\n  cursor: pointer;\n  padding: 0.3rem 0.5rem;\n  border-radius: 4px;\n  border: 1px dashed #ccc;\n  transition: background-color 0.2s ease-in-out, fill 0.2s ease-in-out, color 0.2s ease-in-out;\n}\n\n.radio-group input[type='radio']:checked + label {\n  border: 1px solid #000;\n  background-color: var(--bg-checked);\n}\n\n.radio-group input[type='radio'] + label:hover {\n  color: white;\n  fill: white;\n  background-color: var(--bg-hover);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Direction                                    Justify                                                Alignment                                          Wrap  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'FlexEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlexOption.html":{"url":"interfaces/FlexOption.html","title":"interface - FlexOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FlexOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/editors/flex-editor.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bootstrap\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bootstrap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bootstrap:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ComponentConfig, ConfigService } from '../../configuration';\nimport { TooltipPlacement } from '../../utils';\n\ndeclare interface FlexOption {\n  key: string;\n  text: string;\n  value: string;\n  bootstrap: string;\n}\n\n@Component({\n  selector: 'uib-flex-editor',\n  templateUrl: 'flex-editor.component.html',\n  styleUrls: ['./flex-editor.component.scss'],\n})\nexport class FlexEditorComponent implements OnChanges {\n  @Input() config: ComponentConfig;\n  \n  // tooltip's placement\n  placement: TooltipPlacement = \"bottom\";\n  \n  classes: string[];\n\n  get direction(): 'row' | 'column' {\n    return this.classes.includes('flex-column') ? 'column' : 'row';\n  }\n    \n  directions: FlexOption[] = [\n    {key: 'arrow_down', text: $localize `vertical`, value: 'column', bootstrap: 'flex-column'},\n    {key: 'arrow_forward', text: $localize `horizontal`, value: 'row', bootstrap: 'flex-row'}\n  ]\n  \n  justify: FlexOption[] = [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'justify-content-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'justify-content-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'justify-content-end'},\n    {key:'align_x_space_around', text: $localize `space around`, value: 'space-around', bootstrap: 'justify-content-around'},\n    {key:'align_x_space_between', text: $localize `space between`, value: 'space-between', bootstrap: 'justify-content-between'}\n  ]\n  \n  alignmentHorizontal: FlexOption[] = [\n    {key: 'align_y_start', text: $localize `top`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key: 'align_y_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key: 'align_y_end', text: $localize `bottom`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key: 'align_y_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n    {key: 'align_y_baseline', text: $localize `baseline`, value: 'baseline', bootstrap: 'align-items-baseline'},\n  ]\n  \n  alignmentVertical: FlexOption[] = [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key:'align_x_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n  ]\n\n  get alignment(): FlexOption[] {\n    return this.direction === 'column'? this.alignmentVertical : this.alignmentHorizontal;\n  }\n  \n  \n  constructor(\n    public configService: ConfigService\n  ) {}\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.config) {\n      // convert \"classes\" string into array\n      this.classes = this.config.classes?.split(' ') || [];\n    }\n  }\n\n  updateConfig() {\n    this.config.classes = this.classes.join(' ');\n    this.configService.updateConfig(this.config);\n  }\n\n  toggleClass(style: string, turnOff: FlexOption[] = []) {\n    const i = this.classes.indexOf(style);\n    // Remove all classes matching a flex option\n    this.classes = this.classes.filter(c => c !== style && !turnOff.find(o => o.bootstrap === c));\n    // Then add the class, unless it was already there (in which case, the filter turned it off)\n    if(i === -1) {\n      this.classes.push(style);\n    }\n    this.updateConfig();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HtmlEditorComponent.html":{"url":"components/HtmlEditorComponent.html","title":"component - HtmlEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HtmlEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/html-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-html-editor\n            \n\n\n            \n                styles\n                \ntextarea {\n  font-family: monospace;\n  font-size: 12px !important;\n}\n  \n            \n\n            \n                template\n                Raw HTML:\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n                \n                    \n                        Type :         ConfiguratorContext\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/html-editor.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { ConfiguratorContext } from \"../configurator.models\";\n\n@Component({\n  selector: 'uib-html-editor',\n  template: `\n  Raw HTML:\n  \n  `,\n  styles: [`\ntextarea {\n  font-family: monospace;\n  font-size: 12px !important;\n}\n  `]\n})\nexport class HtmlEditorComponent {\n  @Input() context: ConfiguratorContext;\n\n}\n    \n\n\n    \n            \ntextarea {\n  font-family: monospace;\n  font-size: 12px !important;\n}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Raw HTML:'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'HtmlEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemComponent.html":{"url":"components/ItemComponent.html","title":"component - ItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/dynamic-views/item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [uib-item]\n            \n\n\n\n\n            \n                templateUrl\n                ./item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Optional\n                                classes\n                            \n                            \n                                condition\n                            \n                            \n                                    Public\n                                conditionsService\n                            \n                            \n                                config\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                dragDropService\n                            \n                            \n                                    Public\n                                el\n                            \n                            \n                                isHorizontal\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                horizontal\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDndCanceled\n                            \n                            \n                                onDndDrop\n                            \n                            \n                                updateCondition\n                            \n                            \n                                updateConfig\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionsData\n                            \n                            \n                                configurable\n                            \n                            \n                                data\n                            \n                            \n                                dataIndex\n                            \n                            \n                                templates\n                            \n                            \n                                uib-item\n                            \n                            \n                                zone\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, conditionsService: ConditionsService, dragDropService: DragDropService, cdr: ChangeDetectorRef, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionsService\n                                                  \n                                                        \n                                                                        ConditionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragDropService\n                                                  \n                                                        \n                                                                        DragDropService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditionsData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        configurable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templates\n                    \n                \n                \n                    \n                        Type :         Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uib-item\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zone\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:27\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        horizontal\n                        \n                    \n                \n            \n            \n                \n                    \n                    horizontal()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndCanceled\n                        \n                    \n                \n            \n            \n                \nonDndCanceled(item: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndDrop\n                        \n                    \n                \n            \n            \n                \nonDndDrop(event: DndDropEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            DndDropEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCondition\n                        \n                    \n                \n            \n            \n                \nupdateCondition()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConfig\n                        \n                    \n                \n            \n            \n                \nupdateConfig(config: ComponentConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ComponentConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conditionsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConditionsService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dragDropService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DragDropService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHorizontal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DndDropEvent } from 'ngx-drag-drop';\nimport { Subscription } from 'rxjs';\nimport { ConditionsService } from '../conditions/conditions.service';\nimport { ComponentConfig, ConfigService } from '../configuration/config.service';\nimport { TemplateNameDirective } from '../utils';\nimport { ContainerIndex, DragDropService } from './drag-drop.service';\n\n@Component({\n  selector: '[uib-item]',\n  templateUrl: './item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ItemComponent implements OnInit, OnChanges, OnDestroy {\n  @Input('uib-item') id: string;\n  @Input() zone: string;\n  @Input() data?: any;\n  @Input() dataIndex?: number;\n  @Input() conditionsData?: Record;\n\n  @Input() templates: Record;\n\n  @Input() configurable: boolean = true;\n\n  @HostBinding('class')\n  classes?: string;\n\n  config: ComponentConfig;\n  condition = true;\n\n  subs: Subscription[] = [];\n\n  _data: any;\n\n  isHorizontal: boolean = false;\n\n  constructor(\n    public configService: ConfigService,\n    public conditionsService: ConditionsService,\n    public dragDropService: DragDropService,\n    public cdr: ChangeDetectorRef,\n    public el: ElementRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.data || changes.dataIndex || changes.conditionsData) {\n      this.updateData();\n      this.updateCondition();\n    }\n  }\n\n  ngOnInit() {\n    const configChanges$ = this.configService.watchConfig(this.id).subscribe((config) => this.updateConfig(config));\n    const allConfigChanges$ = this.configService.watchAllConfig().subscribe(() => this.cdr.markForCheck())\n\n    this.subs.push(configChanges$, allConfigChanges$)\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach((s) => s.unsubscribe());\n  }\n\n  updateConfig(config: ComponentConfig) {\n    this.config = config;\n    this.updateCondition();\n    this.classes = this.config.classes;\n    if (config.type === '_container') {\n      this.classes += ' uib-container';\n      if (this.configurable) {\n        this.classes += ' uib-dropzone-content';\n      }\n    }\n    if(!this.condition && !this.configurable) {\n      this.classes += ' d-none'; // hide component unless in edit mode\n    }\n    this.isHorizontal = this.horizontal();\n  }\n\n  updateData() {\n    this._data = typeof this.dataIndex === 'undefined'? this.data : this.data[this.dataIndex];\n  }\n\n  updateCondition() {\n    this.condition = this.conditionsService.check(this.config?.condition, this.conditionsData, this._data);\n  }\n\n  // Drag & Drop\n\n  onDndDrop(event: DndDropEvent) {\n    const dropped: string | ContainerIndex = (typeof event.data === 'string')\n      ? event.data\n      : { container: event.data.container, index: event.data.index }\n\n    if(typeof event.index === 'number') {\n      this.dragDropService.handleDrop(this.id, event.index, dropped);\n    }\n  }\n\n  onDndCanceled(item: string, index: number) {\n    console.log('cancelled', item, this.id);\n    this.dragDropService.handleCancel(index, this.id);\n  }\n\n  private horizontal(): boolean {\n    if(this.config.classes?.includes('flex-column')) {\n      return false;\n    }\n    if (this.config.classes?.includes('d-flex') || this.config.classes?.includes('uib-dropzone') || this.el.nativeElement.style.display === \"flex\") {\n      return true;\n    }\n    return false;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n\n\n\n\n  \n\n    \n\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/utils/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-modal\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        {{title}}\n        \n      \n      \n        \n      \n      \n        Cancel\n        OK\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                    Optional\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onModalClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/modal.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/modal.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/modal.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/modal.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/modal.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/modal.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModalClose\n                        \n                    \n                \n            \n            \n                \nonModalClose(success: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/modal.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    success\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/modal.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Modal\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/modal.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, ViewChild } from \"@angular/core\";\nimport { Modal } from \"bootstrap\";\n\n@Component({\n    selector: 'uib-modal',\n    template: `\n  \n    \n      \n        \n          {{title}}\n          \n        \n        \n          \n        \n        \n          Cancel\n          OK\n        \n      \n    \n  \n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @ViewChild('modal', {static: true}) el: ElementRef;\n  @Input() title: string;\n  @Input() show: boolean;\n  @Output() close = new EventEmitter();\n\n  modal?: Modal;\n\n  ngOnChanges() {\n    if(this.show && !this.modal) {\n      this.modal = Modal.getOrCreateInstance(this.el.nativeElement, {backdrop: false}); // Backdrop causes issues when the modal is embedded in a fixed container\n      this.modal.show();\n    }\n  }\n\n  ngOnDestroy() {\n    this.modal?.dispose();\n  }\n    \n  ngAfterViewInit() {\n    this.el.nativeElement.addEventListener('hidden.bs.modal', () => this.onModalClose(false));\n  }\n  \n  onModalClose(success: boolean) {\n    this.close.next(success);\n    this.modal?.hide();\n    this.modal = undefined;\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                Cancel        OK            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgModelChangeDebouncedDirective.html":{"url":"directives/NgModelChangeDebouncedDirective.html","title":"directive - NgModelChangeDebouncedDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgModelChangeDebouncedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/model-change.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngModelChangeDebounced]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelDebounceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChangeDebounced\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngModel: NgModel)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/model-change.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngModel\n                                                  \n                                                        \n                                                                        NgModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngModelDebounceTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/model-change.directive.ts:8\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChangeDebounced\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/model-change.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/model-change.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/model-change.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/model-change.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterContentInit, Directive, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Directive({ selector: '[ngModelChangeDebounced]' })\nexport class NgModelChangeDebouncedDirective implements OnDestroy, AfterContentInit {\n  @Input() ngModelDebounceTime = 1000;\n  @Output() ngModelChangeDebounced = new EventEmitter()\n  \n  private subs: Subscription;\n\n  constructor(private ngModel: NgModel) {}\n  \n  ngAfterContentInit(): void {\n    this.subs = this.ngModel.update\n    .pipe(\n      distinctUntilChanged(),\n      debounceTime(this.ngModelDebounceTime),\n    )\n    .subscribe((value) => {\n      this.ngModelChangeDebounced.emit(value);\n    });\n  }\n  \n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaletteComponent.html":{"url":"components/PaletteComponent.html","title":"component - PaletteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaletteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/palette/palette.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-palette\n            \n\n            \n                styleUrls\n                ./palette.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./palette.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdRef\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                dragDropService\n                            \n                            \n                                existingPalette\n                            \n                            \n                                    Optional\n                                modal\n                            \n                            \n                                standardPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateAutoPalette\n                            \n                            \n                                generateExistingPalette\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDndEnd\n                            \n                            \n                                onDndStart\n                            \n                            \n                                onModalClose\n                            \n                            \n                                openModal\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configurators\n                            \n                            \n                                context\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dragDropService: DragDropService, configService: ConfigService, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dragDropService\n                                                  \n                                                        \n                                                                        DragDropService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configurators\n                    \n                \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/palette/palette.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n                \n                    \n                        Type :         Configurable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/palette/palette.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         PaletteOptions\n\n                    \n                \n                \n                    \n                        Default value : defaultPaletteOptions\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/palette/palette.component.ts:43\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateAutoPalette\n                        \n                    \n                \n            \n            \n                \ngenerateAutoPalette()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateExistingPalette\n                        \n                    \n                \n            \n            \n                \ngenerateExistingPalette(configs: ComponentConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                ComponentConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndEnd\n                        \n                    \n                \n            \n            \n                \nonDndEnd()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndStart\n                        \n                    \n                \n            \n            \n                \nonDndStart(item: PaletteItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                PaletteItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModalClose\n                        \n                    \n                \n            \n            \n                \nonModalClose(success: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    success\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(id: string, type: string, configurator?: TemplateNameDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configurator\n                                    \n                                                TemplateNameDirective\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(item: PaletteItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                PaletteItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dragDropService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DragDropService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existingPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaletteItem[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigModal\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        standardPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaletteItem[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Configurable } from '../../configurable/configurable.service';\nimport { ComponentConfig, ConfigService } from '../../configuration/config.service';\nimport { ComponentCreator, DragDropService } from '../../dynamic-views/drag-drop.service';\nimport { TemplateNameDirective } from '../../utils';\nimport { PaletteOptions } from '../configurator.models';\n\ndeclare interface PaletteItem extends ComponentCreator {\n  type: string;\n  display?: string;\n  iconClass?: string;\n  title?: string;\n  removeable?: boolean;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\ndeclare interface ConfigModal {\n  configurator: TemplateNameDirective;\n  config: ComponentConfig;\n  configChanged: () => void;\n  title: string;\n  close: Subject;\n}\n\nexport const defaultPaletteOptions: PaletteOptions = {\n  enableSubcontainers: true,\n  enableRawHtml: true,\n  rawHtmlPlaceholder: \"Edit me\",\n  showStandardPalette: true,\n  showExistingPalette: true\n};\n\n@Component({\n  selector: 'uib-palette',\n  templateUrl: './palette.component.html',\n  styleUrls: ['./palette.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaletteComponent implements OnInit, OnChanges {\n  @Input() context: Configurable;\n  @Input() configurators: Record = {};\n  @Input() options = defaultPaletteOptions;\n\n  standardPalette: PaletteItem[];\n  existingPalette: PaletteItem[];\n\n  modal?: ConfigModal;\n\n  constructor(\n    public dragDropService: DragDropService,\n    public configService: ConfigService,\n    public cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    // The palette of existing components is constructed from the complete configuration\n    this.configService.watchAllConfig()\n      .subscribe(configs => {\n        this.generateExistingPalette(configs)\n        this.cdRef.markForCheck();\n      });\n  }\n\n  ngOnChanges() {\n    // Initialize options with default, then custom\n    this.options = Object.assign({}, defaultPaletteOptions, this.options);\n    this.generateAutoPalette();\n    // The existing palette must be update when the standard palette changes\n    this.generateExistingPalette(this.configService.getAllConfig());\n  }\n\n  generateAutoPalette() {\n    this.standardPalette = [];\n    if(!this.options.showStandardPalette) {\n      return;\n    }\n    if (this.options.enableSubcontainers) {\n      this.standardPalette.push({\n        type: '_container',\n        display: $localize `Container`,\n        title: $localize `A component to arrange various sub-components`,\n        createConfig: (id: string) => of({ type: '_container', id, items: [] }),\n      });\n    }\n    if (this.options.enableRawHtml) {\n      this.standardPalette.push({\n        type: '_raw-html',\n        display: $localize `Raw HTML`,\n        title: $localize `A component to write HTML freely`,\n        createConfig: (id: string) => of({ type: '_raw-html', id, rawHtml: this.options.rawHtmlPlaceholder})\n      })\n    }\n    if (this.context.templates) {\n      Object.keys(this.context.templates).forEach((type) => {\n        let template = this.context.templates![type];\n        this.standardPalette.push({\n          type,\n          display: template.display || type,\n          iconClass: template.iconClass,\n          title: template.title,\n          createConfig: (id: string) => this.openModal(id, type, this.configurators[type]),\n        });\n      });\n    }\n  }\n\n  generateExistingPalette(configs: ComponentConfig[]) {\n    if(!this.options.showExistingPalette) {\n      this.existingPalette = [];\n      return;\n    }\n    this.existingPalette = configs.filter(c =>\n      // Add any non-container config whose type is compatible with the standard palette\n      this.standardPalette\n        .find(p => p.type !== '_container' && p.type === c.type))\n        .map(c => ({\n          type: c.type,\n          display: c.id,\n          title: $localize `Type: ${this.context.templates?.[c.type]?.display || c.type}`,\n          removeable: !this.configService.isUsed(c.id),\n          createConfig: _ => of(c) // The config already exists\n        })\n    )\n  }\n\n  onDndStart(item: PaletteItem) {\n    this.dragDropService.draggedCreator = item;\n  }\n\n  onDndEnd() {\n    this.dragDropService.draggedCreator = undefined;\n  }\n\n  openModal(id: string, type: string, configurator?: TemplateNameDirective): Observable {\n    const config = {type, id};\n    if(configurator) {\n      this.modal = {\n        configurator,\n        config,\n        configChanged: () => {}, // do nothing when the configurator changes the config (before user presses 'OK')\n        title: $localize `Create new ${type} component`,\n        close: new Subject()\n      }\n      return this.modal.close;\n    }\n    return of(config);\n  }\n\n  onModalClose(success: boolean) {\n    if(this.modal?.close) {\n      this.modal.close.next(success? this.modal.config : undefined);\n      this.modal.close.complete();\n      this.modal = undefined;\n    }\n  }\n\n  removeItem(item: PaletteItem) {\n    console.log(\"remove\", item);\n    this.configService.removeConfig(item.display!); // The display is the component id\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      Drag & drop a new component\n    \n    Drag & drop an item from this palette into the UI to create and configure a new component.\n    \n      \n      \n    \n  \n\n  \n    \n      Drag & drop an existing component\n    \n    Drag & drop an item from this palette into the UI to insert a component whose configuration already exists.\n    \n    ⓘ\n    \n      \n      \n    \n  \n\n\n\n  \n    \n    \n    {{item.display || item.type}}\n    \n    \n  \n\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./palette.component.scss\n                \n                small, span {\n  cursor: default;\n}\n\n.palette-item {\n  display: inline-block;\n  border: 1px solid grey;\n  padding: 0.25rem 0.5rem;\n  border-radius: 3px;\n  background: rgb(0,0,0,0.1);\n  cursor: grab;\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n\n.palette-item .btn-close {\n  font-size: 0.7em;\n}\n\n.palette-item .grip {\n  position: relative;\n  top: -2px;\n  color: #7c7c7c;\n  margin-right: 3px;\n}\n\n.palette-item.uib-unused {\n  border-style: dashed;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Drag & drop a new component        Drag & drop an item from this palette into the UI to create and configure a new component.                                  Drag & drop an existing component        Drag & drop an item from this palette into the UI to insert a component whose configuration already exists.        ⓘ                                    {{item.display || item.type}}            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaletteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaletteItem.html":{"url":"interfaces/PaletteItem.html","title":"interface - PaletteItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaletteItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/palette/palette.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentCreator\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            display\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconClass\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            removeable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createConfig:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Configurable } from '../../configurable/configurable.service';\nimport { ComponentConfig, ConfigService } from '../../configuration/config.service';\nimport { ComponentCreator, DragDropService } from '../../dynamic-views/drag-drop.service';\nimport { TemplateNameDirective } from '../../utils';\nimport { PaletteOptions } from '../configurator.models';\n\ndeclare interface PaletteItem extends ComponentCreator {\n  type: string;\n  display?: string;\n  iconClass?: string;\n  title?: string;\n  removeable?: boolean;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\ndeclare interface ConfigModal {\n  configurator: TemplateNameDirective;\n  config: ComponentConfig;\n  configChanged: () => void;\n  title: string;\n  close: Subject;\n}\n\nexport const defaultPaletteOptions: PaletteOptions = {\n  enableSubcontainers: true,\n  enableRawHtml: true,\n  rawHtmlPlaceholder: \"Edit me\",\n  showStandardPalette: true,\n  showExistingPalette: true\n};\n\n@Component({\n  selector: 'uib-palette',\n  templateUrl: './palette.component.html',\n  styleUrls: ['./palette.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaletteComponent implements OnInit, OnChanges {\n  @Input() context: Configurable;\n  @Input() configurators: Record = {};\n  @Input() options = defaultPaletteOptions;\n\n  standardPalette: PaletteItem[];\n  existingPalette: PaletteItem[];\n\n  modal?: ConfigModal;\n\n  constructor(\n    public dragDropService: DragDropService,\n    public configService: ConfigService,\n    public cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    // The palette of existing components is constructed from the complete configuration\n    this.configService.watchAllConfig()\n      .subscribe(configs => {\n        this.generateExistingPalette(configs)\n        this.cdRef.markForCheck();\n      });\n  }\n\n  ngOnChanges() {\n    // Initialize options with default, then custom\n    this.options = Object.assign({}, defaultPaletteOptions, this.options);\n    this.generateAutoPalette();\n    // The existing palette must be update when the standard palette changes\n    this.generateExistingPalette(this.configService.getAllConfig());\n  }\n\n  generateAutoPalette() {\n    this.standardPalette = [];\n    if(!this.options.showStandardPalette) {\n      return;\n    }\n    if (this.options.enableSubcontainers) {\n      this.standardPalette.push({\n        type: '_container',\n        display: $localize `Container`,\n        title: $localize `A component to arrange various sub-components`,\n        createConfig: (id: string) => of({ type: '_container', id, items: [] }),\n      });\n    }\n    if (this.options.enableRawHtml) {\n      this.standardPalette.push({\n        type: '_raw-html',\n        display: $localize `Raw HTML`,\n        title: $localize `A component to write HTML freely`,\n        createConfig: (id: string) => of({ type: '_raw-html', id, rawHtml: this.options.rawHtmlPlaceholder})\n      })\n    }\n    if (this.context.templates) {\n      Object.keys(this.context.templates).forEach((type) => {\n        let template = this.context.templates![type];\n        this.standardPalette.push({\n          type,\n          display: template.display || type,\n          iconClass: template.iconClass,\n          title: template.title,\n          createConfig: (id: string) => this.openModal(id, type, this.configurators[type]),\n        });\n      });\n    }\n  }\n\n  generateExistingPalette(configs: ComponentConfig[]) {\n    if(!this.options.showExistingPalette) {\n      this.existingPalette = [];\n      return;\n    }\n    this.existingPalette = configs.filter(c =>\n      // Add any non-container config whose type is compatible with the standard palette\n      this.standardPalette\n        .find(p => p.type !== '_container' && p.type === c.type))\n        .map(c => ({\n          type: c.type,\n          display: c.id,\n          title: $localize `Type: ${this.context.templates?.[c.type]?.display || c.type}`,\n          removeable: !this.configService.isUsed(c.id),\n          createConfig: _ => of(c) // The config already exists\n        })\n    )\n  }\n\n  onDndStart(item: PaletteItem) {\n    this.dragDropService.draggedCreator = item;\n  }\n\n  onDndEnd() {\n    this.dragDropService.draggedCreator = undefined;\n  }\n\n  openModal(id: string, type: string, configurator?: TemplateNameDirective): Observable {\n    const config = {type, id};\n    if(configurator) {\n      this.modal = {\n        configurator,\n        config,\n        configChanged: () => {}, // do nothing when the configurator changes the config (before user presses 'OK')\n        title: $localize `Create new ${type} component`,\n        close: new Subject()\n      }\n      return this.modal.close;\n    }\n    return of(config);\n  }\n\n  onModalClose(success: boolean) {\n    if(this.modal?.close) {\n      this.modal.close.next(success? this.modal.config : undefined);\n      this.modal.close.complete();\n      this.modal = undefined;\n    }\n  }\n\n  removeItem(item: PaletteItem) {\n    console.log(\"remove\", item);\n    this.configService.removeConfig(item.display!); // The display is the component id\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaletteOptions.html":{"url":"interfaces/PaletteOptions.html","title":"interface - PaletteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaletteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/configurator.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enableRawHtml\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enableSubcontainers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rawHtmlPlaceholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showExistingPalette\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showStandardPalette\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enableRawHtml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableRawHtml:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableSubcontainers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableSubcontainers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rawHtmlPlaceholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rawHtmlPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showExistingPalette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showExistingPalette:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showStandardPalette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showStandardPalette:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Configurable } from \"../configurable\";\nimport { ComponentConfig } from \"../configuration\";\nimport { TemplateNameDirective } from \"../utils\";\n\nexport interface ConfiguratorOptions {\n  paletteOptions?: PaletteOptions;\n  showFlexEditor?: boolean;\n  showHtmlEditor?: boolean;\n  showCssClasses?: boolean;\n  showSpacingEditor?: boolean;\n  showConditionalDisplay?: boolean;\n  showRemove?: boolean;\n  showDuplicate?: boolean;\n}\n\nexport interface PaletteOptions {\n  enableSubcontainers?: boolean;\n  enableRawHtml?: boolean;\n  rawHtmlPlaceholder?: string;\n  showStandardPalette?: boolean;\n  showExistingPalette?: boolean;\n}\n\nexport interface ConfiguratorContext {\n  /** Object storing the configuration of the component */\n  config: ComponentConfig;\n  /** Options of the configurators (may change depending on zone) */\n  options: ConfiguratorOptions;\n  /** Register of all the components configurators  */\n  configurators: Record;\n  /** Context of the zone of the edited component */\n  context: Configurable;\n  /** Callback that the configurator should call to update the configuration */\n  configChanged: () => void;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SVG_CONFIG.html":{"url":"interfaces/SVG_CONFIG.html","title":"interface - SVG_CONFIG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SVG_CONFIG\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icons\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            missingIconFallback\n                                        \n                                \n                                \n                                        \n                                            sizes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultSize:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icons:         SvgIconType | SvgIconType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SvgIconType | SvgIconType[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missingIconFallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missingIconFallback:         SvgIconType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SvgIconType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport interface SvgIconType {\n  name: string;\n  data: string;\n}\n\nexport interface SVG_CONFIG {\n  icons?: SvgIconType | SvgIconType[];\n  color?: string;\n  defaultSize?: keyof SVG_CONFIG['sizes'];\n  missingIconFallback?: SvgIconType;\n  sizes: {\n    xs?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    xxl?: string;\n  };\n}\n\nexport const SVG_ICONS_CONFIG = new InjectionToken('SVG_ICONS_CONFIG');\nexport const SVG_ICONS = new InjectionToken('SVG_ICONS');\nexport const SVG_MISSING_ICON_FALLBACK = new InjectionToken('SVG_MISSING_ICON_FALLBACK');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpacingEditorComponent.html":{"url":"components/SpacingEditorComponent.html","title":"component - SpacingEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpacingEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/spacing-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-bs-spacing-editor\n            \n\n            \n                styleUrls\n                ./flex-editor.component.scss\n            \n\n\n            \n                template\n                \n  Spacing and borders\n  \n    \n      {{option.title}}\n      {{option.description}}\n      \n        {{prop.title}}\n        \n          \n            \n            \n              \n            \n          \n        \n      \n    \n    More utilities from the Bootstrap library\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                borderDirections\n                            \n                            \n                                    Public\n                                cdRef\n                            \n                            \n                                classes\n                            \n                            \n                                componentId\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                details\n                            \n                            \n                                directions\n                            \n                            \n                                magnitudes\n                            \n                            \n                                marginMagnitudes\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                toggle\n                            \n                            \n                                updateClasses\n                            \n                            \n                                updateDetails\n                            \n                            \n                                updateState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, renderer: Renderer2, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ComponentConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n            \n                \nisChecked(type: \"p\" | \"m\" | \"border\" | string, prop: \"direction\" | \"magnitude\", code: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:185\n                \n            \n\n\n            \n                \n                    Returns the activation state of a given property.\nThis function is called by the template to set the \"checked\" state\nof each radio button.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"p\" | \"m\" | \"border\" | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prop\n                                    \n                                            \"direction\" | \"magnitude\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:117\n                \n            \n\n\n            \n                \n                    Initialize the state of the  elements upon ViewInit\n(the first call to updateDetails() from ngOnChanges() does not\nyet have access to these elements)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(type: \"p\" | \"m\" | \"border\" | string, prop: \"direction\" | \"magnitude\", code: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:196\n                \n            \n\n\n            \n                \n                    Toggles the state of a given property.\nThis function is called by the template upon a click on a radio button.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"p\" | \"m\" | \"border\" | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prop\n                                    \n                                            \"direction\" | \"magnitude\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateClasses\n                        \n                    \n                \n            \n            \n                \nupdateClasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:222\n                \n            \n\n\n            \n                \n                    Update the class list and propagate the update to the config service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDetails\n                        \n                    \n                \n            \n            \n                \nupdateDetails()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:158\n                \n            \n\n\n            \n                \n                    This method opens or closes the  elements, depending on the classes\ncontained in the configuration\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateState\n                        \n                    \n                \n            \n            \n                \nupdateState()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:125\n                \n            \n\n\n            \n                \n                    Take the input configuration (config.classes) and parse the content\nto feed the state object (which determines the state of each option).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        borderDirections\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: \"direction\",\n    title: $localize `Direction`,\n    options: [\n      {description: $localize `All around`, code: \"\", icon: \"direction-left-right-top-bottom\"},\n      {description: $localize `On the left side`, code: \"-start\", icon: \"direction-left\"},\n      {description: $localize `On the right side`, code: \"-end\", icon: \"direction-right\"},\n      {description: $localize `On the top side`, code: \"-top\", icon: \"direction-top\"},\n      {description: $localize `On the bottom side`, code: \"-bottom\", icon: \"direction-bottom\"},\n    ]\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren('details')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: \"direction\",\n    title: $localize `Direction`,\n    options: [\n      {description: $localize `All around`, code: \"\", icon: \"direction-left-right-top-bottom\"},\n      {description: $localize `On the left side`, code: \"s\", icon: \"direction-left\"},\n      {description: $localize `On the right side`, code: \"e\", icon: \"direction-right\"},\n      {description: $localize `On the top side`, code: \"t\", icon: \"direction-top\"},\n      {description: $localize `On the bottom side`, code: \"b\", icon: \"direction-bottom\"},\n      {description: $localize `On the left and right`, code: \"x\", icon: \"direction-left-right\"},\n      {description: $localize `On the top and bottom`, code: \"y\", icon: \"direction-top-bottom\"}\n    ]\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        magnitudes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: \"magnitude\",\n    title: $localize `Space`,\n    options: [\n      {description: $localize `None`, code: \"0\", icon: \"no-space\"},\n      {description: $localize `Extra Small`, code: \"1\", icon: \"space-xs\"},\n      {description: $localize `Small`, code: \"2\", icon: \"space-s\"},\n      {description: $localize `Medium`, code: \"3\", icon: \"space-m\"},\n      {description: $localize `Large`, code: \"4\", icon: \"space-l\"},\n      {description: $localize `Extra Large`, code: \"5\", icon: \"space-xl\"}\n    ]\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        marginMagnitudes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    ...this.magnitudes,\n    options: [\n      ...this.magnitudes.options,\n      {description: $localize `Auto`, code: \"auto\", icon: \"auto\"}\n    ]\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {name: \"m\", title: $localize `Margin`, description: $localize `Margin is the space around the component`, properties: [this.directions, this.marginMagnitudes]},\n    {name: \"p\", title: $localize `Padding`, description: $localize `Padding is the space within the component`, properties: [this.directions, this.magnitudes]},\n    {name: \"border\", title: $localize `Border`, description: $localize `Border around the component`, properties: [this.borderDirections, this.magnitudes]}\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/spacing-editor.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, QueryList, Renderer2, SimpleChanges, ViewChildren } from \"@angular/core\";\nimport { ComponentConfig, ConfigService } from \"../../configuration\";\n\n@Component({\n  selector: 'uib-bs-spacing-editor',\n  template: `\n  \n    Spacing and borders\n    \n      \n        {{option.title}}\n        {{option.description}}\n        \n          {{prop.title}}\n          \n            \n              \n              \n                \n              \n            \n          \n        \n      \n      More utilities from the Bootstrap library\n    \n  \n  `,\n  styleUrls: ['./flex-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpacingEditorComponent implements AfterViewInit, OnChanges {\n  @Input() config: ComponentConfig;\n\n  @ViewChildren(\"details\") details: QueryList>;\n\n  componentId: string;\n\n  classes: string[];\n  state: {[type: string]: {index: number, direction: string|undefined, magnitude: string|undefined}};\n\n  directions = {\n    name: \"direction\",\n    title: $localize `Direction`,\n    options: [\n      {description: $localize `All around`, code: \"\", icon: \"direction-left-right-top-bottom\"},\n      {description: $localize `On the left side`, code: \"s\", icon: \"direction-left\"},\n      {description: $localize `On the right side`, code: \"e\", icon: \"direction-right\"},\n      {description: $localize `On the top side`, code: \"t\", icon: \"direction-top\"},\n      {description: $localize `On the bottom side`, code: \"b\", icon: \"direction-bottom\"},\n      {description: $localize `On the left and right`, code: \"x\", icon: \"direction-left-right\"},\n      {description: $localize `On the top and bottom`, code: \"y\", icon: \"direction-top-bottom\"}\n    ]\n  };\n\n  magnitudes = {\n    name: \"magnitude\",\n    title: $localize `Space`,\n    options: [\n      {description: $localize `None`, code: \"0\", icon: \"no-space\"},\n      {description: $localize `Extra Small`, code: \"1\", icon: \"space-xs\"},\n      {description: $localize `Small`, code: \"2\", icon: \"space-s\"},\n      {description: $localize `Medium`, code: \"3\", icon: \"space-m\"},\n      {description: $localize `Large`, code: \"4\", icon: \"space-l\"},\n      {description: $localize `Extra Large`, code: \"5\", icon: \"space-xl\"}\n    ]\n  };\n\n  borderDirections = {\n    name: \"direction\",\n    title: $localize `Direction`,\n    options: [\n      {description: $localize `All around`, code: \"\", icon: \"direction-left-right-top-bottom\"},\n      {description: $localize `On the left side`, code: \"-start\", icon: \"direction-left\"},\n      {description: $localize `On the right side`, code: \"-end\", icon: \"direction-right\"},\n      {description: $localize `On the top side`, code: \"-top\", icon: \"direction-top\"},\n      {description: $localize `On the bottom side`, code: \"-bottom\", icon: \"direction-bottom\"},\n    ]\n  }\n\n  marginMagnitudes = {\n    ...this.magnitudes,\n    options: [\n      ...this.magnitudes.options,\n      {description: $localize `Auto`, code: \"auto\", icon: \"auto\"}\n    ]\n  };\n\n  options = [\n    {name: \"m\", title: $localize `Margin`, description: $localize `Margin is the space around the component`, properties: [this.directions, this.marginMagnitudes]},\n    {name: \"p\", title: $localize `Padding`, description: $localize `Padding is the space within the component`, properties: [this.directions, this.magnitudes]},\n    {name: \"border\", title: $localize `Border`, description: $localize `Border around the component`, properties: [this.borderDirections, this.magnitudes]}\n  ];\n\n\n  constructor(\n    public configService: ConfigService,\n    public renderer: Renderer2,\n    public cdRef: ChangeDetectorRef\n  ){}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.config) {\n      this.updateState();\n      if(this.config.id !== this.componentId) {\n        this.componentId = this.config.id;\n        this.updateDetails(); // Update the  when a new component is open\n      }\n    }\n  }\n\n  /**\n   * Initialize the state of the  elements upon ViewInit\n   * (the first call to updateDetails() from ngOnChanges() does not\n   * yet have access to these elements)\n   */\n  ngAfterViewInit(): void {\n    this.updateDetails();\n  }\n\n  /**\n   * Take the input configuration (config.classes) and parse the content\n   * to feed the state object (which determines the state of each option).\n   */\n  updateState() {\n    this.classes = this.config.classes?.split(' ') || [];\n    this.state = {};\n    for(let index=0; index o.code)) {\n        if(c === `border${direction}`) {\n          this.state[`border${direction}`] = {index, direction, magnitude: undefined};\n        }\n      }\n    }\n  }\n\n  /**\n   * This method opens or closes the  elements, depending on the classes\n   * contained in the configuration\n   */\n  updateDetails() {\n    if(this.details) {\n      const props = Object.keys(this.state);\n      for(let detail of this.details) {\n        let open: boolean = true;\n        switch(detail.nativeElement.id) {\n          case \"spacing-options\": open = props.length > 0; break;\n          case \"m\": open = props.includes('m'); break;\n          case \"p\": open = props.includes('p'); break;\n          case \"border\": open = !!props.find(p => p.startsWith(\"border\")); break;\n        }\n        if(open) {\n          this.renderer.setAttribute(detail.nativeElement, \"open\", \"\");\n        }\n        else {\n          this.renderer.removeAttribute(detail.nativeElement, \"open\")\n        }\n      }\n      this.cdRef.detectChanges();\n    }\n  }\n\n  /**\n   * Returns the activation state of a given property.\n   * This function is called by the template to set the \"checked\" state\n   * of each radio button.\n   */\n  isChecked(type: 'p'|'m'|'border'|string, prop: 'direction'|'magnitude', code: string): boolean {\n    if(type === 'border') {\n      type = prop === 'magnitude'? `${type}-${prop}` : `${type}${code}`;\n    }\n    return this.state[type]?.[prop] === code;\n  }\n\n  /**\n   * Toggles the state of a given property.\n   * This function is called by the template upon a click on a radio button.\n   */\n  toggle(type: 'p'|'m'|'border'|string, prop: 'direction'|'magnitude', code: string) {\n    if(type === 'border') {\n      type = prop === 'magnitude'? `${type}-${prop}` : `${type}${code}`;\n    }\n    const match = this.state[type];\n    if(match) {\n      const currentVal = match[prop];\n      if(currentVal === code) {\n        this.classes[match.index] = \"\";\n        delete this.state[type];\n      }\n      else {\n        match[prop] = code;\n      }\n    }\n    else {\n      this.state[type] = {index: this.classes.length, direction: '', magnitude: '0'};\n      this.state[type][prop] = code;\n    }\n\n    this.updateClasses();\n  }\n\n  /**\n   * Update the class list and propagate the update to the config service\n   */\n  updateClasses() {\n    for(const [type,match] of Object.entries(this.state)) {\n      if(type.startsWith('border')) {\n        this.classes[match.index] = type === 'border-magnitude' ? `border-${match.magnitude}` : `border${match.direction}`;\n      }\n      else {\n        this.classes[match.index] = `${type}${match.direction}-${match.magnitude}`;\n      }\n    }\n    this.config.classes = this.classes.filter(c => c).join(' ');\n    this.configService.updateConfig(this.config);\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./flex-editor.component.scss\n                \n                .editor-line {\n  display: grid;\n  grid-template-columns: 105px 1fr;\n  align-items: center;\n}\n\n/* ================ RADIO BUTTONS ================= */\n\n.radio-group {\n  // --rotate: 90deg;\n  --icon-width: 22px;\n  --icon-height: 25px;\n  --bg-checked: hsl(80, 73%, 75%);\n  --bg-hover: hsl(80, 61%, 50%);\n\n  display: flex;\n  align-items: center;\n  gap: 0.2rem;\n}\n\n.radio-group label {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  > svg {\n    width: var(--icon-width);\n    height: var(--icon-height);\n\n    transform: rotate(var(--rotate, 0deg));\n    transition: transform 0.2s ease-in-out;\n  }\n}\n\n.radio-group input[type='radio'] {\n  display: none;\n}\n\n.radio-group input[type='radio'] + label {\n  cursor: pointer;\n  padding: 0.3rem 0.5rem;\n  border-radius: 4px;\n  border: 1px dashed #ccc;\n  transition: background-color 0.2s ease-in-out, fill 0.2s ease-in-out, color 0.2s ease-in-out;\n}\n\n.radio-group input[type='radio']:checked + label {\n  border: 1px solid #000;\n  background-color: var(--bg-checked);\n}\n\n.radio-group input[type='radio'] + label:hover {\n  color: white;\n  fill: white;\n  background-color: var(--bg-hover);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Spacing and borders            {{option.title}}      {{option.description}}              {{prop.title}}                                                                                                    More utilities from the Bootstrap library  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpacingEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvgIcon.html":{"url":"classes/SvgIcon.html","title":"class - SvgIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvgIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/registry.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(content: string)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Injector } from '@angular/core';\n\nimport { SVG_CONFIG, SVG_ICONS_CONFIG, SvgIconType } from './types';\n\nclass SvgIcon {\n  init = false;\n\n  constructor(public content: string) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SvgIconRegistry {\n  private readonly svgMap = new Map();\n  private readonly document: Document;\n\n  constructor(injector: Injector, @Inject(SVG_ICONS_CONFIG) config: SVG_CONFIG) {\n    this.document = injector.get(DOCUMENT);\n\n    if (config.icons) {\n      this.register(config.icons);\n    }\n\n    if (config.missingIconFallback) {\n      this.register(config.missingIconFallback);\n    }\n  }\n\n  getAll() {\n    return this.svgMap;\n  }\n\n  get(key: string | undefined): string | undefined {\n    const icon = key && this.svgMap.get(key);\n\n    if (!icon) {\n      return undefined;\n    }\n\n    if (!icon.init) {\n      const svg = this.toElement(icon.content);\n      svg.setAttribute('fit', '');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n\n      icon.content = svg.outerHTML;\n      icon.init = true;\n    }\n\n    return icon.content;\n  }\n\n  register(icons: SvgIconType | SvgIconType[]) {\n    for (const { name, data } of Array.isArray(icons) ? icons : [icons]) {\n      if (!this.svgMap.has(name)) {\n        this.svgMap.set(name, new SvgIcon(data));\n      }\n    }\n  }\n\n  getSvgElement(name: string): SVGSVGElement | undefined {\n    const content = this.get(name);\n\n    if (!content) {\n      return undefined;\n    }\n\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGSVGElement;\n  }\n\n  private toElement(content: string): SVGElement {\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGElement;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SvgIconComponent.html":{"url":"components/SvgIconComponent.html","title":"component - SvgIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SvgIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/utils/svg-icon/svg-icon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                svg-icon\n            \n\n\n            \n                styles\n                \n      :host {\n        display: inline-block;\n        fill: currentColor;\n        font-size: 1rem;\n        \n        transform: rotate(var(--rotate, 0deg));\n        transition: transform 0.2s ease-in-out;\n      }\n    \n            \n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastKey\n                            \n                            \n                                    Private\n                                mergedConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                fontSize\n                            \n                            \n                                height\n                            \n                            \n                                key\n                            \n                            \n                                size\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    key\n                                \n                                \n                                    size\n                                \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    fontSize\n                                \n                                \n                                    color\n                                \n                                \n                                    element\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef, registry: SvgIconRegistry, config: SVG_CONFIG)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                        SvgIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SVG_CONFIG\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontSize\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:46\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    createConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mergedConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SVG_CONFIG\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n\n                \n                    \n                        setkey(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n\n                \n                    \n                        setsize(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(value: number | string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number | string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n\n                \n                    \n                        setheight(value: number | string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:50\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number | string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fontSize\n                    \n                \n\n\n                \n                    \n                        setfontSize(value: number | string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number | string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n\n\n                \n                    \n                        setcolor(color: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            color\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:76\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, Inject, Input } from '@angular/core';\n\nimport { SvgIconRegistry } from './registry';\nimport { SVG_CONFIG, SVG_ICONS_CONFIG } from './types';\n\n@Component({\n  selector: 'svg-icon',\n  template: '',\n  host: {\n    role: 'img',\n    'aria-hidden': 'true',\n  },\n  styles: [\n    `\n      :host {\n        display: inline-block;\n        fill: currentColor;\n        font-size: 1rem;\n        \n        transform: rotate(var(--rotate, 0deg));\n        transition: transform 0.2s ease-in-out;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SvgIconComponent {\n  @Input()\n  set key(name: string) {\n    const icon = this.registry.get(name) ?? this.registry.get(this.config.missingIconFallback?.name);\n\n    if (icon) {\n      this.element.setAttribute('aria-label', `${name}-icon`);\n      this.element.classList.remove(`svg-icon-${this.lastKey}`);\n      this.lastKey = name;\n      this.element.classList.add(`svg-icon-${name}`);\n      this.element.innerHTML = icon;\n    }\n  }\n\n  @Input()\n  set size(value: keyof SVG_CONFIG['sizes']) {\n    this.element.style.fontSize = this.mergedConfig.sizes[value];\n  }\n\n  @Input() set width(value: number | string) {\n    this.element.style.width = coerceCssPixelValue(value);\n  }\n\n  @Input() set height(value: number | string) {\n    this.element.style.height = coerceCssPixelValue(value);\n  }\n\n  @Input()\n  set fontSize(value: number | string) {\n    this.element.style.fontSize = coerceCssPixelValue(value);\n  }\n\n  @Input()\n  set color(color: string) {\n    this.element.style.color = color;\n  }\n\n  private mergedConfig: SVG_CONFIG;\n  private lastKey!: string;\n\n  constructor(\n    private host: ElementRef,\n    private registry: SvgIconRegistry,\n    @Inject(SVG_ICONS_CONFIG) private config: SVG_CONFIG\n  ) {\n    this.mergedConfig = this.createConfig();\n    this.element.style.fontSize = this.mergedConfig.sizes[this.mergedConfig.defaultSize || 'md'];\n  }\n\n  get element() {\n    return this.host.nativeElement;\n  }\n\n  private createConfig() {\n    const defaults: SVG_CONFIG = {\n      sizes: {\n        xs: '0.5rem',\n        sm: '0.75rem',\n        md: '1rem',\n        lg: '1.5rem',\n        xl: '2rem',\n        xxl: '2.5rem',\n      },\n    };\n\n    return {\n      ...defaults,\n      ...this.config,\n    };\n  }\n}\n\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return typeof value === 'string' ? value : `${value}px`;\n}\n\n    \n\n\n    \n            \n      :host {\n        display: inline-block;\n        fill: currentColor;\n        font-size: 1rem;\n        \n        transform: rotate(var(--rotate, 0deg));\n        transition: transform 0.2s ease-in-out;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'SvgIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgIconRegistry.html":{"url":"injectables/SvgIconRegistry.html","title":"injectable - SvgIconRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SvgIconRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/registry.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                document\n                            \n                            \n                                    Private\n                                    Readonly\n                                svgMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                getSvgElement\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                toElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, config: SVG_CONFIG)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SVG_CONFIG\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSvgElement\n                        \n                    \n                \n            \n            \n                \ngetSvgElement(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SVGSVGElement | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(icons: SvgIconType | SvgIconType[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icons\n                                    \n                                                SvgIconType | SvgIconType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    toElement(content: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SVGElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        svgMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Injector } from '@angular/core';\n\nimport { SVG_CONFIG, SVG_ICONS_CONFIG, SvgIconType } from './types';\n\nclass SvgIcon {\n  init = false;\n\n  constructor(public content: string) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SvgIconRegistry {\n  private readonly svgMap = new Map();\n  private readonly document: Document;\n\n  constructor(injector: Injector, @Inject(SVG_ICONS_CONFIG) config: SVG_CONFIG) {\n    this.document = injector.get(DOCUMENT);\n\n    if (config.icons) {\n      this.register(config.icons);\n    }\n\n    if (config.missingIconFallback) {\n      this.register(config.missingIconFallback);\n    }\n  }\n\n  getAll() {\n    return this.svgMap;\n  }\n\n  get(key: string | undefined): string | undefined {\n    const icon = key && this.svgMap.get(key);\n\n    if (!icon) {\n      return undefined;\n    }\n\n    if (!icon.init) {\n      const svg = this.toElement(icon.content);\n      svg.setAttribute('fit', '');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n\n      icon.content = svg.outerHTML;\n      icon.init = true;\n    }\n\n    return icon.content;\n  }\n\n  register(icons: SvgIconType | SvgIconType[]) {\n    for (const { name, data } of Array.isArray(icons) ? icons : [icons]) {\n      if (!this.svgMap.has(name)) {\n        this.svgMap.set(name, new SvgIcon(data));\n      }\n    }\n  }\n\n  getSvgElement(name: string): SVGSVGElement | undefined {\n    const content = this.get(name);\n\n    if (!content) {\n      return undefined;\n    }\n\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGSVGElement;\n  }\n\n  private toElement(content: string): SVGElement {\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGElement;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SvgIconType.html":{"url":"interfaces/SvgIconType.html","title":"interface - SvgIconType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SvgIconType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport interface SvgIconType {\n  name: string;\n  data: string;\n}\n\nexport interface SVG_CONFIG {\n  icons?: SvgIconType | SvgIconType[];\n  color?: string;\n  defaultSize?: keyof SVG_CONFIG['sizes'];\n  missingIconFallback?: SvgIconType;\n  sizes: {\n    xs?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    xxl?: string;\n  };\n}\n\nexport const SVG_ICONS_CONFIG = new InjectionToken('SVG_ICONS_CONFIG');\nexport const SVG_ICONS = new InjectionToken('SVG_ICONS');\nexport const SVG_MISSING_ICON_FALLBACK = new InjectionToken('SVG_MISSING_ICON_FALLBACK');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvgIconsModule.html":{"url":"modules/SvgIconsModule.html","title":"module - SvgIconsModule","body":"\n                   \n\n\n\n\n    Modules\n    SvgIconsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SvgIconsModule\n\n\n\ncluster_SvgIconsModule_declarations\n\n\n\ncluster_SvgIconsModule_exports\n\n\n\n\nSvgIconComponent\n\nSvgIconComponent\n\n\n\nSvgIconsModule\n\nSvgIconsModule\n\nSvgIconsModule -->\n\nSvgIconComponent->SvgIconsModule\n\n\n\n\n\nSvgIconComponent \n\nSvgIconComponent \n\nSvgIconComponent  -->\n\nSvgIconsModule->SvgIconComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/svg-icon.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SvgIconComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SvgIconComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    forChild(icons: SvgIconType | SvgIconType[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/svg-icon.module.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icons\n                                    \n                                                SvgIconType | SvgIconType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/svg-icon.module.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Inject, ModuleWithProviders, NgModule, Optional, Self } from '@angular/core';\n\nimport { SvgIconRegistry } from './registry';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SVG_CONFIG, SVG_ICONS, SVG_ICONS_CONFIG, SVG_MISSING_ICON_FALLBACK, SvgIconType } from './types';\n\n@NgModule({\n  declarations: [SvgIconComponent],\n  exports: [SvgIconComponent],\n})\nexport class SvgIconsModule {\n  static forRoot(config: Partial = {}): ModuleWithProviders {\n    return {\n      ngModule: SvgIconsModule,\n      providers: [\n        {\n          provide: SVG_ICONS_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n\n  static forChild(icons: SvgIconType | SvgIconType[]): ModuleWithProviders {\n    return {\n      ngModule: SvgIconsModule,\n      providers: [{ provide: SVG_ICONS, useValue: icons, multi: true }],\n    };\n  }\n\n  constructor(\n    @Optional() @Self() @Inject(SVG_ICONS) icons: SvgIconType[] | SvgIconType[][],\n    @Optional() @Inject(SVG_MISSING_ICON_FALLBACK) missingIconFallback: SvgIconType,\n    private service: SvgIconRegistry\n  ) {\n    if (icons) {\n      this.service.register(([] as SvgIconType[]).concat(...icons));\n    }\n\n    if (missingIconFallback) {\n      this.service.register(missingIconFallback);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TemplateNameDirective.html":{"url":"directives/TemplateNameDirective.html","title":"directive - TemplateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TemplateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/template-name.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uib-template]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                iconClass\n                            \n                            \n                                title\n                            \n                            \n                                uib-template\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/template-name.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/template-name.directive.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/template-name.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/template-name.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uib-template\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/template-name.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/template-name.directive.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[uib-template]',\n})\nexport class TemplateNameDirective {\n  @Input('uib-template') templateName: string;\n  @Input() display?: string;\n  @Input() iconClass?: string;\n  @Input() title?: string;\n\n  constructor(public readonly template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToastAction.html":{"url":"interfaces/ToastAction.html","title":"interface - ToastAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToastAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/toast/toast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideToast\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            style\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideToast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:     string | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Toast } from 'bootstrap';\nimport { Subject } from 'rxjs';\n\nexport type BsStyle = 'info' | 'success' | 'warning' | 'danger' | 'primary' | 'secondary' | 'light' | 'dark';\n\nexport interface ToastAction {\n  text?: string;\n  style?: string | string;\n  icon?: string;\n  hideToast?: boolean;\n  action: () => void;\n}\n\nexport interface ToastMessage {\n  icon?: string;\n  message: string;\n  style?: BsStyle | string;\n  actions?: ToastAction[];\n  options?: Toast.Options;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ToastService {\n\n  onToastMessage = new Subject();\n\n  show(\n    message: string,\n    style: BsStyle | string = 'info',\n    actions?: ToastAction[],\n    options?: Toast.Options\n  ) {\n    this.onToastMessage.next({message, style, actions, options});\n  }\n\n  hide() {\n    this.onToastMessage.next(null);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/utils/toast/toast.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-toast\n            \n\n\n            \n                styles\n                \n  .alert {\n    width: 350px;\n    max-width: 100%;\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n    z-index: 1046;\n  }\n  \n            \n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                message\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     Toast.Options\n\n                    \n                \n                \n                    \n                        Default value : {animation: true, autohide: true, delay: 5000}\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/toast/toast.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/toast/toast.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/toast/toast.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAction\n                        \n                    \n                \n            \n            \n                \nonAction(action: ToastAction)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/toast/toast.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ToastAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('toastRef', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastMessage | null\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Toast\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { Toast } from 'bootstrap';\nimport { Subscription } from 'rxjs';\nimport { ToastAction, ToastMessage, ToastService } from './toast.service';\n\n@Component({\n  selector: 'uib-toast',\n  templateUrl: './toast.component.html',\n  styles: [`\n  .alert {\n    width: 350px;\n    max-width: 100%;\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n    z-index: 1046;\n  }\n  `]\n})\nexport class ToastComponent implements OnDestroy, AfterViewInit {\n  @ViewChild('toastRef', {static: true}) el: ElementRef\n\n  @Input() options: Toast.Options = {animation: true, autohide: true, delay: 5000};\n\n  toast: Toast;\n  message: ToastMessage|null;\n\n  private sub: Subscription;\n\n  constructor(private toastService: ToastService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.sub = this.toastService.onToastMessage.subscribe((message: ToastMessage|null) => {\n      this.message = message;\n      if (this.el) {\n        if(message) {\n          this.toast = Toast.getOrCreateInstance(this.el.nativeElement, message.options || this.options);\n          this.toast.show();\n        }\n        else {\n          this.toast.hide();\n        }\n      } else {\n        console.warn('Toast not found!');\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  onAction(action: ToastAction) {\n    action.action();\n    if(action.hideToast) {\n      this.toast.hide();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ message.message }}\n    \n    \n      \n        \n        {{action.text}}\n      \n    \n    \n  \n\n\n    \n\n    \n            \n  .alert {\n    width: 350px;\n    max-width: 100%;\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n    z-index: 1046;\n  }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ message.message }}                              {{action.text}}                '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToastMessage.html":{"url":"interfaces/ToastMessage.html","title":"interface - ToastMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToastMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/toast/toast.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            style\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         ToastAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ToastAction[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Toast.Options\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Toast.Options\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         BsStyle | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BsStyle | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Toast } from 'bootstrap';\nimport { Subject } from 'rxjs';\n\nexport type BsStyle = 'info' | 'success' | 'warning' | 'danger' | 'primary' | 'secondary' | 'light' | 'dark';\n\nexport interface ToastAction {\n  text?: string;\n  style?: string | string;\n  icon?: string;\n  hideToast?: boolean;\n  action: () => void;\n}\n\nexport interface ToastMessage {\n  icon?: string;\n  message: string;\n  style?: BsStyle | string;\n  actions?: ToastAction[];\n  options?: Toast.Options;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ToastService {\n\n  onToastMessage = new Subject();\n\n  show(\n    message: string,\n    style: BsStyle | string = 'info',\n    actions?: ToastAction[],\n    options?: Toast.Options\n  ) {\n    this.onToastMessage.next({message, style, actions, options});\n  }\n\n  hide() {\n    this.onToastMessage.next(null);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/toast/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onToastMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/toast/toast.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, style: BsStyle | string, actions?: ToastAction[], options?: Toast.Options)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/toast/toast.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    style\n                                    \n                                                BsStyle | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'info'\n                                    \n\n                                \n                                \n                                    actions\n                                    \n                                                ToastAction[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            Toast.Options\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        onToastMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Toast } from 'bootstrap';\nimport { Subject } from 'rxjs';\n\nexport type BsStyle = 'info' | 'success' | 'warning' | 'danger' | 'primary' | 'secondary' | 'light' | 'dark';\n\nexport interface ToastAction {\n  text?: string;\n  style?: string | string;\n  icon?: string;\n  hideToast?: boolean;\n  action: () => void;\n}\n\nexport interface ToastMessage {\n  icon?: string;\n  message: string;\n  style?: BsStyle | string;\n  actions?: ToastAction[];\n  options?: Toast.Options;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ToastService {\n\n  onToastMessage = new Subject();\n\n  show(\n    message: string,\n    style: BsStyle | string = 'info',\n    actions?: ToastAction[],\n    options?: Toast.Options\n  ) {\n    this.onToastMessage.next({message, style, actions, options});\n  }\n\n  hide() {\n    this.onToastMessage.next(null);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/toolbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-toolbar\n            \n\n\n            \n                styles\n                \n    .uib-toolbar .btn.disabled {\n      /* allow tooltip on disabled buttons */\n      pointer-events: visible;\n      /* but display a simple arrow cursor */\n      cursor: default;\n    }\n\n    .uib-toolbar .btn svg-icon {\n      display: flex;\n      align-items: center;\n      width: 22px;\n      height: 25px;\n    }\n    .uib-toolbar-anim {\n      transition: ease .3s;\n    }\n    \n            \n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                configurableService\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleEditor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, configurableService: ConfigurableService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/toolbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditor\n                        \n                    \n                \n            \n            \n                \ntoggleEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/toolbar.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/toolbar.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configurableService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigurableService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/toolbar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ContentChild, TemplateRef } from \"@angular/core\";\nimport { ConfigurableService } from \"../configurable\";\nimport { ConfigService } from \"../configuration\";\n\n@Component({\n  selector: 'uib-toolbar',\n  templateUrl: './toolbar.component.html',\n  styles: [\n    `\n    .uib-toolbar .btn.disabled {\n      /* allow tooltip on disabled buttons */\n      pointer-events: visible;\n      /* but display a simple arrow cursor */\n      cursor: default;\n    }\n\n    .uib-toolbar .btn svg-icon {\n      display: flex;\n      align-items: center;\n      width: 22px;\n      height: 25px;\n    }\n    .uib-toolbar-anim {\n      transition: ease .3s;\n    }\n    `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarComponent {\n  @ContentChild(TemplateRef, {static: false}) template: TemplateRef;\n  \n  constructor(\n    public configService: ConfigService,\n    public configurableService: ConfigurableService\n  ) {}\n  \n  toggleEditor() {\n    this.configurableService.toggleEditor();\n  }\n\n}\n    \n\n    \n        \n  \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n            \n    .uib-toolbar .btn.disabled {\n      /* allow tooltip on disabled buttons */\n      pointer-events: visible;\n      /* but display a simple arrow cursor */\n      cursor: default;\n    }\n\n    .uib-toolbar .btn svg-icon {\n      display: flex;\n      align-items: center;\n      width: 22px;\n      height: 25px;\n    }\n    .uib-toolbar-anim {\n      transition: ease .3s;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TooltipDirective.html":{"url":"directives/TooltipDirective.html","title":"directive - TooltipDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TooltipDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/tooltip.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uib-tooltip]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Optional\n                                tooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                container\n                            \n                            \n                                placement\n                            \n                            \n                                uib-tooltip\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/tooltip.directive.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     Partial>\n\n                    \n                \n                \n                    \n                        Default value : {\n    html: true,\n    sanitize: false,\n    delay: { show: 300, hide: 0 },\n    trigger: 'hover'\n  }\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:19\n                            \n                        \n                \n                    \n                        Allow Bootstrap tooltip's options configuration\n\ntitle, placement and container options are removed from Bootstrap options as they use their own inputs.\nhtml, sanitize, delay and trigger options are sets with different values as well by default but can\nbe overriden here.\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        container\n                    \n                \n                \n                    \n                        Type :     string | Element\n\n                    \n                \n                \n                    \n                        Default value : \".uib-bootstrap\"\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:37\n                            \n                        \n                \n                    \n                        Append the tooltip to a specific element.\nBy default, tooltip is append to uib-bootstrap component.\nWhen undefined, tooltip is append to his host element.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placement\n                    \n                \n                \n                    \n                        Type :         TooltipPlacement\n\n                    \n                \n                \n                    \n                        Default value : \"auto\"\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:29\n                            \n                        \n                \n                    \n                        How to position the tooltip.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uib-tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/tooltip.directive.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/tooltip.directive.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/tooltip.directive.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Tooltip\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/tooltip.directive.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, OnChanges, OnDestroy } from \"@angular/core\";\nimport { Tooltip } from \"bootstrap\";\n\nexport type TooltipPlacement = 'auto' | 'top' | 'bottom' | 'left' | 'right';\n\n@Directive({\n  selector: '[uib-tooltip]'\n})\nexport class TooltipDirective implements OnChanges, OnDestroy {\n  @Input('uib-tooltip') html: string;\n\n  /**\n   * Allow Bootstrap tooltip's options configuration\n   *\n   * * `title`, `placement` and `container` options are removed from Bootstrap options as they use their own inputs.\n   * * `html`, `sanitize`, `delay` and `trigger` options are sets with different values as well by default but can\n   * be overriden here.\n   */\n  @Input() config?: Partial> = {\n    html: true,\n    sanitize: false,\n    delay: { show: 300, hide: 0 },\n    trigger: 'hover'\n  };\n\n  /**\n   * How to position the tooltip.\n   */\n  @Input() placement: TooltipPlacement = \"auto\";\n\n  /**\n   * Append the tooltip to a specific element.\n   *\n   * By default, tooltip is append to `uib-bootstrap` component.\n   * When `undefined`, tooltip is append to his host element.\n   */\n  @Input() container?: string | Element = \".uib-bootstrap\";\n\n  tooltip?: Tooltip;\n\n  constructor(public el: ElementRef){}\n\n  ngOnChanges() {\n    this.tooltip?.dispose(); // Force the creation of a new tooltip, or else the content is not updated\n    if(this.html) {\n      this.tooltip = Tooltip.getOrCreateInstance(this.el.nativeElement, {\n        ...this.config,\n        placement: this.placement,\n        title: this.html,\n        container: this.container || this.el.nativeElement\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.tooltip?.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeComponent.html":{"url":"components/TreeComponent.html","title":"component - TreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TreeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/tree/tree.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-tree\n            \n\n            \n                styleUrls\n                tree.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tree.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configurableService\n                            \n                            \n                                    Private\n                                configurationMap\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                hover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configuration\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configurableService: ConfigurableService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/tree/tree.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                \n                \n                    \n                        Type :         ComponentConfig[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/tree/tree.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        children\n                        \n                    \n                \n            \n            \n                \nchildren(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/tree/tree.component.ts:45\n                \n            \n\n\n            \n                \n                    Given an id, return all the children of that id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nstring - The id of the component.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Partial[]\n\n                    \n                    \n                        The children of the component with the given id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hover\n                        \n                    \n                \n            \n            \n                \nhover(id: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/tree/tree.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/tree/tree.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n            \n                \nselect(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/tree/tree.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configurableService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigurableService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/tree/tree.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configurationMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/tree/tree.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/tree/tree.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ConfigurableService} from '../../configurable';\nimport { ComponentConfig } from '../../configuration';\n\n@Component({\n  selector: 'uib-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['tree.component.css'],\n})\nexport class TreeComponent implements OnChanges {\n  @Input() configuration: ComponentConfig[];\n  \n  root: Partial[];\n  \n  private configurationMap: Map>;\n  \n  constructor(public configurableService: ConfigurableService) {}\n  \n  ngOnChanges(changes: SimpleChanges) {\n    // set our Map object,\n    this.configurationMap = new Map();\n    this.configuration.forEach((el) => this.configurationMap.set(el.id, el));\n\n    // set children parent_id and order\n    this.configuration\n      .filter((parent) => parent.items && parent.items.length > 0)\n      .forEach((parent) =>\n        parent.items.forEach((id: string, index: number) => {\n          // a child could have multiple parents\n          // get child's parents\n          const {parents = [], orders = {}} = this.configurationMap.get(id) || {};\n          this.configurationMap.set(id, {...this.configurationMap.get(id), id: id, parents: [...parents, parent.id], orders: {...orders, [parent.id]: index }} )\n        })\n    );\n\n    // items without parent_id (root level)\n    this.root = [...this.configurationMap.values()].filter((el) => el.parents === undefined);\n  }\n\n  /**\n   * Given an id, return all the children of that id.\n   * @param {string} id - string - The id of the component.\n   * @returns The children of the component with the given id.\n   */\n  children(id: string): Partial[] {\n    return [...this.configurationMap.values()].filter((el) => el.parents ? el.parents.includes(id) : false).sort((a, b) => a.orders[id] - b.orders[id]);\n  }\n  \n  select(id: string) {\n    const el = this.configurableService.configurableDirectiveMap.get(id);\n    el?.click(new MouseEvent(\"click\"));\n    el?.nativeElement.scrollIntoView({behavior: 'smooth', inline: 'nearest', block: 'center'});\n  }\n  \n  hover(id: string | undefined) {\n    const hoveredId = this.configurableService.hoveredId;\n    if (hoveredId) {\n      const prev = this.configurableService.configurableDirectiveMap.get(hoveredId);\n      prev?.removeHighlight();\n    }\n    \n    this.configurableService.hoveredId = id;\n    if (id) {\n      const el = this.configurableService.configurableDirectiveMap.get(id);\n      el?.addHighlight();\n    \n      el?.nativeElement.scrollIntoView({ behavior: 'smooth', inline: 'nearest', block: 'center' });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n    \n      \n    \n  \n\n\n\n  {{ id }}\n\n\n\n  \n  \n  \n  \n\n    \n\n    \n                \n                    tree.component.css\n                \n                .tree,\n.section ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.tree li {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  \n  list-style-type: none;\n  margin: 10px;\n  position: relative;\n  width: 100%;\n}\n\n.tree li:not(.section) {\n  max-width: max-content;\n}\n\n\n.tree li::before {\n  content: \"\";\n  position: absolute;\n  top: -9px;\n  left: -20px;\n  border-left: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  border-radius: 0 0 0 0px;\n  width: 20px;\n  height: 22px;\n}\n\n.tree li::after {\n  position: absolute;\n  content: \"\";\n  top: 12px;\n  left: -20px;\n  border-left: 1px solid #ccc;\n  border-top: 1px solid #ccc;\n  border-radius: 0px 0 0 0;\n  width: 20px;\n  height: 100%;\n}\n\n.tree li:last-child::after {\n  display: none;\n}\n\n.tree li:last-child:before {\n  border-radius: 0 0 0 5px;\n}\n\nul.tree > li:first-child::before {\n  display: none;\n}\n\nul.tree > li:first-child::after {\n  border-radius: 5px 0 0 0;\n}\n\n.tree li a {\n  border: 1px #ccc solid;\n  border-radius: 5px;\n  padding: 2px 5px;\n  text-decoration: none;\n}\n\n.tree li a.selected {\n  box-shadow: 0 0 0 3px red;\n  z-index: 1;\n}\n\n.tree li a:hover,\n.tree li a:hover + ul li a,\n.tree li a:focus,\n.tree li a:focus + ul li a {\n  background: #ccc;\n  color: #000;\n  border: 1px solid #000;\n  cursor: pointer;\n}\n\n.tree li a:hover + ul li::after,\n.tree li a:focus + ul li::after,\n.tree li a:hover + ul li::before,\n.tree li a:focus + ul li::before .tree li a:hover + ul::before,\n.tree li a:focus + ul::before .tree li a:hover + ul ul::before,\n.tree li a:focus + ul ul::before {\n  border-color: #000; /*connector color on hover*/\n}\n\n.section ul {\n  transition: opacity 0.3s linear;\n  height: 0;\n  transform: translate(9999px);\n  opacity: 0;\n}\n.section input:checked ~ ul {\n  transform: translate(0);\n  opacity: 1;\n  height: auto;\n}\n\n.section input[type=\"checkbox\"] {\n  display: none;\n}\n\n.section {\n  position: relative;\n  padding-left: 35px;\n}\n\n.section label + a {\n  margin-left: -35px;\n  padding-left: 22px;\n  text-decoration: none;\n  color: #000;\n}\n\n.section label:before {\n  content: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e\");\n  position: absolute;\n  top: 4px;\n  left: 2px;\n  text-align: center;\n  display: inline-block;\n  transition: transform 0.5s;\n  z-index: 2;\n  user-select: none;\n  cursor: pointer;\n}\n\n.section input:checked ~ label:before {\n  transform: rotate(90deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ id }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilsModule.html":{"url":"modules/UtilsModule.html","title":"module - UtilsModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UtilsModule\n\n\n\ncluster_UtilsModule_exports\n\n\n\ncluster_UtilsModule_declarations\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nUtilsModule\n\nUtilsModule\n\nUtilsModule -->\n\nAutocompleteComponent->UtilsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nUtilsModule -->\n\nModalComponent->UtilsModule\n\n\n\n\n\nNgModelChangeDebouncedDirective\n\nNgModelChangeDebouncedDirective\n\nUtilsModule -->\n\nNgModelChangeDebouncedDirective->UtilsModule\n\n\n\n\n\nTemplateNameDirective\n\nTemplateNameDirective\n\nUtilsModule -->\n\nTemplateNameDirective->UtilsModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nUtilsModule -->\n\nToastComponent->UtilsModule\n\n\n\n\n\nTooltipDirective\n\nTooltipDirective\n\nUtilsModule -->\n\nTooltipDirective->UtilsModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nUtilsModule->AutocompleteComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nUtilsModule->ModalComponent \n\n\n\n\n\nNgModelChangeDebouncedDirective \n\nNgModelChangeDebouncedDirective \n\nNgModelChangeDebouncedDirective  -->\n\nUtilsModule->NgModelChangeDebouncedDirective \n\n\n\n\n\nTemplateNameDirective \n\nTemplateNameDirective \n\nTemplateNameDirective  -->\n\nUtilsModule->TemplateNameDirective \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nUtilsModule->ToastComponent \n\n\n\n\n\nTooltipDirective \n\nTooltipDirective \n\nTooltipDirective  -->\n\nUtilsModule->TooltipDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/utils/utils.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            NgModelChangeDebouncedDirective\n                        \n                        \n                            TemplateNameDirective\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            TooltipDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            NgModelChangeDebouncedDirective\n                        \n                        \n                            TemplateNameDirective\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            TooltipDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TooltipDirective } from './tooltip.directive';\nimport { ModalComponent } from './modal.component';\nimport { TemplateNameDirective } from './template-name.directive';\nimport { AutocompleteComponent } from './autocomplete.component';\nimport { NgModelChangeDebouncedDirective } from './model-change.directive';\nimport { ToastComponent } from './toast/toast.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    ModalComponent,\n    TemplateNameDirective,\n    TooltipDirective,\n    NgModelChangeDebouncedDirective,\n    ToastComponent,\n    AutocompleteComponent\n  ],\n  exports: [\n    ModalComponent,\n    TemplateNameDirective,\n    TooltipDirective,\n    NgModelChangeDebouncedDirective,\n    ToastComponent,\n    AutocompleteComponent\n  ],\n})\nexport class UtilsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZoneComponent.html":{"url":"components/ZoneComponent.html","title":"component - ZoneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ZoneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/dynamic-views/zone.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-zone\n            \n\n\n\n\n            \n                templateUrl\n                ./zone.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                children\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                configurableService\n                            \n                            \n                                enabled$\n                            \n                            \n                                sub\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onItemClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionsData\n                            \n                            \n                                data\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemClicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isArray\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, configurableService: ConfigurableService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditionsData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:29\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onItemClicked\n                        \n                    \n                \n            \n            \n                \nonItemClicked(event: Event, data?: any, index?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(TemplateNameDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configurableService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigurableService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enabled$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configurableService.editorEnabled$\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isArray\n                    \n                \n\n                \n                    \n                        getisArray()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n  OnDestroy,\n  OnInit,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { TemplateNameDirective } from '../utils/template-name.directive';\nimport { ConfigService } from '../configuration/config.service';\nimport { Subscription } from 'rxjs';\nimport { ConfigurableService } from '../configurable';\n\n@Component({\n  selector: 'uib-zone',\n  templateUrl: './zone.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZoneComponent implements AfterContentInit, OnInit, OnDestroy {\n  @ContentChildren(TemplateNameDirective)\n  children: QueryList;\n  templates: Record = {};\n\n  @Input() id: string;\n  @Input() data?: any;\n  @Input() conditionsData?: Record;\n\n  @Output() itemClicked = new EventEmitter();\n\n  sub: Subscription;\n\n  enabled$ = this.configurableService.editorEnabled$;\n\n  constructor(\n    public configService: ConfigService,\n    public configurableService: ConfigurableService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.sub = this.configService.watchConfig(this.id).subscribe((id) => {\n      this.cdr.markForCheck(); // necessary to apply config changes\n    });\n  }\n\n  ngAfterContentInit() {\n    this.children.forEach(\n      (tpl) => (this.templates[tpl.templateName] = tpl)\n    );\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  get isArray(): boolean {\n    return Array.isArray(this.data);\n  }\n\n  onItemClicked(event: Event, data?: any, index?: number) {\n    data = typeof index === 'undefined'? data : data[index];\n    this.itemClicked.next({data, index, event});\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n  \n\n\n\n\n\n  \n  \n  \n\n  \n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SpacingEditorComponent', 'selector': 'uib-bs-spacing-editor'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ZoneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/lib/src/conditions/condition.pipe.ts\n            \n            pipe\n            ConditionPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/conditions/conditions.service.ts\n            \n            injectable\n            ConditionsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/conditions/conditions.service.ts\n            \n            interface\n            Condition\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/conditions/conditions.service.ts\n            \n            interface\n            ConditionValue\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/lib/src/configurable/configurable.directive.ts\n            \n            directive\n            ConfigurableDirective\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                projects/lib/src/configurable/configurable.service.ts\n            \n            injectable\n            ConfigurableService\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/lib/src/configurable/configurable.service.ts\n            \n            interface\n            Configurable\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/config.service.ts\n            \n            interface\n            ComponentConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/config.service.ts\n            \n            interface\n            ContainerConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.component.ts\n            \n            component\n            ConfiguratorComponent\n            \n                13 %\n                (3/22)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.component.ts\n            \n            variable\n            defaultConfiguratorOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.models.ts\n            \n            interface\n            ConfiguratorContext\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.models.ts\n            \n            interface\n            ConfiguratorOptions\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.models.ts\n            \n            interface\n            PaletteOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/class-editor.component.ts\n            \n            component\n            ClassEditorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/condition-editor.component.ts\n            \n            component\n            ConditionEditorComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/flex-editor.component.ts\n            \n            component\n            FlexEditorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/flex-editor.component.ts\n            \n            interface\n            FlexOption\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/html-editor.component.ts\n            \n            component\n            HtmlEditorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/spacing-editor.component.ts\n            \n            component\n            SpacingEditorComponent\n            \n                27 %\n                (6/22)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/palette/palette.component.ts\n            \n            component\n            PaletteComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/palette/palette.component.ts\n            \n            interface\n            ConfigModal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/palette/palette.component.ts\n            \n            interface\n            PaletteItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/palette/palette.component.ts\n            \n            variable\n            defaultPaletteOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/tree/tree.component.ts\n            \n            component\n            TreeComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/drag-drop.service.ts\n            \n            injectable\n            DragDropService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/drag-drop.service.ts\n            \n            interface\n            ComponentCreator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/drag-drop.service.ts\n            \n            interface\n            ContainerIndex\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/item.component.ts\n            \n            component\n            ItemComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/zone.component.ts\n            \n            component\n            ZoneComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/model-change.directive.ts\n            \n            directive\n            NgModelChangeDebouncedDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/registry.ts\n            \n            class\n            SvgIcon\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/registry.ts\n            \n            injectable\n            SvgIconRegistry\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/svg-icon.component.ts\n            \n            component\n            SvgIconComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/svg-icon.component.ts\n            \n            function\n            coerceCssPixelValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            interface\n            SVG_CONFIG\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            interface\n            SvgIconType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            variable\n            SVG_ICONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            variable\n            SVG_ICONS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            variable\n            SVG_MISSING_ICON_FALLBACK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/template-name.directive.ts\n            \n            directive\n            TemplateNameDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/toast/toast.service.ts\n            \n            interface\n            ToastAction\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/toast/toast.service.ts\n            \n            interface\n            ToastMessage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/tooltip.directive.ts\n            \n            directive\n            TooltipDirective\n            \n                30 %\n                (3/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.1.0\n        \n            @angular/common : ^14.1.0\n        \n            @angular/compiler : ^14.1.0\n        \n            @angular/core : ^14.1.0\n        \n            @angular/forms : ^14.1.0\n        \n            @angular/platform-browser : ^14.1.0\n        \n            @angular/platform-browser-dynamic : ^14.1.0\n        \n            @angular/router : ^14.1.0\n        \n            @ngneat/elf : 2.1.0\n        \n            @ngneat/elf-entities : 4.3.1\n        \n            @ngneat/elf-state-history : 1.1.0\n        \n            @popperjs/core : ^2.11.5\n        \n            bootstrap : ^5.2.0\n        \n            ngx-drag-drop : ^2.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            coerceCssPixelValue   (projects/.../svg-icon.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/utils/svg-icon/svg-icon.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        coerceCssPixelValue\n                        \n                    \n                \n            \n            \n                \ncoerceCssPixelValue(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\nUI Builder\nAn Angular library for creating no-code tools & applications.\n\nDocumentation\nDemo application\nAPI Reference\n\nUI Builder is an Angular library that lets developers create applications that can be easily reshaped and reconfigured by end-users through point-and-click and drag-and-drop interactions.\n\nGetting Started\nAdd the library to your application with:\nng add @sinequa/ngx-ui-builder(This command installs the library and its peer dependencies from npm)\nImport the 2 following modules in your app.module.ts (the first one to display configurable components in your app; the second one to display their configurator):\nimport { DynamicViewsModule, ConfiguratorModule } from '@sinequa/ngx-ui-builder';\n\n@NgModule({\n    imports: [\n        ...\n        DynamicViewsModule,\n        ConfiguratorModule\n    ]\n})Import the Bootstrap utilities and UI Builder stylesheets in your project's stylesheet:\n@import \"~bootstrap/dist/css/bootstrap-utilities.min\"; // Unless you already use Bootstrap or Bootstrap utilities\n@import \"~@sinequa/ngx-ui-builder/styles/ui-builder\";(Note that the Bootstrap utilities should not affect the styling of your app: they only introduce convenience styling such as display: flex for the class name d-flex)\nInitialize the configuration service with a blank configuration:\nimport { ConfigService } from '@sinequa/ngx-ui-builder';\n\n...\nexport class AppComponent {\n    \n  constructor(\n    public configService: ConfigService\n  ){\n    this.configService.init([]);\n  }Create a first zone in your application:\n\n    \n        Hello world\n    \nDisplay the configurator and toolbar (wrapped under a .uib-bootstrap element, so that these components are correctly styled):\n\n\n\n    \n        \n    \n\n    \n\n    \n        \n    \n      \n    \n\nUsage\nIntroduction\nA normal Angular application has HTML templates that look like this:\n\n    {{product.name}}\n    \n    {{product.description}}\n    \n        EUR {{product.price}}\n        Add to basket\n    \nThis template is fine, but it is static. If you need to change the layout, or change the price currency from \"EUR\" to \"USD\", then you need a developer to modify the app and rebuild it.\nWhat if the developer could transform the app into a set of modular building blocks, and let the users do what they want, with the simplicity of drag & drop and configuration forms?\nWith UI Builder, this can be achieved with the following steps:\n\nReplace the above template with a \"zone\", including the sub-templates that users will drag & drop and configure.\nDefine your default layout with configuration.\nInsert a configurator, with optional configurators for each sub-template\n\n1) Create a zone\nA zone is defined like this:\n\n\n    \n    \n        {{data.name}}\n    \n\n    \n    \n        {{data.description}}\n    \n    \n    \n    \n        \n    \n    \n    \n    \n        {{config.currency}} {{product.price}}\n        Add to basket\n    \n    \nWe pass a list of templates to the zone by transclusion. These templates are just regular Angular templates. They may include one or multiple Angular components, or just plain HTML. Notice that these templates have 2 inputs: data and config. data corresponds to variable data (such as the product price displayed in this example). config corresponds to any other parameter that does not depend on the data (like the price currency).\n2) Define a default layout\nThe zone defined above will display components according to a given configuration. This configuration should be initialized when the application starts.\nIn order to display one of the templates defined above, the configuration must include:\n\nA configuration object for that template\nA \"container\" that references that template\n\nEvery \"zone\" should have a \"container\" configuration corresponding to the \"root\" of these HTML elements:\nzone \"products\"\n|_ container \"products\"\n  |_ template \"name\"\n  |_ template \"description\"\n  |_ template \"image\"\n  |_ template \"price\"Note that this structure can be hierachical, as containers can include other containers.\nThis arborescence of configuration is defined like this:\nimport {Component, OnInit} from '@angular/core';\nimport {ConfigService} from 'ngx-ui-builder';\n\nexport class MyComponent implements OnInit {\n\n    constructor(\n        public configService: ConfigService\n    ){}\n\n    ngOnInit() {\n        this.configService.init([{\n            id: 'products',\n            type: '_container',\n            items: ['name', 'description', 'image', 'price']\n        },{\n            id: 'price',\n            type: 'price',\n            currency: 'EUR'\n        }]);\n    }\n}Notice that:\n\nEach configuration object is passed to the template, hence why it is possible to use the parameters with bindings like this: {{config.currency}}\nIt is possible to omit a trivial configuration object, if it does not have any configuration, like the \"name\", \"description\" and \"image\" templates. The library automatically creates a {id: 'name', type: 'name'} object\nThere is no obligation to have an equal id and type. In fact, the same template can be displayed multiple times, with different input configurations. The only constraint is that id must be unique, and type must refer to a template name (see Step 1)\n\nAt this point, the application is functional: the zone should display the templates, according to the configuration tree.\n3) Insert a configurator\nThe configurator is a component from the UI Builder library which is displayed when the user clicks on a component to configure it. It can display several built-in forms as well as (optional) custom forms corresponding to each of your templates.\nLike for the zones, the custom configurators are passed by transclusion.\n\n    \n    \n        \n        Currency\n        \n            Euro\n            Dollar\n        \n    \n\nFeatures\nState management\nConfiguration is at the heart of the UI Builder: It defines which components are displayed, their visual layout and which parameters they use.\nConfiguration is managed in a reactive store based on Elf (itself based on RxJS). Elf includes a state history which powers Undo/Redo buttons. Therefore, every action on the configuration (moving a component with drag & drop, creating a new component, or modifying its parameters) is undoable.\n\nAny change to the configuration is immediately visible in the UI, giving users a \"what you see is what you get experience\" (Wysiwyg).\nConfiguration can be easily synced with a server so that users always retrieve the application in the state they left it.\nHierarchical containers\nA container is a built-in type of component that displays sub-components (whose ids are listed in the items property):\n{\n    id: 'products',\n    type: '_container',\n    items: ['name', 'description', 'image', 'price']\n}Containers can contain other containers, which can contain other containers, and so on. This allows to create abritrarily complex layouts, with rows nested into columns, nested into rows, etc.\n\nConfiguration tree\nThe configuration tree can be used to visualize the configuration of each components. It represents the hierarchy of components within containers, within containers (etc.), within each zone.\nIt also allows to see the location of a component and select it directly, rather than having to look for it in the UI.\n\nDrag & drop\nComponents can be dragged and dropped intuitively within their zone. A component can be moved within its container, or within a different container.\nDrag & drop can also be used to drag new components in from a palette, or for removing a component from its zone.\nDrag & Drop is powered by the ngx-drag-drop library.\nComponent palettes\nPalettes of components are generated automatically based on the templates available to a zone. If a zone has 3 templates, then the palette will let you drag & drop any of those 3 templates anywhere into the zone, multiple times if needed.\nAdditionally, the palette lets users drag & drop new containers into existing containers.\nWhen a template has a custom configurator, this configurator is displayed in a modal prior to insertion, so that the user can initialize its configuration properly.\n\nForm templates\nComponents can have completely custom templates. These templates are passed by transclusion to the uib-configurator component, and are displayed when the user selects the component with a click, directly in the UI, or from the configuration tree.\nSimply pass a configurator template with the same name as the component template (in this case, \"foo\"):\n\n    \n    \n        Hello world\n        Lorem Ipsum...\n    \n\n\n...\n\n\n    \n    \n        \n        Show text\n    \nCustom layouts\nContainers use CSS flexbox to display inner elements with a wide range of options (direction, alignment, wrapping, etc.)\nContainers have a built-in configurator for configuring these flexbox property visually.\n\nConditional display\nSometimes a component should be displayed only in certain conditions. In a normal Angular application, one can simply use *ngIf to define these conditions.\nWith the UI Builder, users can configure conditions by using the \"Conditional display\" form:\n\nIn the above form:\n\n\"Data\" corresponds to the [data] input passed to the  component. It is possible to pass additional objects to a zone via [conditionsData].\n\"Field\" corresponds to the field name of the data object.\n\"Type\" can be \"equals\", or \"regular expression\", for more complex use cases\n\"Values\" lists all the values that the condition should verify. \"Not\" allows to negate the condition, and \"Display if any of the conditions is true\" allows to switch between \"AND\" and \"OR\" when there are multiple values.\n\nStyle encapsulation\nThe library is dependent on Bootstrap for the styling of its components (configurator, toolbar, built-in forms).\nHowever Bootstrap does not have to be loaded globally in the host application (as it may conflict with another styling framework). Instead, we encapsulate the Bootstrap CSS within a .uib-bootstrap selector.\nThis means the library can be integrated in the host application with the following pattern:\n\n  \n    \n\n    \n\n        ...\n\n    \nHowever, the host application still requires some additional styling and utilities to correctly display the dynamic components within a .\nThese styles can be integrated with the following lines:\n@import \"~bootstrap/dist/css/bootstrap-utilities.min\";\n@import \"~ngx-ui-builder/styles/ui-builder\";(Obviously, the first line can be ommited if you already use Bootstrap in your host application)\nStatic export\nCustomizing applications with UI Builder comes at a cost:\n\nThe source code of the application becomes more complex\nThe application becomes slower, as a result of being completely dynamic (templates are displayed as a result of a changing configuration)\n\nSo, at some point, it may be desirable to take the configuration and \"convert it\" into a normal, static, Angular application.\nThis can be achieved with one line of Angular CLI:\nng generate ngx-ui-builder:make-static -- --config=my-config.jsonThe make-static schematic takes as an input a JSON file containing the configuration of your application and generates HTML template(s) with the right templates in the right positions and with the right parameters passed as inputs. It also takes care of removing the ,  and  components from your app, as well as the import of the ui-builder stylesheet.\nAfter running this script, the app should compile and display your components exactly the same as before, but without a trace of the UI Builder in them anymore!\nInternationalization\nThe library has standard Angular i18n support.\nRunning ng extract-i18n for an application using ngx-ui-builder will extract all the strings marked for translation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Sinequa\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ConditionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigurableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfiguratorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicViewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SvgIconsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConditionsModule\n\n\n\ncluster_ConditionsModule_declarations\n\n\n\ncluster_ConditionsModule_exports\n\n\n\ncluster_ConfigurableModule\n\n\n\ncluster_ConfigurableModule_declarations\n\n\n\ncluster_ConfigurableModule_exports\n\n\n\ncluster_ConfiguratorModule\n\n\n\ncluster_ConfiguratorModule_declarations\n\n\n\ncluster_ConfiguratorModule_imports\n\n\n\ncluster_ConfiguratorModule_exports\n\n\n\ncluster_DynamicViewsModule\n\n\n\ncluster_DynamicViewsModule_declarations\n\n\n\ncluster_DynamicViewsModule_exports\n\n\n\ncluster_SvgIconsModule\n\n\n\ncluster_SvgIconsModule_declarations\n\n\n\ncluster_SvgIconsModule_exports\n\n\n\ncluster_UtilsModule\n\n\n\ncluster_UtilsModule_declarations\n\n\n\ncluster_UtilsModule_exports\n\n\n\n\nConditionPipe\n\nConditionPipe\n\n\n\nConditionsModule\n\nConditionsModule\n\nConditionsModule -->\n\nConditionPipe->ConditionsModule\n\n\n\n\n\nConditionPipe \n\nConditionPipe \n\nConditionPipe  -->\n\nConditionsModule->ConditionPipe \n\n\n\n\n\nConfigurableDirective\n\nConfigurableDirective\n\n\n\nConfigurableModule\n\nConfigurableModule\n\nConfigurableModule -->\n\nConfigurableDirective->ConfigurableModule\n\n\n\n\n\nConfigurableDirective \n\nConfigurableDirective \n\nConfigurableDirective  -->\n\nConfigurableModule->ConfigurableDirective \n\n\n\n\n\nDynamicViewsModule\n\nDynamicViewsModule\n\nDynamicViewsModule -->\n\nConfigurableModule->DynamicViewsModule\n\n\n\n\n\nClassEditorComponent\n\nClassEditorComponent\n\n\n\nConfiguratorModule\n\nConfiguratorModule\n\nConfiguratorModule -->\n\nClassEditorComponent->ConfiguratorModule\n\n\n\n\n\nConditionEditorComponent\n\nConditionEditorComponent\n\nConfiguratorModule -->\n\nConditionEditorComponent->ConfiguratorModule\n\n\n\n\n\nConfiguratorComponent\n\nConfiguratorComponent\n\nConfiguratorModule -->\n\nConfiguratorComponent->ConfiguratorModule\n\n\n\n\n\nFlexEditorComponent\n\nFlexEditorComponent\n\nConfiguratorModule -->\n\nFlexEditorComponent->ConfiguratorModule\n\n\n\n\n\nHtmlEditorComponent\n\nHtmlEditorComponent\n\nConfiguratorModule -->\n\nHtmlEditorComponent->ConfiguratorModule\n\n\n\n\n\nPaletteComponent\n\nPaletteComponent\n\nConfiguratorModule -->\n\nPaletteComponent->ConfiguratorModule\n\n\n\n\n\nSpacingEditorComponent\n\nSpacingEditorComponent\n\nConfiguratorModule -->\n\nSpacingEditorComponent->ConfiguratorModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nConfiguratorModule -->\n\nToolbarComponent->ConfiguratorModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nConfiguratorModule -->\n\nTreeComponent->ConfiguratorModule\n\n\n\n\n\nConfiguratorComponent \n\nConfiguratorComponent \n\nConfiguratorComponent  -->\n\nConfiguratorModule->ConfiguratorComponent \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nConfiguratorModule->ToolbarComponent \n\n\n\n\n\nUtilsModule \n\nUtilsModule \n\nUtilsModule  -->\n\nConfiguratorModule->UtilsModule \n\n\n\n\n\nSvgIconsModule\n\nSvgIconsModule\n\nConfiguratorModule -->\n\nSvgIconsModule->ConfiguratorModule\n\n\n\n\n\nSvgIconComponent \n\nSvgIconComponent \n\nSvgIconComponent  -->\n\nSvgIconsModule->SvgIconComponent \n\n\n\n\n\nUtilsModule\n\nUtilsModule\n\nConfiguratorModule -->\n\nUtilsModule->ConfiguratorModule\n\n\n\nDynamicViewsModule -->\n\nUtilsModule->DynamicViewsModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nUtilsModule->AutocompleteComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nUtilsModule->ModalComponent \n\n\n\n\n\nNgModelChangeDebouncedDirective \n\nNgModelChangeDebouncedDirective \n\nNgModelChangeDebouncedDirective  -->\n\nUtilsModule->NgModelChangeDebouncedDirective \n\n\n\n\n\nTemplateNameDirective \n\nTemplateNameDirective \n\nTemplateNameDirective  -->\n\nUtilsModule->TemplateNameDirective \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nUtilsModule->ToastComponent \n\n\n\n\n\nTooltipDirective \n\nTooltipDirective \n\nTooltipDirective  -->\n\nUtilsModule->TooltipDirective \n\n\n\n\n\nItemComponent\n\nItemComponent\n\nDynamicViewsModule -->\n\nItemComponent->DynamicViewsModule\n\n\n\n\n\nZoneComponent\n\nZoneComponent\n\nDynamicViewsModule -->\n\nZoneComponent->DynamicViewsModule\n\n\n\nUtilsModule  -->\n\nDynamicViewsModule->UtilsModule \n\n\n\n\n\nZoneComponent \n\nZoneComponent \n\nZoneComponent  -->\n\nDynamicViewsModule->ZoneComponent \n\n\n\n\n\nSvgIconComponent\n\nSvgIconComponent\n\nSvgIconsModule -->\n\nSvgIconComponent->SvgIconsModule\n\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\nUtilsModule -->\n\nAutocompleteComponent->UtilsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nUtilsModule -->\n\nModalComponent->UtilsModule\n\n\n\n\n\nNgModelChangeDebouncedDirective\n\nNgModelChangeDebouncedDirective\n\nUtilsModule -->\n\nNgModelChangeDebouncedDirective->UtilsModule\n\n\n\n\n\nTemplateNameDirective\n\nTemplateNameDirective\n\nUtilsModule -->\n\nTemplateNameDirective->UtilsModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nUtilsModule -->\n\nToastComponent->UtilsModule\n\n\n\n\n\nTooltipDirective\n\nTooltipDirective\n\nUtilsModule -->\n\nTooltipDirective->UtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BsStyle   (projects/.../toast.service.ts)\n                        \n                        \n                            Mutable   (projects/.../types.helpers.ts)\n                        \n                        \n                            TooltipPlacement   (projects/.../tooltip.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/utils/toast/toast.service.ts\n    \n    \n        \n            \n                \n                    \n                    BsStyle\n                \n            \n            \n                \n                        \"info\" | \"success\" | \"warning\" | \"danger\" | \"primary\" | \"secondary\" | \"light\" | \"dark\"\n\n                \n            \n        \n    \n    projects/lib/src/utils/types.helpers.ts\n    \n    \n        \n            \n                \n                    \n                    Mutable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/lib/src/utils/tooltip.directive.ts\n    \n    \n        \n            \n                \n                    \n                    TooltipPlacement\n                \n            \n            \n                \n                        \"auto\" | \"top\" | \"bottom\" | \"left\" | \"right\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfiguratorOptions   (projects/.../configurator.component.ts)\n                        \n                        \n                            defaultPaletteOptions   (projects/.../palette.component.ts)\n                        \n                        \n                            icons   (projects/.../svg-icons.ts)\n                        \n                        \n                            SVG_ICONS   (projects/.../types.ts)\n                        \n                        \n                            SVG_ICONS_CONFIG   (projects/.../types.ts)\n                        \n                        \n                            SVG_MISSING_ICON_FALLBACK   (projects/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/configurator/configurator.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultConfiguratorOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfiguratorOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  paletteOptions: defaultPaletteOptions,\n  showFlexEditor: true,\n  showHtmlEditor: true,\n  showCssClasses: true,\n  showSpacingEditor: true,\n  showConditionalDisplay: true,\n  showRemove: true,\n  showDuplicate: true\n}\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/configurator/palette/palette.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPaletteOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaletteOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  enableSubcontainers: true,\n  enableRawHtml: true,\n  rawHtmlPlaceholder: \"Edit me\",\n  showStandardPalette: true,\n  showExistingPalette: true\n}\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/svg/svg-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SvgIconType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'align_x_center',\n    data: ``\n  },\n  {\n    name: 'align_x_end',\n    data: ``\n  },\n  {\n    name: 'align_x_space_around',\n    data: ``\n  },\n  {\n    name: 'align_x_space_between',\n    data: ``\n  },\n  {\n    name: 'align_x_start',\n    data: ``\n  },\n  {\n    name: 'align_x_stretch',\n    data: ``\n  },\n  {\n    name: 'align_y_baseline',\n    data: ``\n  },\n  {\n    name: 'align_y_center',\n    data: ``\n  },\n  {\n    name: 'align_y_end',\n    data: ``\n  },\n  {\n    name: 'align_y_start',\n    data: ``\n  },\n  {\n    name: 'align_y_stretch',\n    data: ``\n  },\n  {\n    name: 'arrow_down',\n    data: ``\n  },\n  {\n    name: 'arrow_forward',\n    data: ``\n  },\n  {\n    name: 'tree',\n    data: ``\n  },\n  {\n    name: 'undo',\n    data: ``\n  },\n  {\n    name: 'redo',\n    data: ``\n  },\n  {\n    name: 'trash',\n    data: ``\n  },\n  {\n    name: 'grip',\n    data: ``\n  },\n  {\n    name: 'eye',\n    data: ``\n  },\n  {\n    name: 'eye_slash',\n    data: ``\n  },\n  {\n    name: 'space-xs',\n    data: ``\n  },\n  {\n    name: 'space-s',\n    data: ``\n  },\n  {\n    name: 'space-m',\n    data: ``\n  },\n  {\n    name: 'space-l',\n    data: ``\n  },\n  {\n    name: 'space-xl',\n    data: ``\n  },\n  {\n    name: 'direction-bottom',\n    data: ``\n  },\n  {\n    name: 'direction-left',\n    data: ``\n  },\n  {\n    name: 'direction-right',\n    data: ``\n  },\n  {\n    name: 'direction-top',\n    data: ``\n  },\n  {\n    name: 'direction-left-right',\n    data: ``\n  },\n  {\n    name: 'direction-top-bottom',\n    data: ``\n  },\n  {\n    name: 'direction-left-right-top-bottom',\n    data: ``\n  }\n]\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/utils/svg-icon/types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SVG_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SVG_ICONS')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_ICONS_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SVG_ICONS_CONFIG')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_MISSING_ICON_FALLBACK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SVG_MISSING_ICON_FALLBACK')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
